<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mozu.Api</name>
    </assembly>
    <members>
        <member name="T:Mozu.Api.Events.EventHttpHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Events.EventHttpHandler.#ctor(Mozu.Api.Events.IEventServiceFactory)">
            <summary>
            
            </summary>
            <param name="eventServiceFactory"></param>
        </member>
        <member name="T:Mozu.Api.Filters.CapabilityAuthFilter">
            <summary>
            Validate Capability Request from Mozu
            </summary>
        </member>
        <member name="T:Mozu.Api.Contracts.AppDev.AuthTicket">
            
            	Properties of the authentication ticket used to authenticate applications.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AuthTicket.AccessToken">
            
            Alphanumeric string used to authenticate the user in API request headers. The token stores an encrypted list of the application's configured behaviors and authenticates the application.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AuthTicket.AccessTokenExpiration">
            
            The date and time the user access token expires. If the token will expire, a new token will need to be generated and assigned to the account to continue and restore access to the store, data, and account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AuthTicket.RefreshToken">
            
            Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AuthTicket.RefreshTokenExpiration">
            
            The date and time the developer account or application refresh token expires.
            
        </member>
        <member name="M:Mozu.Api.Utilities.ResponseHelper.EnsureSuccess(System.Net.Http.HttpResponseMessage,System.Net.Http.HttpRequestMessage,Mozu.Api.IApiContext)">
            <summary>
            Validate HttpResponse message, throws an Api Exception with context
            </summary>
            <param name="response"></param>
            <param name="request"></param>
            <param name="apiContext"></param>
            <exception cref="T:Mozu.Api.ApiException"></exception>
        </member>
        <member name="T:Mozu.Api.MozuClient`1">
            <summary>
            
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="T:Mozu.Api.MozuClient`2">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mozu.Api.MozuClient">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mozu.Api.Security.AppAuthenticator">
            <summary>
            This class handles Mozu application authentication.
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.AppAuthenticator.#ctor(Mozu.Api.Contracts.AppDev.AppAuthInfo,System.String,Mozu.Api.Security.RefreshInterval)">
            <summary>
            This contructor does application authentication and setups up the necessary timers to keep the app auth ticket valid.
            </summary>
            <param name="appId">The application version's app id</param>
            <param name="sharedSecret">The application version's shared secret</param>
            <param name="baseAppAuthUrl">The base URL of the Mozu application authentication service</param>
        </member>
        <member name="M:Mozu.Api.Security.AppAuthenticator.AuthenticateApp">
            <summary>
            Do application authentication
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.AppAuthenticator.RefreshAppAuthTicket">
            <summary>
            Refresh the application auth ticket using the refresh token
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.AppAuthenticator.EnsureAuthTicket">
            <summary>
            Ensure that the auth ticket is valid.  If not, then make it so.  Will be used when not using timers to keep the auth ticket alive (i.e. "on demand" mode).
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.AppAuthenticator.AddHeader(System.Net.Http.HttpClient)">
            <summary>
            This method adds the necessary app claims header to a http client to allow authorized calls to Mozu services
            </summary>
            <param name="client">The http client for which to add the header</param>
        </member>
        <member name="P:Mozu.Api.Security.AppAuthenticator.AppAuthTicket">
            <summary>
            The application auth ticket
            </summary>
        </member>
        <member name="P:Mozu.Api.Security.AppAuthenticator.BaseUrl">
            <summary>
            The baseUrl for App Auth.  Once an app auths with this base url, all subsequent MOZU API calls will go to this base url.
            </summary>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Admin.LocationClient">
            <summary>
            Use the Locations resource to manage each physical location associated with a tenant. Locations enable tenants to associate a physical address with product inventory, provide a store finder for in-store pickup, or both. Locations that support inventory can use both direct ship and in-store pickup fulfillment types.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationClient.GetLocationsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of all locations associated with a tenant, according to any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocations( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var locationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationClient.GetLocationClient(System.String,System.String)">
            <summary>
            Retrieves the details of the location specified in the request by location code.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocation( locationCode,  responseFields);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationClient.AddLocationClient(Mozu.Api.Contracts.Location.Location,System.String)">
            <summary>
            Creates a new physical location for the tenant specified in the request header.
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="location">Properties of a physical location a tenant uses to manage inventory and fulfills orders, provide store finder functionality, or both.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddLocation( location,  responseFields);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationClient.UpdateLocationClient(Mozu.Api.Contracts.Location.Location,System.String,System.String)">
            <summary>
            Updates one or more details of a the location specified in the request by location code.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="location">Properties of a physical location a tenant uses to manage inventory and fulfills orders, provide store finder functionality, or both.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateLocation( location,  locationCode,  responseFields);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationClient.DeleteLocationClient(System.String)">
             <summary>
             Deletes the location specified in the request.
             </summary>
             <param name="locationCode">The unique, user-defined code that identifies a location. </param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteLocation( locationCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Admin.LocationTypeClient">
            <summary>
            Use the Location Types resource to manage the types of locations your tenant maintains, such as warehouses, physical storefronts, and kiosks.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationTypeClient.GetLocationTypesClient">
            <summary>
            Retrieve a list of all location types defined for the tenant.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Location.LocationType"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationTypes();
              var locationTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationTypeClient.GetLocationTypeClient(System.String,System.String)">
            <summary>
            Retrieves the details of the location type specified in the request.
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationType( locationTypeCode,  responseFields);
              var locationTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationTypeClient.AddLocationTypeClient(Mozu.Api.Contracts.Location.LocationType,System.String)">
            <summary>
            Creates a new location type based on the information specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="locationType">Properties of a type of physical location, such as warehouse or kiosk. Location types enable tenants to group similar locations for filtering and location usage type definition.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddLocationType( locationType,  responseFields);
              var locationTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationTypeClient.UpdateLocationTypeClient(Mozu.Api.Contracts.Location.LocationType,System.String,System.String)">
            <summary>
            Updates the name of a defined location type.
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="locationType">Properties of a type of physical location, such as warehouse or kiosk. Location types enable tenants to group similar locations for filtering and location usage type definition.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateLocationType( locationType,  locationTypeCode,  responseFields);
              var locationTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationTypeClient.DeleteLocationTypeClient(System.String)">
             <summary>
             Deletes the location type specified in the request.
             </summary>
             <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteLocationType( locationTypeCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.CartClient">
            <summary>
            Use this resource to manage storefront shopping carts as shoppers add and remove items for purchase. Each time a shopper's cart is modified, the Carts resource updates the estimated total with any applicable discounts.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.GetCartClient(System.String,System.String)">
            <summary>
            Retrieves the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCart( cartId,  responseFields);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.GetOrCreateCartClient(System.String)">
            <summary>
            Retrieves a cart's contents for the current shopper. If the shopper does not have an active cart on the site, the service creates one.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrCreateCart( responseFields);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.GetCartSummaryClient(System.String)">
            <summary>
            Retrieves summary information associated with the cart of the current shopper, including the number of items, the current total, and whether the cart has expired. All anonymous idle carts that do not proceed to checkout expire after 14 days.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCartSummary( responseFields);
              var cartSummaryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.GetUserCartSummaryClient(System.String,System.String)">
            <summary>
            Retrieves summary information associated with the cart of user specified in the request, including the number of items in the cart, the current total, and whether the cart has expired. All anonymous idle carts that do not proceed to checkout expire after 14 days.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetUserCartSummary( userId,  responseFields);
              var cartSummaryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.GetUserCartClient(System.String,System.String)">
            <summary>
            Retrieves the cart of the user specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetUserCart( userId,  responseFields);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.UpdateCartClient(Mozu.Api.Contracts.CommerceRuntime.Carts.Cart,System.String)">
            <summary>
            Update the current shopper's cart.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="cart">Properties of a shopping cart.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCart( cart,  responseFields);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.DeleteCartClient(System.String)">
             <summary>
             Deletes the cart specified in the request.
             </summary>
             <param name="cartId">Identifier of the cart to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteCart( cartId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.DeleteCurrentCartClient">
             <summary>
             Deletes the cart of the currently active shopper.
             </summary>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteCurrentCart();
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Carts.AppliedDiscountClient">
            <summary>
            Use the Cart Coupons resource to apply a coupon to a defined cart or remove a coupon from a cart. When the shopper proceeds to checkout, the coupons applied to the cart apply to the order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.AppliedDiscountClient.ApplyCouponClient(System.String,System.String,System.String)">
            <summary>
            Applies a defined coupon to the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="couponCode">Code associated with the coupon to remove from the cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ApplyCoupon( cartId,  couponCode,  responseFields);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.AppliedDiscountClient.RemoveCouponsClient(System.String)">
            <summary>
            Removes one or more applied coupons from the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveCoupons( cartId);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.AppliedDiscountClient.RemoveCouponClient(System.String,System.String)">
            <summary>
            Removes an applied coupon from the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="couponCode">Code associated with the coupon to remove from the cart.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveCoupon( cartId,  couponCode);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Carts.CartItemClient">
            <summary>
            Use the Cart Items subresource to manage a collection of items in an active shopping cart.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.GetCartItemClient(System.String,System.String)">
            <summary>
            Retrieves a particular cart item by providing the cart item ID.
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCartItem( cartItemId,  responseFields);
              var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.GetCartItemsClient(System.String)">
            <summary>
            Retrieves a list of cart items including the total number of items in the cart.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCartItems( responseFields);
              var cartItemCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.AddItemToCartClient(Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem,System.String)">
            <summary>
            Adds a product to the current shopper's cart.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="cartItem">Properties of an item added to an active shopping cart.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddItemToCart( cartItem,  responseFields);
              var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.UpdateCartItemQuantityClient(System.String,System.Int32,System.String)">
            <summary>
            Update the quantity of an individual cart item in the cart of the current shopper.
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCartItemQuantity( cartItemId,  quantity,  responseFields);
              var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.UpdateCartItemClient(Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem,System.String,System.String)">
            <summary>
            Update the product or product quantity of an item in the current shopper's cart.
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="cartItem">Properties of an item added to an active shopping cart.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCartItem( cartItem,  cartItemId,  responseFields);
              var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.RemoveAllCartItemsClient">
            <summary>
            Removes all items in the current shopper's active cart.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveAllCartItems();
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.DeleteCartItemClient(System.String)">
             <summary>
             Deletes a specific cart item by providing the cart item ID.
             </summary>
             <param name="cartItemId">Identifier of the cart item to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteCartItem( cartItemId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Carts.ChangeMessageClient">
            <summary>
            Use the Cart Messages resource to retrieve messages for live carts that the system logs when a product's price or inventory level changes.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.ChangeMessageClient.GetMessagesClient(System.String)">
            <summary>
            Retrieves the messages associated with the current shopper's cart.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetMessages( responseFields);
              var cartChangeMessageCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.ChangeMessageClient.RemoveAllMessagesClient">
             <summary>
             Deletes all messages associated with the cart of the current shopper.
             </summary>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=RemoveAllMessages();
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.ChangeMessageClient.RemoveMessageClient(System.String)">
             <summary>
             Removes a single message associated with the cart of the current shopper.
             </summary>
             <param name="messageId">Identifier of the message to remove from the cart.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=RemoveMessage( messageId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Carts.ExtendedPropertyClient">
            <summary>
            commerce/carts/cartextendedproperties related resources. DOCUMENT_HERE 
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.ExtendedPropertyClient.GetExtendedPropertiesClient">
            <summary>
            carts-cartextendedproperties Get GetExtendedProperties description DOCUMENT_HERE 
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtendedProperties();
              var extendedPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.ExtendedPropertyClient.AddExtendedPropertiesClient(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty})">
            <summary>
            carts-cartextendedproperties Post AddExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="extendedProperties">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=AddExtendedProperties( extendedProperties);
              var extendedPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.ExtendedPropertyClient.UpdateExtendedPropertyClient(Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            carts-cartextendedproperties Put UpdateExtendedProperty description DOCUMENT_HERE 
            </summary>
            <param name="key"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="upsert"></param>
            <param name="extendedProperty">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateExtendedProperty( extendedProperty,  key,  upsert,  responseFields);
              var extendedPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.ExtendedPropertyClient.UpdateExtendedPropertiesClient(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty},System.Nullable{System.Boolean})">
            <summary>
            carts-cartextendedproperties Put UpdateExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="upsert"></param>
            <param name="extendedProperties">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateExtendedProperties( extendedProperties,  upsert);
              var extendedPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.ExtendedPropertyClient.DeleteExtendedPropertiesClient(System.Collections.Generic.List{System.String})">
             <summary>
             carts-cartextendedproperties Delete DeleteExtendedProperties description DOCUMENT_HERE 
             </summary>
             <param name="keys"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteExtendedProperties( keys);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.ExtendedPropertyClient.DeleteExtendedPropertyClient(System.String)">
             <summary>
             carts-cartextendedproperties Delete DeleteExtendedProperty description DOCUMENT_HERE 
             </summary>
             <param name="key"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteExtendedProperty( key);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient">
            <summary>
            Use the Attribute Definition resource to manage the properties, options, and extras that uniquely describe products of a specific type. Attributes can be associated with a product type, assigned values by a client or shopper, and added as faceted search filters for a product category. Options are product attributes that describe unique configurations made by the shopper, such as size or color, and generate a new product variation (or unique SKU). Properties are product attributes that describe aspects of the product that do not represent an option configurable by the shopper, such as screen resolution or brand. Extras are product attributes that describe add-on configurations made by the shopper that do not represent a product variation, such as a monogram.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.GetAttributesClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a paged list of attributes according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributes( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var attributeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.GetAttributeClient(System.String,System.String)">
            <summary>
            Retrieves the details of the specified product attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttribute( attributeFQN,  responseFields);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.AddAttributeClient(Mozu.Api.Contracts.ProductAdmin.Attribute,System.String)">
            <summary>
            Creates a new attribute to describe one aspect of a product such as color or size, based on its defined product type. The attribute name, attribute type, input type, and data type are required.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attribute">Properties of an attribute used to describe customers or orders.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAttribute( attribute,  responseFields);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.UpdateAttributeClient(Mozu.Api.Contracts.ProductAdmin.Attribute,System.String,System.String)">
            <summary>
            Updates an existing attribute with attribute properties to set.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attribute">Properties of an attribute used to describe customers or orders.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAttribute( attribute,  attributeFQN,  responseFields);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.DeleteAttributeClient(System.String)">
             <summary>
             Deletes a defined product attribute. You cannot delete an attribute assigned a value for a product.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAttribute( attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentClient">
            <summary>
            Properties of localized content for attributes, based on a `localeCode` at a site/tenant level. This content supports translated text for product, product options, and additional objects. 
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentClient.GetAttributeLocalizedContentsClient(System.String)">
            <summary>
            Retrieves a collection of localized content for attributes based on a `localeCode`.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeLocalizedContents( attributeFQN);
              var attributeLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentClient.GetAttributeLocalizedContentClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the localized content for an attribute  based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeLocalizedContent( attributeFQN,  localeCode,  responseFields);
              var attributeLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentClient.AddLocalizedContentClient(Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent,System.String,System.String)">
            <summary>
            Adds new localized content for an attribute  based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized name and description of the attribute, displayed in the locale defined for the master catalog.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddLocalizedContent( localizedContent,  attributeFQN,  responseFields);
              var attributeLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentClient.UpdateLocalizedContentsClient(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent},System.String)">
            <summary>
            Updates the localized content for a collection of existing attributes  based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized name and description of the attribute, displayed in the locale defined for the master catalog.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateLocalizedContents( localizedContent,  attributeFQN);
              var attributeLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentClient.UpdateLocalizedContentClient(Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent,System.String,System.String,System.String)">
            <summary>
            Updates the localized content for an existing attribute  based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized name and description of the attribute, displayed in the locale defined for the master catalog.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateLocalizedContent( localizedContent,  attributeFQN,  localeCode,  responseFields);
              var attributeLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentClient.DeleteLocalizedContentClient(System.String,System.String)">
             <summary>
             Removes all localized content. Localized content is translated text information and data based on a `localeCode`. 
             </summary>
             <param name="attributeFQN">Fully qualified name for an attribute.</param>
             <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteLocalizedContent( attributeFQN,  localeCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleClient">
            <summary>
            Type rules are subresources of product attributes which could be specifications that can be shared across products in a store or assigned to specific products. Attribute type rules provide definitions of how attribute types will appear on the user interface.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleClient.GetAttributeTypeRulesClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of attribute type rules according to optional filter criteria and sort options. Attribute type rules help drive the behavior of attributes on a storefront page.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeTypeRules( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var attributeTypeRuleCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient">
            <summary>
            Vocabulary values are predefined for an attribute.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.GetAttributeVocabularyValuesClient(System.String)">
            <summary>
            Retrieves a list of vocabulary values defined for the attribute specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeVocabularyValues( attributeFQN);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.GetAttributeVocabularyValueLocalizedContentsClient(System.String,System.String)">
            <summary>
            Retrieves a collection of localized content for vocabulary value attributes based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeVocabularyValueLocalizedContents( attributeFQN,  value);
              var attributeVocabularyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.GetAttributeVocabularyValueLocalizedContentClient(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the localized content for a vocabulary value attribute based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeVocabularyValueLocalizedContent( attributeFQN,  value,  localeCode,  responseFields);
              var attributeVocabularyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.GetAttributeVocabularyValueClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a vocabulary value defined for an attribute by providing the attribute's fully qualified name and the value to retrieve.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeVocabularyValue( attributeFQN,  value,  responseFields);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.AddAttributeVocabularyValueLocalizedContentClient(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent,System.String,System.String,System.String)">
            <summary>
            Creates and saves localized vocabulary value content for an attribute, based on the `localeCode`.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized text for the string value of a product attribute.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAttributeVocabularyValueLocalizedContent( localizedContent,  attributeFQN,  value,  responseFields);
              var attributeVocabularyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.AddAttributeVocabularyValueClient(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue,System.String,System.String)">
            <summary>
            Creates a vocabulary value for a defined product attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeVocabularyValue">Properties of a vocabulary value defined for an extensible attribute.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAttributeVocabularyValue( attributeVocabularyValue,  attributeFQN,  responseFields);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.UpdateAttributeVocabularyValuesClient(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue},System.String)">
            <summary>
            Update existing vocabulary values for an attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="vocabularyValues">Properties of a vocabulary value defined for an extensible attribute.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAttributeVocabularyValues( vocabularyValues,  attributeFQN);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.UpdateAttributeVocabularyValueLocalizedContentsClient(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent},System.String,System.String)">
            <summary>
            Updates a collection of localized vocabulary value content for existing attributes, based on the `localeCode`.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized text for the string value of a product attribute.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAttributeVocabularyValueLocalizedContents( localizedContent,  attributeFQN,  value);
              var attributeVocabularyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.UpdateAttributeVocabularyValueLocalizedContentClient(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent,System.String,System.String,System.String,System.String)">
            <summary>
            Updates localized vocabulary value content for an existing attribute, based on the `localeCode`.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">The two character country code that sets the locale, such as US for United States. Sites, tenants, and catalogs use locale codes for localizing content, such as translated product text per supported country.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized text for the string value of a product attribute.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAttributeVocabularyValueLocalizedContent( localizedContent,  attributeFQN,  value,  localeCode,  responseFields);
              var attributeVocabularyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.UpdateAttributeVocabularyValueClient(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue,System.String,System.String,System.String)">
            <summary>
            Updates existing attribute vocabulary values.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeVocabularyValue">Properties of a vocabulary value defined for an extensible attribute.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAttributeVocabularyValue( attributeVocabularyValue,  attributeFQN,  value,  responseFields);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.DeleteAttributeVocabularyValueClient(System.String,System.String)">
             <summary>
             Deletes an attribute's vocabulary value.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="value">The value string to create.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAttributeVocabularyValue( attributeFQN,  value);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.DeleteAttributeVocabularyValueLocalizedContentClient(System.String,System.String,System.String)">
             <summary>
             Removes localized content for a vocabulary value attribute. 
             </summary>
             <param name="attributeFQN">Fully qualified name for an attribute.</param>
             <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
             <param name="value">The value string to create.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAttributeVocabularyValueLocalizedContent( attributeFQN,  value,  localeCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient">
            <summary>
            Use the Product Types resource to manage the types for your product catalog. Product types act as configuration templates, which store a set of attributes common to all products associated with that type. Unlike categories, products can only be associated with a single product type.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.GetProductTypesClient(Mozu.Api.DataViewMode,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of product types according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductTypes(dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var productTypeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.GetProductTypeClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
            <summary>
            Retrieves the details of the product type specified in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductType(dataViewMode,  productTypeId,  responseFields);
              var productTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.AddProductTypeClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductType,System.String)">
            <summary>
            Creates a new product type based on the information supplied in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productType">A product type is like a product template.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProductType(dataViewMode,  productType,  responseFields);
              var productTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.UpdateProductTypeClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductType,System.Int32,System.String)">
            <summary>
            Updates one or more properties of a product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productType">A product type is like a product template.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductType(dataViewMode,  productType,  productTypeId,  responseFields);
              var productTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.DeleteProductTypeClient(Mozu.Api.DataViewMode,System.Int32)">
             <summary>
             Deletes the product type by providing the product type ID.
             </summary>
             <param name="productTypeId">Identifier of the product type.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProductType(dataViewMode,  productTypeId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient">
            <summary>
            Use the Extras subresource to define how a product attribute classified as an "extra" is used for a specific product type. Product attribute defintions are unique for each associated product type.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.GetExtrasClient(Mozu.Api.DataViewMode,System.Int32)">
            <summary>
            Retrieves a list of extra attributes defined for the specified product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtras(dataViewMode,  productTypeId);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.GetExtraClient(Mozu.Api.DataViewMode,System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of an extra attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtra(dataViewMode,  productTypeId,  attributeFQN,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.AddExtraClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String)">
            <summary>
            Assigns a defined extra attribute to the product type based on the information supplied in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddExtra(dataViewMode,  attributeInProductType,  productTypeId,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.UpdateExtraClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String,System.String)">
            <summary>
            Update the definition of an extra attribute for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateExtra(dataViewMode,  attributeInProductType,  productTypeId,  attributeFQN,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.DeleteExtraClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
             <summary>
             Removes an extra attribute definition from the specified product type.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productTypeId">Identifier of the product type.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteExtra(dataViewMode,  productTypeId,  attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient">
            <summary>
            Use the Options subresource to define how an option attribute is used for a specific product type. Product attribute definitions are unique for each associated product type.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient.GetOptionsClient(Mozu.Api.DataViewMode,System.Int32)">
            <summary>
            Retrieves a list of option product attributes defined for the specified product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetOptions(dataViewMode,  productTypeId);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient.GetOptionClient(Mozu.Api.DataViewMode,System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of an option attribute defined for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOption(dataViewMode,  productTypeId,  attributeFQN,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient.AddOptionClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String)">
            <summary>
            Assigns an option attribute to the product type based on the information supplied in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddOption(dataViewMode,  attributeInProductType,  productTypeId,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient.UpdateOptionClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String,System.String)">
            <summary>
            Updates an option attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOption(dataViewMode,  attributeInProductType,  productTypeId,  attributeFQN,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient.DeleteOptionClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
             <summary>
             Removes an option attribute definition for the specified product type.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productTypeId">Identifier of the product type.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteOption(dataViewMode,  productTypeId,  attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient">
            <summary>
            Use the Properties subresource to define how property product attributes are used for a specific product type. Product attribute definitions are unique for each associated product type.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient.GetPropertiesClient(Mozu.Api.DataViewMode,System.Int32)">
            <summary>
            Retrieves a list of product property attributes defined for a product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetProperties(dataViewMode,  productTypeId);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient.GetPropertyClient(Mozu.Api.DataViewMode,System.Int32,System.String,System.String)">
            <summary>
            Retrieves a product property attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProperty(dataViewMode,  productTypeId,  attributeFQN,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient.AddPropertyClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String)">
            <summary>
            Assigns a property attribute to the specified product type, according to the information defined in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProperty(dataViewMode,  attributeInProductType,  productTypeId,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient.UpdatePropertyClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String,System.String)">
            <summary>
            Updates the definition of a property attribute for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProperty(dataViewMode,  attributeInProductType,  productTypeId,  attributeFQN,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient.DeletePropertyClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
             <summary>
             Removes a property attribute previously defined for the specified product type.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productTypeId">Identifier of the product type.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProperty(dataViewMode,  productTypeId,  attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationClient">
            <summary>
            Use the variations resource to preview possible product variations for a specific product type based on the option attributes defined for the product type, such as size or color.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationClient.GenerateProductVariationsClient(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductOption},System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Generates the variations possible for a product associated with the product type based on the option values supplied in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode"></param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productOptionsIn">Properties of the product option to create such as attribute detail, fully qualified name, and list of product option values.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GenerateProductVariations( productOptionsIn,  productTypeId,  productCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var productVariationPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient">
            <summary>
            Use the Categories resource to organize products and control where they appear on the storefront. Create and maintain a hierarchy of categories and subcategories where the site will store properties.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.GetCategoriesClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategories( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var categoryPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.GetChildCategoriesClient(System.Int32,System.String)">
            <summary>
            Retrieves the list of subcategories within a category.
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetChildCategories( categoryId,  responseFields);
              var categoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.GetCategoryClient(System.Int32,System.String)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategory( categoryId,  responseFields);
              var categoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.AddCategoryClient(Mozu.Api.Contracts.ProductAdmin.Category,System.Nullable{System.Boolean},System.String)">
            <summary>
            Adds a new category to the site's category hierarchy. Specify a ParentCategoryID to determine where to place the category in the hierarchy. If no ParentCategoryID is specified, the new category is a top-level category.
            </summary>
            <param name="incrementSequence">If true, when adding a new product category, set the sequence number of the new category to an increment of one integer greater than the maximum available sequence number across all product categories. If false, set the sequence number to zero.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="category">A descriptive container that groups products. A category is merchant defined with associated products and discounts as configured. GThe storefront displays products in a hierarchy of categories. As such, categories can include a nesting of sub-categories to organize products and product options per set guidelines such as color, brand, material, and size.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddCategory( category,  incrementSequence,  responseFields);
              var categoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.UpdateCategoryClient(Mozu.Api.Contracts.ProductAdmin.Category,System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Update the properties of a defined category or move it to another location in the category hierarchy. Because this operation replaces the defined resource,include all the information to maintain for the category in the request.
            </summary>
            <param name="cascadeVisibility">If true, when changing the display option for the category, change it for all subcategories also. Default: False.</param>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="category">A descriptive container that groups products. A category is merchant defined with associated products and discounts as configured. GThe storefront displays products in a hierarchy of categories. As such, categories can include a nesting of sub-categories to organize products and product options per set guidelines such as color, brand, material, and size.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCategory( category,  categoryId,  cascadeVisibility,  responseFields);
              var categoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.DeleteCategoryByIdClient(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
             <summary>
             Deletes the category specified by its category ID.
             </summary>
             <param name="cascadeDelete">If true, also delete all subcategories associated with the specified category.</param>
             <param name="categoryId">Unique identifier of the category to modify.</param>
             <param name="forceDelete"></param>
             <param name="reassignToParent"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteCategoryById( categoryId,  cascadeDelete,  forceDelete,  reassignToParent);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient">
            <summary>
            Define and manage discounts to apply to products, product categories, or orders. The discounts can be a specified amount off the price, percentage off the price, or for free shipping. Create a coupon code that shoppers can use to redeem the discount.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountsClient(Mozu.Api.DataViewMode,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of discounts according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDiscounts(dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var discountCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountContentClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
            <summary>
            Retrieves the localized content specified for the specified discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDiscountContent(dataViewMode,  discountId,  responseFields);
              var discountLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
            <summary>
            Retrieves the details of a single discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDiscount(dataViewMode,  discountId,  responseFields);
              var discountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GenerateRandomCouponClient(System.String)">
            <summary>
            Generates a random code for a coupon.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{string}
            </returns>
            <example>
            <code>
              var mozuClient=GenerateRandomCoupon( responseFields);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.CreateDiscountClient(Mozu.Api.Contracts.ProductAdmin.Discount,System.String)">
            <summary>
            Creates a new discount or coupon to apply to a product, category, order, or shipping.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="discount">Name of the discount added and applied to a shopping cart and order for a shopper's purchase. </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDiscount( discount,  responseFields);
              var discountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UpdateDiscountContentClient(Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent,System.Int32,System.String)">
            <summary>
            Updates the localizable content for the specified discount or rename the discount without modifying its other properties.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="content">The container for the language-specific name of the discount. A container exists for each supported language (LocaleCode). This parameter enables you to display the discount name in multiple languages yet manage it as a single discount internally.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDiscountContent( content,  discountId,  responseFields);
              var discountLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UpdateDiscountClient(Mozu.Api.Contracts.ProductAdmin.Discount,System.Int32,System.String)">
            <summary>
            Updates one or more properties of a defined discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="discount">Name of the discount added and applied to a shopping cart and order for a shopper's purchase. </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDiscount( discount,  discountId,  responseFields);
              var discountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.DeleteDiscountClient(System.Int32)">
             <summary>
             Deletes a discount specified by its discount ID.
             </summary>
             <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDiscount( discountId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Discounts.DiscountTargetClient">
            <summary>
            Retrieves and modifies the products, categories, and shipping methods eligible for discounts in the form of a fixed dollar amount, percentage off a product price, or free shipping.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Discounts.DiscountTargetClient.GetDiscountTargetClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
            <summary>
            Retrieves the discount target, that is which products, categories, or shipping methods are eligible for the discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDiscountTarget(dataViewMode,  discountId,  responseFields);
              var discountTargetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Discounts.DiscountTargetClient.UpdateDiscountTargetClient(Mozu.Api.Contracts.ProductAdmin.DiscountTarget,System.Int32,System.String)">
            <summary>
            Modifies properties of the discount target, for example, the dollar amount, or precentage off the price.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="discountTarget">Properties of the target to which the discount applies, such as the type of discount and which products, categories, or shipping methods are eligible for the discount and the properties of this discount target.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDiscountTarget( discountTarget,  discountId,  responseFields);
              var discountTargetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient">
            <summary>
            Use the Facets resource to manage the facets shoppers use to filter product display results on a storefront. Facets can include categories, product attributes, or prices, and use either a range of values or discrete values.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.GetFacetClient(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a facet specified by its unique identifier and displays its properties.
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetFacet( facetId,  validate,  responseFields);
              var facetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.GetFacetCategoryListClient(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of the facets defined for the specified category.
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="includeAvailable">If true, returns a list of the attributes and categories associated with a product type that have not been defined as a facet for the category.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.FacetSet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetFacetCategoryList( categoryId,  includeAvailable,  validate,  responseFields);
              var facetSetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.AddFacetClient(Mozu.Api.Contracts.ProductAdmin.Facet,System.String)">
            <summary>
            Creates a new category, price, or attribute facet. Define the category or attribute source to use for the facet values.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="facet">Properties of the facet used to retrieve documents.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddFacet( facet,  responseFields);
              var facetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.UpdateFacetClient(Mozu.Api.Contracts.ProductAdmin.Facet,System.Int32,System.String)">
            <summary>
            Modifies one or more properties of a defined facet.
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="facet">Properties of the facet used to retrieve documents.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateFacet( facet,  facetId,  responseFields);
              var facetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.DeleteFacetByIdClient(System.Int32)">
             <summary>
             Deletes the facet specified by its unique identifier.
             </summary>
             <param name="facetId">Unique identifier of the facet to retrieve.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteFacetById( facetId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.LocationInventoryClient">
            <summary>
            Use the Location Inventory resource to manage the level of active product inventory maintained at each defined location, at the location level.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.LocationInventoryClient.GetLocationInventoryClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a product's active inventory at the location specified in the request.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationInventory(dataViewMode,  locationCode,  productCode,  responseFields);
              var locationInventoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.LocationInventoryClient.GetLocationInventoriesClient(Mozu.Api.DataViewMode,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of all product inventory definitions for the location code specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationInventories(dataViewMode,  locationCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var locationInventoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.LocationInventoryClient.AddLocationInventoryClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventory},System.String,System.Nullable{System.Boolean})">
            <summary>
            Creates an array of product inventory definitions for the location specified in the request. When adding a new inventory definition, you must specify the productCode and stockOnHand value in each array you define. All other properties are system-supplied and read only.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="performUpserts">Query string parameter lets the service perform an update for a new or existing record. When run, the update occurs without throwing a conflict exception that the record exists. If true, the updates completes regardless of the record currently existing. By default, if no value is specified, the service assumes this value is false.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="locationInventoryList">Properties of an inventory definition that defines the level of inventory for a specific product at a given location.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=AddLocationInventory(dataViewMode,  locationInventoryList,  locationCode,  performUpserts);
              var locationInventoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.LocationInventoryClient.UpdateLocationInventoryClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment},System.String)">
            <summary>
            Updates the active stock on hand inventory of products for the location code specified in the request.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="locationInventoryAdjustments">Properties of an adjustment to the active product inventory of a specific location.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateLocationInventory(dataViewMode,  locationInventoryAdjustments,  locationCode);
              var locationInventoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.LocationInventoryClient.DeleteLocationInventoryClient(Mozu.Api.DataViewMode,System.String,System.String)">
             <summary>
             Deletes the product code inventory definition for the location specified in the request.
             </summary>
             <param name="locationCode">The unique, user-defined code that identifies a location. </param>
             <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteLocationInventory(dataViewMode,  locationCode,  productCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.MasterCatalogClient">
            <summary>
            Use the Master Catalog resource to view details of the master catalogs associated with a tenant and to manage the product publishing mode for each master catalog.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.MasterCatalogClient.GetMasterCatalogsClient(System.String)">
            <summary>
            Retrieve the details of all master catalog associated with a tenant.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalogCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetMasterCatalogs( responseFields);
              var masterCatalogCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.MasterCatalogClient.GetMasterCatalogClient(System.Int32,System.String)">
            <summary>
            Retrieve the details of the master catalog specified in the request.
            </summary>
            <param name="masterCatalogId">The unique identifier of the master catalog associated with the entity.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalog"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetMasterCatalog( masterCatalogId,  responseFields);
              var masterCatalogClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.MasterCatalogClient.UpdateMasterCatalogClient(Mozu.Api.Contracts.ProductAdmin.MasterCatalog,System.Int32,System.String)">
            <summary>
            Updates the product publishing mode for the master catalog specified in the request.
            </summary>
            <param name="masterCatalogId"></param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="masterCatalog">Properties of a master product catalog defined for a tenant. All catalogs and sites associated with a master catalog share product definitions.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalog"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateMasterCatalog( masterCatalog,  masterCatalogId,  responseFields);
              var masterCatalogClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient">
            <summary>
            Use the Product Administration resource to create new product definitions in the master catalog and determine which catalogs will feature products. You can also assign attribute values for defined products, manage product-level location inventory, and configure the variations of a product.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.GetProductsClient(Mozu.Api.DataViewMode,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of products according to any specified facets, filter criteria, and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="noCount">If true, the operation does not return the TotalCount number of results.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProducts(dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  noCount,  responseFields);
              var productCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.GetProductInCatalogsClient(Mozu.Api.DataViewMode,System.String)">
            <summary>
            Retrieves a product that is associated with one or more specific catalogs.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductInCatalogs(dataViewMode,  productCode);
              var productInCatalogInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.GetProductInCatalogClient(Mozu.Api.DataViewMode,System.String,System.Int32,System.String)">
            <summary>
            Retrieves the details of a product associated with a specific catalog.
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductInCatalog(dataViewMode,  productCode,  catalogId,  responseFields);
              var productInCatalogInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.GetProductClient(Mozu.Api.DataViewMode,System.String,System.String)">
            <summary>
            Retrieves the details of a product definition.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProduct(dataViewMode,  productCode,  responseFields);
              var productClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.AddProductClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.Product,System.String)">
            <summary>
            Creates a new product definition in the specified master catalog.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="product">The properties of a product, referenced and used by carts, orders, wish lists, and returns.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProduct(dataViewMode,  product,  responseFields);
              var productClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.AddProductInCatalogClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo,System.String,System.String)">
            <summary>
            Associates a new product defined in the master catalog with a specific catalog.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productInCatalogInfoIn">Properties of a product associated with a specific catalog.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProductInCatalog(dataViewMode,  productInCatalogInfoIn,  productCode,  responseFields);
              var productInCatalogInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.RenameProductCodesClient(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductCodeRename})">
             <summary>
             Performs an update to a product code by renaming or replacing the current product code with a new one.
             </summary>
             <param name="productCodeRenames">Properties for a product code current and changed content.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=RenameProductCodes( productCodeRenames);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.UpdateProductInCatalogsClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo},System.String)">
            <summary>
            Updates the properties of a product specific to each catalog associated with the product.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productInCatalogsIn">Properties of a product associated with a specific catalog.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductInCatalogs(dataViewMode,  productInCatalogsIn,  productCode);
              var productInCatalogInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.UpdateProductInCatalogClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo,System.String,System.Int32,System.String)">
            <summary>
            Updates one or more properties of a product associated with a specific catalog.
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productInCatalogInfoIn">Properties of a product associated with a specific catalog.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductInCatalog(dataViewMode,  productInCatalogInfoIn,  productCode,  catalogId,  responseFields);
              var productInCatalogInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.UpdateProductClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.Product,System.String,System.String)">
            <summary>
            Updates one or more properties of a product definition in a master catalog.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="product">The properties of a product, referenced and used by carts, orders, wish lists, and returns.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProduct(dataViewMode,  product,  productCode,  responseFields);
              var productClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.DeleteProductClient(Mozu.Api.DataViewMode,System.String)">
             <summary>
             Deletes the specified product from a master catalog.
             </summary>
             <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProduct(dataViewMode,  productCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.DeleteProductInCatalogClient(Mozu.Api.DataViewMode,System.String,System.Int32)">
             <summary>
             Removes the product association defined for a specific catalog.
             </summary>
             <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
             <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProductInCatalog(dataViewMode,  productCode,  catalogId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient">
            <summary>
            Temporarily hold a product from inventory while a shopper is filling out payment information. Create a product reservation when a shopper proceeds to check out and then release the reservation when the order process is complete.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.GetProductReservationsClient(Mozu.Api.DataViewMode,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of product reservations according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductReservations(dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var productReservationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.GetProductReservationClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
            <summary>
            Retrieves the details of a product reservation.
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductReservation(dataViewMode,  productReservationId,  responseFields);
              var productReservationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.AddProductReservationsClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductReservation},System.Nullable{System.Boolean})">
            <summary>
            Creates a new product reservation for a product. This action places a hold on the product inventory for the quantity specified during the ordering process.
            </summary>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productReservations">A hold placed on product inventory for a particular product so that the quantity specified is set aside and available for purchase during the ordering process.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=AddProductReservations(dataViewMode,  productReservations,  skipInventoryCheck);
              var productReservationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.CommitReservationsClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductReservation})">
             <summary>
             Commits a product reservation to decrement the product's inventory by the quantity specified then release the reservation once the order process completed successfully.
             </summary>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <param name="productReservations">A hold placed on product inventory for a particular product so that the quantity specified is set aside and available for purchase during the ordering process.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=CommitReservations(dataViewMode,  productReservations);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.UpdateProductReservationsClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductReservation},System.Nullable{System.Boolean})">
            <summary>
            Updates an existing product reservation for a product.
            </summary>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productReservations">A hold placed on product inventory for a particular product so that the quantity specified is set aside and available for purchase during the ordering process.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductReservations(dataViewMode,  productReservations,  skipInventoryCheck);
              var productReservationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.DeleteProductReservationClient(Mozu.Api.DataViewMode,System.Int32)">
             <summary>
             Deletes a product reservation. For example, delete a reservation when an order is not processed to return the product quantity back to inventory.
             </summary>
             <param name="productReservationId">Unique identifier of the product reservation.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProductReservation(dataViewMode,  productReservationId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.LocationInventoryClient">
            <summary>
            Use the Product Location Inventory resource to manage the levels of active product inventory to maintain across defined locations at the product level.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.LocationInventoryClient.GetLocationInventoriesClient(Mozu.Api.DataViewMode,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves all locations for which a product has inventory defined and displays the inventory definition properties of each location.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationInventories(dataViewMode,  productCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var locationInventoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.LocationInventoryClient.GetLocationInventoryClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the inventory of the product in the location specified in the request.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationInventory(dataViewMode,  productCode,  locationCode,  responseFields);
              var locationInventoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.LocationInventoryClient.AddLocationInventoryClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventory},System.String,System.Nullable{System.Boolean})">
            <summary>
            Creates a new location inventory definition for the product code specified in the request.
            </summary>
            <param name="performUpserts">Query string parameter lets the service perform an update for a new or existing record. When run, the update occurs without throwing a conflict exception that the record exists. If true, the updates completes regardless of the record currently existing. By default, if no value is specified, the service assumes this value is false.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="locationInventoryList">Properties of an inventory definition that defines the level of inventory for a specific product at a given location.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=AddLocationInventory(dataViewMode,  locationInventoryList,  productCode,  performUpserts);
              var locationInventoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.LocationInventoryClient.UpdateLocationInventoryClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment},System.String)">
            <summary>
            Updates the current level of stock at each location associated with the product code specified in the request.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="locationInventoryAdjustments">Properties of an adjustment to the active product inventory of a specific location.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateLocationInventory(dataViewMode,  locationInventoryAdjustments,  productCode);
              var locationInventoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.LocationInventoryClient.DeleteLocationInventoryClient(Mozu.Api.DataViewMode,System.String,System.String)">
             <summary>
             Deletes the location inventory definition for the product code specified in the request.
             </summary>
             <param name="locationCode">The unique, user-defined code that identifies a location. </param>
             <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteLocationInventory(dataViewMode,  productCode,  locationCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient">
            <summary>
            Use the Extras resource to configure an extra product attribute for products associated with the product type that uses the extra attribute.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.GetExtrasClient(Mozu.Api.DataViewMode,System.String)">
            <summary>
            Retrieves a list of extras configured for the product according to any defined filter and sort criteria.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtras(dataViewMode,  productCode);
              var productExtraClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.GetExtraValueLocalizedDeltaPricesClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of all localized delta price values for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtraValueLocalizedDeltaPrices(dataViewMode,  productCode,  attributeFQN,  value);
              var productExtraValueDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.GetExtraValueLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the localized delta price value for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtraValueLocalizedDeltaPrice(dataViewMode,  productCode,  attributeFQN,  value,  currencyCode,  responseFields);
              var productExtraValueDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.GetExtraClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves the details of an extra attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtra(dataViewMode,  productCode,  attributeFQN,  responseFields);
              var productExtraClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.AddExtraValueLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice,System.String,System.String,System.String,System.String)">
            <summary>
            Adds a localized delta price value for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedDeltaPrice">The properties of the price difference between the product extra and the base product.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddExtraValueLocalizedDeltaPrice(dataViewMode,  localizedDeltaPrice,  productCode,  attributeFQN,  value,  responseFields);
              var productExtraValueDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.AddExtraClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductExtra,System.String,System.String)">
            <summary>
            Configure an extra attribute for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productExtra">Properties of an extra attribute to defined for a product that is associated with a product type that uses the extra. Setting up extras for a product enables shopper-entered information, such as initials for a monogram.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddExtra(dataViewMode,  productExtra,  productCode,  responseFields);
              var productExtraClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.UpdateExtraValueLocalizedDeltaPricesClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice},System.String,System.String,System.String)">
            <summary>
            Updates all localized delta price values for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedDeltaPrice">The properties of the price difference between the product extra and the base product.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateExtraValueLocalizedDeltaPrices(dataViewMode,  localizedDeltaPrice,  productCode,  attributeFQN,  value);
              var productExtraValueDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.UpdateExtraValueLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the localized delta price value for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedDeltaPrice">The properties of the price difference between the product extra and the base product.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateExtraValueLocalizedDeltaPrice(dataViewMode,  localizedDeltaPrice,  productCode,  attributeFQN,  value,  currencyCode,  responseFields);
              var productExtraValueDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.UpdateExtraClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductExtra,System.String,System.String,System.String)">
            <summary>
            Updates the configuration of an extra attribute for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productExtra">Properties of an extra attribute to defined for a product that is associated with a product type that uses the extra. Setting up extras for a product enables shopper-entered information, such as initials for a monogram.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateExtra(dataViewMode,  productExtra,  productCode,  attributeFQN,  responseFields);
              var productExtraClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.DeleteExtraClient(Mozu.Api.DataViewMode,System.String,System.String)">
             <summary>
             Delete a product extra configuration for the product specified in the request.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteExtra(dataViewMode,  productCode,  attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.DeleteExtraValueLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,System.String,System.String,System.String,System.String)">
             <summary>
             Deletes the localized delta price value for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
             </summary>
             <param name="attributeFQN">Fully qualified name for an attribute.</param>
             <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
             <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
             <param name="value">Use this field to include those fields which are not included by default.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteExtraValueLocalizedDeltaPrice(dataViewMode,  productCode,  attributeFQN,  value,  currencyCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient">
            <summary>
            Use the Options resource to configure the option attributes and vocabulary values for an individual product associated with the product type that uses the option attribute. Options are used to generate variations of a product.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient.GetOptionsClient(Mozu.Api.DataViewMode,System.String)">
            <summary>
            Retrieves a list of all option attributes configured for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetOptions(dataViewMode,  productCode);
              var productOptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient.GetOptionClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves the details of an option attribute configuration for the specified product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOption(dataViewMode,  productCode,  attributeFQN,  responseFields);
              var productOptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient.AddOptionClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductOption,System.String,System.String)">
            <summary>
            Configures an option attribute for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productOption">Properties of the product option to create such as attribute detail, fully qualified name, and list of product option values.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddOption(dataViewMode,  productOption,  productCode,  responseFields);
              var productOptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient.UpdateOptionClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductOption,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of an option attribute configured for a product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productOption">Properties of the product option to create such as attribute detail, fully qualified name, and list of product option values.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOption(dataViewMode,  productOption,  productCode,  attributeFQN,  responseFields);
              var productOptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient.DeleteOptionClient(Mozu.Api.DataViewMode,System.String,System.String)">
             <summary>
             Deletes the configuration of an option attribute for the product specified in the request.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteOption(dataViewMode,  productCode,  attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient">
            <summary>
            Use the Properties resource to configure a property attribute for an individual product associated with a product type that uses the property attribute, as well as set property values for the product.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.GetPropertiesClient(Mozu.Api.DataViewMode,System.String)">
            <summary>
            Retrieves a list of the property attributes configured for the product specified in the request.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetProperties(dataViewMode,  productCode);
              var productPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.GetPropertyValueLocalizedContentsClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of property values for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetPropertyValueLocalizedContents(dataViewMode,  productCode,  attributeFQN,  value);
              var productPropertyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.GetPropertyValueLocalizedContentClient(Mozu.Api.DataViewMode,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the property value for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPropertyValueLocalizedContent(dataViewMode,  productCode,  attributeFQN,  value,  localeCode,  responseFields);
              var productPropertyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.GetPropertyClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a property attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProperty(dataViewMode,  productCode,  attributeFQN,  responseFields);
              var productPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.AddPropertyValueLocalizedContentClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent,System.String,System.String,System.String,System.String)">
            <summary>
            Adds a property value for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedContent">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddPropertyValueLocalizedContent(dataViewMode,  localizedContent,  productCode,  attributeFQN,  value,  responseFields);
              var productPropertyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.AddPropertyClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductProperty,System.String,System.String)">
            <summary>
            Configures a property attribute for the product specified in the request.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productProperty">Details of a property defined for a product.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProperty(dataViewMode,  productProperty,  productCode,  responseFields);
              var productPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.UpdatePropertyValueLocalizedContentsClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent},System.String,System.String,System.String)">
            <summary>
            Updates all property values for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedContent">Content of the product property value in the language defined for the locale code.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdatePropertyValueLocalizedContents(dataViewMode,  localizedContent,  productCode,  attributeFQN,  value);
              var productPropertyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.UpdatePropertyValueLocalizedContentClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the property value for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedContent">Content of the product property value in the language defined for the locale code.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdatePropertyValueLocalizedContent(dataViewMode,  localizedContent,  productCode,  attributeFQN,  value,  localeCode,  responseFields);
              var productPropertyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.UpdatePropertyClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductProperty,System.String,System.String,System.String)">
            <summary>
            Update one or more details of a property attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productProperty">Details of a property defined for a product.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProperty(dataViewMode,  productProperty,  productCode,  attributeFQN,  responseFields);
              var productPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.DeletePropertyClient(Mozu.Api.DataViewMode,System.String,System.String)">
             <summary>
             Deletes the configuration of a property attribute for the product specified in the request.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProperty(dataViewMode,  productCode,  attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.DeletePropertyValueLocalizedContentClient(Mozu.Api.DataViewMode,System.String,System.String,System.String,System.String)">
             <summary>
             Deletes the property value for localized content. This content is set by the locale code. 
             </summary>
             <param name="attributeFQN">Fully qualified name for an attribute.</param>
             <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
             <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
             <param name="value">The value string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeletePropertyValueLocalizedContent(dataViewMode,  productCode,  attributeFQN,  value,  localeCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient">
            <summary>
            Use the product variations sub-resource to manage the variations of a product based on its attributes. For example, a t-shirt product could be offered in six variations: Small Black, Medium Black, Large Black, Small White, Medium White, and Large White.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.GetProductVariationLocalizedDeltaPricesClient(Mozu.Api.DataViewMode,System.String,System.String)">
            <summary>
            Retrieves a collection of the localized delta price values for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductVariationLocalizedDeltaPrices(dataViewMode,  productCode,  variationKey);
              var productVariationDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.GetProductVariationLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the localized delta price value for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductVariationLocalizedDeltaPrice(dataViewMode,  productCode,  variationKey,  currencyCode,  responseFields);
              var productVariationDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.GetProductVariationClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a product variation based on the supplied product code and variation key.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductVariation(dataViewMode,  productCode,  variationKey,  responseFields);
              var productVariationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.GetProductVariationsClient(Mozu.Api.DataViewMode,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of the product variations configured for the specified product code.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductVariations(dataViewMode,  productCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var productVariationPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.AddProductVariationLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice,System.String,System.String,System.String)">
            <summary>
            Adds the localized delta price value for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="localizedDeltaPrice">The difference between the base price for the product and this variation of the product, which can be a positive or negative decimal value. For example, if the base price for a t-shirt product is $10, but the XL variation should cost $12, the DeltaPrice value should be "2". However, if the XS variation should only cost $8, the DeltaPrice value should be "-2".</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProductVariationLocalizedDeltaPrice(dataViewMode,  localizedDeltaPrice,  productCode,  variationKey,  responseFields);
              var productVariationDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.UpdateProductVariationLocalizedDeltaPricesClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice},System.String,System.String)">
            <summary>
            Updates all localized delta price values for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="localizedDeltaPrice">The difference between the base price for the product and this variation of the product, which can be a positive or negative decimal value. For example, if the base price for a t-shirt product is $10, but the XL variation should cost $12, the DeltaPrice value should be "2". However, if the XS variation should only cost $8, the DeltaPrice value should be "-2".</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductVariationLocalizedDeltaPrices(dataViewMode,  localizedDeltaPrice,  productCode,  variationKey);
              var productVariationDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.UpdateProductVariationLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice,System.String,System.String,System.String,System.String)">
            <summary>
            Updatesthe localized delta price value for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="localizedDeltaPrice">The difference between the base price for the product and this variation of the product, which can be a positive or negative decimal value. For example, if the base price for a t-shirt product is $10, but the XL variation should cost $12, the DeltaPrice value should be "2". However, if the XS variation should only cost $8, the DeltaPrice value should be "-2".</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductVariationLocalizedDeltaPrice(dataViewMode,  localizedDeltaPrice,  productCode,  variationKey,  currencyCode,  responseFields);
              var productVariationDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.UpdateProductVariationClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductVariation,System.String,System.String,System.String)">
            <summary>
            Modifies the details of a variation, based on the supplied variation key, for the specified product code.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="productVariation">Properties of a specific product variation.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductVariation(dataViewMode,  productVariation,  productCode,  variationKey,  responseFields);
              var productVariationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.UpdateProductVariationsClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection,System.String,System.String)">
            <summary>
            Modifies the collection of variations for the specified product code. Because this PUT replaces the existing resource, supply all information necessary to maintain for the product variation.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="productVariations">Collection of variations configured for a product.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductVariations(dataViewMode,  productVariations,  productCode,  responseFields);
              var productVariationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.DeleteProductVariationClient(Mozu.Api.DataViewMode,System.String,System.String)">
             <summary>
             Deletes a variation, based on the supplied variation key, for the specified product code.
             </summary>
             <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
             <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProductVariation(dataViewMode,  productCode,  variationKey);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.DeleteProductVariationLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
             <summary>
             Deletes the localized delta price value for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
             </summary>
             <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
             <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
             <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProductVariationLocalizedDeltaPrice(dataViewMode,  productCode,  variationKey,  currencyCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.PublishingScopeClient">
            <summary>
            Use the Product Publishing resource to publish or discard pending changes to product definitions in the master catalog.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.PublishingScopeClient.DiscardDraftsClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.PublishingScope)">
             <summary>
             Deletes the draft version of product changes for each product code specified in the request.
             </summary>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <param name="publishScope">Describes the scope of the product publishing update, which can include individual product codes or all pending changes.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DiscardDrafts(dataViewMode,  publishScope);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.PublishingScopeClient.PublishDraftsClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.PublishingScope)">
             <summary>
             Publishes the draft version of product changes for each product code specified in the request, and changes the product publish state to "live".
             </summary>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <param name="publishScope">Describes the scope of the product publishing update, which can include individual product codes or all pending changes.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=PublishDrafts(dataViewMode,  publishScope);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.SearchClient">
            <summary>
            The Search resource manages all settings and options for providing product search on your site.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.SearchClient.GetSettingsClient(System.String)">
            <summary>
            Get site search settings
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SearchSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetSettings( responseFields);
              var searchSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.SearchClient.UpdateSettingsClient(Mozu.Api.Contracts.ProductAdmin.SearchSettings,System.String)">
            <summary>
            Adds or Updates (Upsert) the Search Settings for a specific site
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="settings">The settings to control product search and indexing behavior.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SearchSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateSettings( settings,  responseFields);
              var searchSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.SoftAllocationClient">
            <summary>
            Allows you to temporarily hold a product from inventory while a shopper is filling out payment information. You create a product reservation when a shopper proceeds to check out and then release the reservation when the order process is complete.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.SoftAllocationClient.GetSoftAllocationsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of sof allocations according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetSoftAllocations( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var softAllocationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.SoftAllocationClient.GetSoftAllocationClient(System.Int32,System.String)">
            <summary>
            Retrieves the details of a soft allocation.
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="softAllocationId"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocation"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetSoftAllocation( softAllocationId,  responseFields);
              var softAllocationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.SoftAllocationClient.AddSoftAllocationsClient(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.SoftAllocation})">
            <summary>
            Creates a new product reservation for a product. This places a hold on the product inventory for the quantity specified during the ordering process.
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="softAllocationsIn">Mozu.ProductAdmin.Contracts.SoftAllocation ApiType DOCUMENT_HERE </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocation"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=AddSoftAllocations( softAllocationsIn);
              var softAllocationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.SoftAllocationClient.ConvertToProductReservationClient(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.SoftAllocation})">
            <summary>
            Converts a set of existing softAllocations into productReservations
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="softAllocations">Mozu.ProductAdmin.Contracts.SoftAllocation ApiType DOCUMENT_HERE </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=ConvertToProductReservation( softAllocations);
              var productReservationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.SoftAllocationClient.RenewSoftAllocationsClient(Mozu.Api.Contracts.ProductAdmin.SoftAllocationRenew)">
            <summary>
            Updates a set of softAllocations expiration time in a non trassactional batch
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="softAllocationRenew">Mozu.ProductAdmin.Contracts.SoftAllocationRenew ApiType DOCUMENT_HERE </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocation"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=RenewSoftAllocations( softAllocationRenew);
              var softAllocationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.SoftAllocationClient.UpdateSoftAllocationsClient(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.SoftAllocation})">
            <summary>
            Updates a soft allocationt. This updates a hold on the product inventory for the quantity specified during the ordering process.
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="softAllocations">Mozu.ProductAdmin.Contracts.SoftAllocation ApiType DOCUMENT_HERE </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocation"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateSoftAllocations( softAllocations);
              var softAllocationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.SoftAllocationClient.DeleteSoftAllocationClient(System.Int32)">
             <summary>
             Deletes a soft allocation. You might delete a allocation when an order or cart is not processed to return the product quantity back to inventory.
             </summary>
             <param name="softAllocationId"></param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteSoftAllocation( softAllocationId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Storefront.CategoryClient">
            <summary>
            Use the Storefront Categories resource to view the product category hierarchy as it appears to shoppers who are browsing the storefront. The hierarchy can be returned as a flat list or as a category tree.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.CategoryClient.GetCategoriesClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategories( filter,  startIndex,  pageSize,  sortBy,  responseFields);
              var categoryPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.CategoryClient.GetCategoryClient(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="categoryId">Unique identifier for the storefront container used to organize products.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.Category"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategory( categoryId,  allowInactive,  responseFields);
              var categoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.CategoryClient.GetCategoryTreeClient(System.String)">
            <summary>
            Retrieves the list of product categories that appear on the storefront organized in a hierarchical format. Hidden categories do not appear in the list.
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategoryTree( responseFields);
              var categoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient">
            <summary>
            Use the Storefront Products  resource to manage the shopper product selection process during a visit to the web storefront. You can update product options as shoppers pick and choose their product choices. A shopper cannot add a product to a cart until all of its required options have been selected.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.GetProductsClient(Mozu.Api.DataViewMode,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of products that appear on the web storefront according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProducts(dataViewMode,  filter,  startIndex,  pageSize,  sortBy,  responseFields);
              var productCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.GetProductInventoryClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves the active inventory level information associated with the product or location specified in the request.
            </summary>
            <param name="locationCodes">Array of location codes for which to retrieve product inventory information.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductInventory(dataViewMode,  productCode,  locationCodes,  responseFields);
              var locationInventoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.GetProductClient(Mozu.Api.DataViewMode,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves information about a single product given its product code.
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="supressOutOfStock404"></param>
            <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.Product"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProduct(dataViewMode,  productCode,  variationProductCode,  allowInactive,  skipInventoryCheck,  supressOutOfStock404,  responseFields);
              var productClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.ConfiguredProductClient(Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Creates a new product configuration each time a shopper selects a product option value. After the shopper defines values for all required product options, the shopper can add the product configuration to a cart.
            </summary>
            <param name="includeOptionDetails">If true, the response returns details about the product. If false, returns a product summary such as the product name, price, and sale price.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ConfiguredProduct( productOptionSelections,  productCode,  includeOptionDetails,  skipInventoryCheck,  responseFields);
              var configuredProductClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.ValidateProductClient(Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Validate the final state of shopper-selected options.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ValidateProduct( productOptionSelections,  productCode,  skipInventoryCheck,  responseFields);
              var productValidationSummaryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.ValidateDiscountsClient(Mozu.Api.Contracts.ProductRuntime.DiscountSelections,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Evaluates whether a collection of discounts specified in the request can be redeemed for the supplied product code.
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="customerAccountId">The unique identifier of the customer account for which to retrieve wish lists.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
            <param name="discountSelections">The discounts to evaluate for a specified product code at the time of purchase.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.DiscountValidationSummary"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ValidateDiscounts( discountSelections,  productCode,  variationProductCode,  customerAccountId,  allowInactive,  skipInventoryCheck,  responseFields);
              var discountValidationSummaryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.GetProductInventoriesClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductRuntime.LocationInventoryQuery,System.String)">
            <summary>
            Retrieves product inventories for the storefront displayed products.
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="query">Properties for the product location inventory provided for queries to locate products by their location.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductInventories(dataViewMode,  query,  responseFields);
              var locationInventoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductSearchResultClient">
            <summary>
            Use the Product Search resource to provide dynamic search results to shoppers as they browse and search for products on the web storefront, and to suggest possible search terms as the shopper enters text.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductSearchResultClient.SearchClient(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Searches the categories displayed on the web storefront for products or product options that the shopper types in a search query.
            </summary>
            <param name="facet">Individually list the facet fields you want to display in a web storefront product search.</param>
            <param name="facetFieldRangeQuery">Display a range facet not specified in a template in a web storefront product search by listing the facet field and the range to display.</param>
            <param name="facetHierDepth">If filtering using category facets in a hierarchy, the number of category hierarchy levels to return for the facet. This option is only available for category facets.</param>
            <param name="facetHierPrefix">If filtering using category facets in a hierarchy, the parent categories you want to skip in the storefront product search. This parameter is only available for category facets.</param>
            <param name="facetHierValue">If filtering using category facets in a hierarchy, the category in the hierarchy to begin faceting on. This parameter is only available for category facets.</param>
            <param name="facetPageSize">The number of facet values to return for one or more facets.</param>
            <param name="facetSettings">Settings reserved for future facet search functionality on a web storefront product search.</param>
            <param name="facetStartIndex">When paging through multiple facets, the startIndex value for each facet.</param>
            <param name="facetTemplate">The facet template to use on the storefront. A template displays all facets associated with the template on the web storefront product search. Currently, only category-level facet templates are available.</param>
            <param name="facetTemplateSubset">Display a subset of the facets defined in the template specified in facetTemplate parameter.</param>
            <param name="facetValueFilter">The facet values to apply to the filter.</param>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query">A query entered for searches and facet range.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="searchSettings"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult"/>}
            </returns>
            <example>
            <code>
              var mozuClient=Search( query,  filter,  facetTemplate,  facetTemplateSubset,  facet,  facetFieldRangeQuery,  facetHierPrefix,  facetHierValue,  facetHierDepth,  facetStartIndex,  facetPageSize,  facetSettings,  facetValueFilter,  sortBy,  pageSize,  startIndex,  searchSettings,  responseFields);
              var productSearchResultClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductSearchResultClient.SuggestClient(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Suggests possible search terms as the shopper enters search text.
            </summary>
            <param name="groups"></param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query">A query entered for searches and facet range.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.SearchSuggestionResult"/>}
            </returns>
            <example>
            <code>
              var mozuClient=Suggest( query,  groups,  pageSize,  responseFields);
              var searchSuggestionResultClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Storefront.ShippingClient">
            <summary>
            Use the Storefront Shipping resource to retrieve shipping rate information from the website.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ShippingClient.GetRatesClient(Mozu.Api.Contracts.ShippingRuntime.RateRequest,System.String)">
            <summary>
            Retrieves the shipping rates applicable for the site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="rateRequest">Properties required to request a shipping rate calculation.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ShippingRuntime.RatesResponse"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetRates( rateRequest,  responseFields);
              var ratesResponseClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.ChannelClient">
            <summary>
            Use the Channels resource to manage the channels a company uses to create logical commercial business divisions based on region or types of sales, such as "US Online," "Amazon," or "EMEA Retail." All orders include a channel association that enables the company to perform financial reporting for each defined channel. Because channels are managed at the tenant level, you must associate all the tenant's sites with a channel. Sites that do not have a defined channel association cannot successfully submit orders.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelClient.GetChannelsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of channels defined for a tenant according to any filter or sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetChannels( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var channelCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelClient.GetChannelClient(System.String,System.String)">
            <summary>
            Retrieves the details of the channel specified in the request.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetChannel( code,  responseFields);
              var channelClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelClient.CreateChannelClient(Mozu.Api.Contracts.CommerceRuntime.Channels.Channel,System.String)">
            <summary>
            Creates a new channel that defines a new logical business division to use for financial reporting.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="channel">Properties of a channel used to divide a company into logical business divisions, such as "US Retail," "US Online," or "Amazon." All sites and orders are associated with a channel.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateChannel( channel,  responseFields);
              var channelClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelClient.UpdateChannelClient(Mozu.Api.Contracts.CommerceRuntime.Channels.Channel,System.String,System.String)">
            <summary>
            Updates one or more details of a defined channel, including the associated sites.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="channel">Properties of a channel used to divide a company into logical business divisions, such as "US Retail," "US Online," or "Amazon." All sites and orders are associated with a channel.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateChannel( channel,  code,  responseFields);
              var channelClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelClient.DeleteChannelClient(System.String)">
             <summary>
             Deletes a defined channel for the tenant and removes the defined site associations. After deleting this channel, assign its associated sites to another channel.
             </summary>
             <param name="code">User-defined code that uniqely identifies the channel group.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteChannel( code);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.ChannelGroupClient">
            <summary>
            Use the Channel Groups resource to manage groups of channels with common information.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelGroupClient.GetChannelGroupsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of defined channel groups according to any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetChannelGroups( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var channelGroupCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelGroupClient.GetChannelGroupClient(System.String,System.String)">
            <summary>
            Retrieves the details of a defined channel group.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetChannelGroup( code,  responseFields);
              var channelGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelGroupClient.CreateChannelGroupClient(Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup,System.String)">
            <summary>
            Creates a new group of channels with common information.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="channelGroup">Properties of a group of channels that share common information.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateChannelGroup( channelGroup,  responseFields);
              var channelGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelGroupClient.UpdateChannelGroupClient(Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup,System.String,System.String)">
            <summary>
            Updates one or more properties of a defined channel group.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="channelGroup">Properties of a group of channels that share common information.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateChannelGroup( channelGroup,  code,  responseFields);
              var channelGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelGroupClient.DeleteChannelGroupClient(System.String)">
             <summary>
             Deletes a defined group of channels, which removes the group association with each channel in the group but does not delete the channel definitions themselves.
             </summary>
             <param name="code">User-defined code that uniqely identifies the channel group.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteChannelGroup( code);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient">
            <summary>
            Use the Cards subresource to manage stored credit cards for customer accounts. Mozu stores limited card data in the Customer service for expedited ordering purposes; however, the complete card data is stored in the Payment service.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.GetAccountCardClient(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of a credit card stored with a customer account billing contact.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Card"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountCard( accountId,  cardId,  responseFields);
              var cardClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.GetAccountCardsClient(System.Int32,System.String)">
            <summary>
            Retrieves all stored credit cards for the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CardCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountCards( accountId,  responseFields);
              var cardCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.AddAccountCardClient(Mozu.Api.Contracts.Customer.Card,System.Int32,System.String)">
            <summary>
            Creates a new credit card record and stores it for the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="card">Properties of a credit card used to submit payment for an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Card"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccountCard( card,  accountId,  responseFields);
              var cardClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.UpdateAccountCardClient(Mozu.Api.Contracts.Customer.Card,System.Int32,System.String,System.String)">
            <summary>
            Update one or more properties of a credit card defined for a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="card">Properties of a credit card used to submit payment for an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Card"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccountCard( card,  accountId,  cardId,  responseFields);
              var cardClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.DeleteAccountCardClient(System.Int32,System.String)">
             <summary>
             Removes a stored credit card from a customer account.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAccountCard( accountId,  cardId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient">
            <summary>
            Use the Attributes subresource to manage the attributes used to uniquely identify shopper accounts, such as gender or age.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.GetAccountAttributeClient(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the contents of an attribute associated with the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountAttribute( accountId,  attributeFQN,  responseFields);
              var customerAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.GetAccountAttributesClient(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves the list of customer account attributes.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttributeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountAttributes( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var customerAttributeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.AddAccountAttributeClient(Mozu.Api.Contracts.Customer.CustomerAttribute,System.Int32,System.String)">
            <summary>
            Applies a defined attribute to the customer account specified in the request and assigns a value to the customer attribute.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="attribute">Properties of an attribute associated with a customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccountAttribute( attribute,  accountId,  responseFields);
              var customerAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.UpdateAccountAttributeClient(Mozu.Api.Contracts.Customer.CustomerAttribute,System.Int32,System.String,System.String)">
            <summary>
            Updates one or more details of a customer account attribute.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="attribute">Properties of an attribute associated with a customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccountAttribute( attribute,  accountId,  attributeFQN,  responseFields);
              var customerAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.DeleteAccountAttributeClient(System.Int32,System.String)">
             <summary>
             Removes the attribute specified in the request from the customer account.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAccountAttribute( accountId,  attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient">
            <summary>
            Merchants and customers can create, view, update, and delete a contact for a customer account. A customer account may have multiple contacts for billing and shipping addresses.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.GetAccountContactClient(System.Int32,System.Int32,System.String)">
            <summary>
            Retrieves the specified contact for a customer account such as a billing or shipping contact.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountContact( accountId,  contactId,  responseFields);
              var customerContactClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.GetAccountContactsClient(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of contacts for a customer according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerContactCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountContacts( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var customerContactCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.AddAccountContactClient(Mozu.Api.Contracts.Customer.CustomerContact,System.Int32,System.String)">
            <summary>
            Creates a new contact for a customer account such as a new shipping address.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="contact">Contact information, including the contact's name, address, phone numbers, email addresses, and company (if supplied). Also indicates whether this is a billing, shipping, or billing and shipping contact.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccountContact( contact,  accountId,  responseFields);
              var customerContactClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.UpdateAccountContactClient(Mozu.Api.Contracts.Customer.CustomerContact,System.Int32,System.Int32,System.String)">
            <summary>
            Updates a contact for a specified customer account such as to update addresses or change which contact is the primary contact for billing.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="contact">Contact information, including the contact's name, address, phone numbers, email addresses, and company (if supplied). Also indicates whether this is a billing, shipping, or billing and shipping contact.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccountContact( contact,  accountId,  contactId,  responseFields);
              var customerContactClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.DeleteAccountContactClient(System.Int32,System.Int32)">
             <summary>
             Deletes a contact for the specified customer account.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <param name="contactId">Unique identifer of the customer account contact being updated.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAccountContact( accountId,  contactId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient">
            <summary>
            Tenant administrators can add and view internal notes for a customer account. For example, a client can track a shopper's interests or complaints. Only clients can add and view notes. Shoppers cannot view these notes from the My Account page.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.GetAccountNoteClient(System.Int32,System.Int32,System.String)">
            <summary>
            Retrieves the contents of a particular note attached to a specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountNote( accountId,  noteId,  responseFields);
              var customerNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.GetAccountNotesClient(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of notes added to a customer account according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerNoteCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountNotes( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var customerNoteCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.AddAccountNoteClient(Mozu.Api.Contracts.Customer.CustomerNote,System.Int32,System.String)">
            <summary>
            Adds a new note to the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="note">Properties of a note configured for a customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccountNote( note,  accountId,  responseFields);
              var customerNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.UpdateAccountNoteClient(Mozu.Api.Contracts.Customer.CustomerNote,System.Int32,System.Int32,System.String)">
            <summary>
            Modifies an existing note for a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="note">Properties of a note configured for a customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccountNote( note,  accountId,  noteId,  responseFields);
              var customerNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.DeleteAccountNoteClient(System.Int32,System.Int32)">
             <summary>
             Removes a note from the specified customer account.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <param name="noteId">Unique identifier of a particular note to retrieve.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAccountNote( accountId,  noteId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerSegmentClient">
            <summary>
            Use the Customer Account Segments subresource to view the customer segments associated with a customer account.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerSegmentClient.GetAccountSegmentsClient(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves the list of segments associated with a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerSegmentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountSegments( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var customerSegmentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.TransactionClient">
            <summary>
            Use the Customer Account Transactions resource to manage the transactions associated with a customer account.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.TransactionClient.GetTransactionsClient(System.Int32)">
            <summary>
            Retrieves a list of transactions associated with the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Customer.Transaction"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetTransactions( accountId);
              var transactionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.TransactionClient.AddTransactionClient(Mozu.Api.Contracts.Customer.Transaction,System.Int32,System.String)">
            <summary>
            Creates a new transaction for the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="transaction">Properties of a transaction performed by a customer account. The system creates a transaction each time the customer submits an order, returns an item, picks up items for an order, or manages items on a wish list.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Transaction"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddTransaction( transaction,  accountId,  responseFields);
              var transactionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.TransactionClient.RemoveTransactionClient(System.Int32,System.String)">
             <summary>
             Deletes a transaction from the customer account specified in the request.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <param name="transactionId">Unique identifier of the transaction to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=RemoveTransaction( accountId,  transactionId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.AddressValidationRequestClient">
            <summary>
            Use the Address Validation resource to validate addresses associated with a customer account contact.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.AddressValidationRequestClient.ValidateAddressClient(Mozu.Api.Contracts.Customer.AddressValidationRequest,System.String)">
            <summary>
            Validates the customer address supplied in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="addressValidationRequest">Properties of the address used for validation of the account's full address. This content may include multiple lines of an address, city, state/province, zip/postal code, and country.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.AddressValidationResponse"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ValidateAddress( addressValidationRequest,  responseFields);
              var addressValidationResponseClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Attributedefinition.AttributeClient">
            <summary>
            Use the Customer Attribute Definition resource to manage the attributes to define for your shoppers.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Attributedefinition.AttributeClient.GetAttributesClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of customer attributes according to any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributes( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var attributeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Attributedefinition.AttributeClient.GetAttributeVocabularyValuesClient(System.String)">
            <summary>
            Retrieve a list of the vocabulary values defined for the customer attribute specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeVocabularyValues( attributeFQN);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Attributedefinition.AttributeClient.GetAttributeClient(System.String,System.String)">
            <summary>
            Retrieve a customer attribute definition by supplying its fully qualified name.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttribute( attributeFQN,  responseFields);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.CreditClient">
            <summary>
            Use the Customer Credits resource to manage the store credit associated with a customer account. Store credit can represent a static amount the customer can redeem at any of the tenant's sites, or a gift card registered for a customer account. At this time, gift card functionality is reserved for future use.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CreditClient.GetCreditsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of store credits applied to customer accounts, according any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCredits( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var creditCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CreditClient.GetCreditClient(System.String,System.String)">
            <summary>
            Retrieves the details of a store credit applied to a customer account.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCredit( code,  responseFields);
              var creditClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CreditClient.AddCreditClient(Mozu.Api.Contracts.Customer.Credit.Credit,System.String)">
            <summary>
            Creates a new store credit for the customer account specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="credit">Properties of the store credit of gift card applied to a customer account. At this time, gift card functionality is reserved for future use.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddCredit( credit,  responseFields);
              var creditClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CreditClient.AssociateCreditToShopperClient(System.String,System.String)">
            <summary>
            Associates an unclaimed customer credit with the shopper user authenticated in the request header.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AssociateCreditToShopper( code,  responseFields);
              var creditClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CreditClient.ResendCreditCreatedEmailClient(System.String)">
             <summary>
             customer-credits Put ResendCreditCreatedEmail description DOCUMENT_HERE 
             </summary>
             <param name="code">User-defined code that uniqely identifies the channel group.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=ResendCreditCreatedEmail( code);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CreditClient.UpdateCreditClient(Mozu.Api.Contracts.Customer.Credit.Credit,System.String,System.String)">
            <summary>
            Updates one or more properties of a defined store credit applied to a customer account.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="credit">Properties of the store credit of gift card applied to a customer account. At this time, gift card functionality is reserved for future use.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCredit( credit,  code,  responseFields);
              var creditClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CreditClient.DeleteCreditClient(System.String)">
             <summary>
             Deletes a store credit previously applied to a customer account.
             </summary>
             <param name="code">User-defined code that uniqely identifies the channel group.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteCredit( code);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Credits.CreditAuditEntryClient">
            <summary>
            Use the Customer Credit Audit Entries subresource to retrieve entries logged in the audit report of a store credit or gift card applied to a customer account. The system creates a new audit entry when the credit is created, deleted, activated, or deactivated. The system then creates a new audit entry each time the credit is updated or redeemed in a transaction.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Credits.CreditAuditEntryClient.GetAuditEntriesClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves the list of audit entries for the credit, according to any filter or sort criteria specified in the request.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAuditEntries( code,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var creditAuditEntryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Credits.CreditTransactionClient">
            <summary>
            Use the Customer Credit Transactions subresource to manage the individual transactions performed using a store credit or gift card.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Credits.CreditTransactionClient.GetTransactionsClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of the transactions performed using a customer credit that update the balance of the credit.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTransactions( code,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var creditTransactionCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Credits.CreditTransactionClient.AddTransactionClient(Mozu.Api.Contracts.Customer.Credit.CreditTransaction,System.String,System.String)">
            <summary>
            Creates a new transaction and updates the amount of a store credit or gift card.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="creditTransaction">Properties of a transaction performed for a customer credit that update the remaining balance of the credit.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditTransaction"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddTransaction( creditTransaction,  code,  responseFields);
              var creditTransactionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient">
            <summary>
            Use the Customer Accounts resource to manage the components of shopper accounts, including attributes, contact information, company notes, and groups associated with the customer account.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.GetAccountsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of customer accounts.
            </summary>
            <param name="fields">The fields to include in the response.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="isAnonymous">If true, retrieve anonymous shopper accounts in the response.</param>
            <param name="pageSize"></param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccounts( startIndex,  pageSize,  sortBy,  filter,  fields,  q,  qLimit,  isAnonymous,  responseFields);
              var customerAccountCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.GetLoginStateClient(System.Int32,System.String)">
            <summary>
            Retrieves the current login state of the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.LoginState"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLoginState( accountId,  responseFields);
              var loginStateClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.GetAccountClient(System.Int32,System.String)">
            <summary>
            Retrieve details of a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccount( accountId,  responseFields);
              var customerAccountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.AddAccountClient(Mozu.Api.Contracts.Customer.CustomerAccount,System.String)">
            <summary>
            Creates a new customer account based on the information specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="account">Properties of the customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccount( account,  responseFields);
              var customerAccountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.ChangePasswordClient(Mozu.Api.Contracts.Customer.PasswordInfo,System.Int32,System.Nullable{System.Boolean})">
             <summary>
             Modify the password associated with a customer account.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <param name="unlockAccount"></param>
             <param name="passwordInfo">The information required to modify a shopper account password.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=ChangePassword( passwordInfo,  accountId,  unlockAccount);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.AddLoginToExistingCustomerClient(Mozu.Api.Contracts.Customer.CustomerLoginInfo,System.Int32,System.String)">
            <summary>
            Adds a new user login to a defined customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="customerAuthInfo">The login information for a customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddLoginToExistingCustomer( customerAuthInfo,  accountId,  responseFields);
              var customerAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.RecomputeCustomerLifetimeValueClient(System.Int32)">
             <summary>
             Updates the customer lifetime value of the specified customer account in the event of an order import or a lifetime value calculation error.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=RecomputeCustomerLifetimeValue( accountId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.SetLoginLockedClient(System.Boolean,System.Int32)">
             <summary>
             Lock or unlock a customer account.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <param name="isLocked">If true, the customer account is locked from logging in.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=SetLoginLocked( isLocked,  accountId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.SetPasswordChangeRequiredClient(System.Boolean,System.Int32)">
             <summary>
             Requires the password for the customer account to be changed.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <param name="isPasswordChangeRequired">If true, the password for the customer account must be changed.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=SetPasswordChangeRequired( isPasswordChangeRequired,  accountId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.AddAccountAndLoginClient(Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo,System.String)">
            <summary>
            Creates a new customer account and logs the user associated with the customer account into the site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="accountAndAuthInfo">The authentication information associated with a customer account. The data includes the account properties such as the name, username, authorization access, and email address, the required password to match, and indicates if the account was imported from a third party resource. </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccountAndLogin( accountAndAuthInfo,  responseFields);
              var customerAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.AddAccountsClient(System.Collections.Generic.List{Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo},System.String)">
            <summary>
            Creates multiple customer accounts based on the information specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="customers">The authentication information associated with a customer account. The data includes the account properties such as the name, username, authorization access, and email address, the required password to match, and indicates if the account was imported from a third party resource. </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccounts( customers,  responseFields);
              var customerAccountCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.ChangePasswordsClient(Mozu.Api.Contracts.Customer.AccountPasswordInfoCollection,System.String)">
            <summary>
            Changes a collection of shopper passwords
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="accountPasswordInfos">Mozu.Customer.Contracts.AccountPasswordInfoCollection ApiType DOCUMENT_HERE </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.ChangePasswordResultCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ChangePasswords( accountPasswordInfos,  responseFields);
              var changePasswordResultCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.GetLoginStateByEmailAddressClient(System.String,System.String)">
            <summary>
            Retrieves the current login state of a customer account by providing the customer's email address.
            </summary>
            <param name="emailAddress">The email address associated with the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.LoginState"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLoginStateByEmailAddress( emailAddress,  responseFields);
              var loginStateClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.GetLoginStateByUserNameClient(System.String,System.String)">
            <summary>
            Retrieves the current login state of a customer account by providing the user name associated with the customer account.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userName">The user name associated with the customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.LoginState"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLoginStateByUserName( userName,  responseFields);
              var loginStateClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.ResetPasswordClient(Mozu.Api.Contracts.Customer.ResetPasswordInfo)">
             <summary>
             Resets the password for a customer account.
             </summary>
             <param name="resetPasswordInfo">Information required to reset the password for a customer account.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=ResetPassword( resetPasswordInfo);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.UpdateAccountClient(Mozu.Api.Contracts.Customer.CustomerAccount,System.Int32,System.String)">
            <summary>
            Updates a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="account">Properties of the customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccount( account,  accountId,  responseFields);
              var customerAccountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.DeleteAccountClient(System.Int32)">
             <summary>
             Deletes a customer account. A customer account cannot be deleted if any orders exist, past or present.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAccount( accountId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.CustomerAuthTicketClient">
            <summary>
            Use the Customer Authentication Tickets resource to generate and refresh authentication tickets for customer accounts.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAuthTicketClient.CreateAnonymousShopperAuthTicketClient">
            <summary>
            Creates an authentication ticket for an anonymous shopper user.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:System.IO.Stream"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateAnonymousShopperAuthTicket();
              var streamClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAuthTicketClient.CreateUserAuthTicketClient(Mozu.Api.Contracts.Customer.CustomerUserAuthInfo,System.String)">
            <summary>
            Generates a new authentication ticket for a customer account.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userAuthInfo">The authentication information required to generate an authentication ticket for a customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateUserAuthTicket( userAuthInfo,  responseFields);
              var customerAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAuthTicketClient.RefreshUserAuthTicketClient(System.String,System.String)">
            <summary>
            Refreshes an existing authentication ticket for a customer account by providing the refresh token string.
            </summary>
            <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RefreshUserAuthTicket( refreshToken,  responseFields);
              var customerAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient">
            <summary>
            Use the Customer Segments resource to manage the segments that enable a client to manage groups of customers and target discounts for these segments. After a customer segment is defined, you can associate any number of customer accounts with it.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient.GetSegmentsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of defined customer segments according to any filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerSegmentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetSegments( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var customerSegmentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient.GetSegmentClient(System.Int32,System.String)">
            <summary>
            Retrieves the details of the customer segment specified in the request. This operation does not return a list of the customer accounts associated with the segment.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerSegment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetSegment( id,  responseFields);
              var customerSegmentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient.AddSegmentClient(Mozu.Api.Contracts.Customer.CustomerSegment,System.String)">
            <summary>
            Creates a new customer segments. New customer segments do not have any associated customer accounts.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="segment">The Customer Segment object includes properties of a defined customer segment used to group customer accounts.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerSegment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddSegment( segment,  responseFields);
              var customerSegmentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient.AddSegmentAccountsClient(System.Collections.Generic.List{System.Int32},System.Int32)">
             <summary>
             Adds one or more customer accounts to a defined customer segment.
             </summary>
             <param name="id">Unique identifier of the customer segment to retrieve.</param>
             <param name="accountIds">List of customer account IDs to add to the customer segment specified in the request.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=AddSegmentAccounts( accountIds,  id);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient.UpdateSegmentClient(Mozu.Api.Contracts.Customer.CustomerSegment,System.Int32,System.String)">
            <summary>
            Updates the details of the customer segment specified in the request.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="segment">The Customer Segment object includes properties of a defined customer segment used to group customer accounts.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerSegment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateSegment( segment,  id,  responseFields);
              var customerSegmentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient.DeleteSegmentClient(System.Int32)">
             <summary>
             Deletes a customer segment specified by its unique identifier. Deleting a segment removes any customer account associations, but does not delete the customer account itself.
             </summary>
             <param name="id">Unique identifier of the customer segment to retrieve.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteSegment( id);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient.RemoveSegmentAccountClient(System.Int32,System.Int32)">
             <summary>
             Removes single account from a segment.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <param name="id">Unique identifier of the customer segment to retrieve.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=RemoveSegmentAccount( id,  accountId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.VisitClient">
            <summary>
            Use the Visits resource to manage all visits a customer makes to a tenant's sites and measure the level of transactions a customer performs during a unique visit for customer account analytics. Clients can track customer visits by site (including online and in-person interactions), the transactions a customer performs during the visit, and the device type associated with the visit, if any.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.VisitClient.GetVisitsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of customer visits according to any filter or sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.VisitCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetVisits( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var visitCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.VisitClient.GetVisitClient(System.String,System.String)">
            <summary>
            Retrieves the details of the customer visit specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="visitId">Unique identifier of the customer visit to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Visit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetVisit( visitId,  responseFields);
              var visitClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.VisitClient.AddVisitClient(Mozu.Api.Contracts.Customer.Visit,System.String)">
            <summary>
            Creates a new visit for the customer account specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="visit">Properties of a customer visit to one of a company's sites.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Visit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddVisit( visit,  responseFields);
              var visitClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.VisitClient.UpdateVisitClient(Mozu.Api.Contracts.Customer.Visit,System.String,System.String)">
            <summary>
            Updates one or more properties of a defined customer visit.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="visitId">Unique identifier of the customer visit to update.</param>
            <param name="visit">Properties of a customer visit to one of a company's sites.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Visit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateVisit( visit,  visitId,  responseFields);
              var visitClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.InStockNotificationSubscriptionClient">
            <summary>
            Use the Customer In-Stock Notification Subscription resource to manage the subscriptions customer accounts use to send product notifications. This resource can send a notification when a product in a catalog returns to a site's active inventory after it is out of stock, or when a new product becomes available for the first time.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.InStockNotificationSubscriptionClient.GetInStockNotificationSubscriptionsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of in-stock notification subscriptions.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetInStockNotificationSubscriptions( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var inStockNotificationSubscriptionCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.InStockNotificationSubscriptionClient.GetInStockNotificationSubscriptionClient(System.Int32,System.String)">
            <summary>
            Retrieves the details of a subscription that sends a push notification when a product is available in a site's active stock.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscription"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetInStockNotificationSubscription( id,  responseFields);
              var inStockNotificationSubscriptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.InStockNotificationSubscriptionClient.AddInStockNotificationSubscriptionClient(Mozu.Api.Contracts.Customer.InStockNotificationSubscription,System.String)">
            <summary>
            Creates a new subscription that notifies the customer when the product specified in the request is available in the active inventory of the defined location.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="inStockNotificationSubscription">Properties of a push notification to which the shopper subscribes. This notification sends the shopper an alert when a new product or a product previously out of stock becomes available in the specified location's active product inventory.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscription"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddInStockNotificationSubscription( inStockNotificationSubscription,  responseFields);
              var inStockNotificationSubscriptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.InStockNotificationSubscriptionClient.DeleteInStockNotificationSubscriptionClient(System.Int32)">
             <summary>
             Deletes a subscription for a customer in-stock notification.
             </summary>
             <param name="id">Unique identifier of the customer segment to retrieve.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteInStockNotificationSubscription( id);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.LocationClient">
            <summary>
            Use the Location resource to retrieve details about a location from a Mozu hosted storefront.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.LocationClient.GetLocationClient(System.String,System.String)">
            <summary>
            Retrieves the details of the location specified in the request.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocation( code,  responseFields);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.LocationClient.GetLocationsInUsageTypeClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of the locations configured for a specified location usage type for the specified site, according to any defined filter or sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="locationUsageType">System-defined location usage type code, which is DS for direct ship, SP for in-store pickup, or storeFinder.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationsInUsageType( locationUsageType,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var locationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.LocationClient.GetDirectShipLocationClient(System.String)">
            <summary>
            Retrieves the details of the location configured for the direct shipping (DS) location usage type for the site specified in the request. This location acts as an origin address from which order packages will ship, as well as the location where product reservations are created when order items are submitted with the direct ship fulfillment type (DS). If the direct ship location usage type is not configured for this site, the operation returns an error.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDirectShipLocation( responseFields);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.LocationClient.GetInStorePickupLocationClient(System.String,System.String)">
            <summary>
            Retrieves the details of the location configured for the in-store pickup (SP) location usage type for the site specified in the request. If the location is not associated with a location type configured for the in-store pickup location usage type (SP), the operation returns an error.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetInStorePickupLocation( code,  responseFields);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.LocationClient.GetInStorePickupLocationsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of locations valid for in-store pickup of an item in an order according to any filter and sort criteria. For example, an application could use this operation to provide a store finder feature based on the shopper's GPS coordinates. If the location types for the in-store pickup location usage type are not configured for the site, this operation returns an error.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetInStorePickupLocations( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var locationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.OrderClient">
            <summary>
            Use the Orders resource to manage all components of order processing, payment, and fulfillment.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.GetOrdersClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a list of orders according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrders( startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  responseFields);
              var orderCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.GetAvailableActionsClient(System.String)">
            <summary>
            Retrieves the actions available to perform for an order based on its current status.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailableActions( orderId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.GetTaxableOrdersClient(System.String)">
            <summary>
            Retrieves an order for the purpose of splitting it into multiple taxable orders in order to fulfill the order in multiple locations.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.PricingRuntime.TaxableOrder"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetTaxableOrders( orderId);
              var taxableOrderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.GetOrderClient(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of an order specified by the order ID.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrder( orderId,  draft,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.CreateOrderFromCartClient(System.String,System.String)">
            <summary>
            Creates a new order from an existing cart when the customer chooses to proceed to checkout.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderFromCart( cartId,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.CreateOrderClient(Mozu.Api.Contracts.CommerceRuntime.Orders.Order,System.String)">
            <summary>
            Creates a new order for no-cart quick-ordering scenarios.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="order">Properties of an order, including its components.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrder( order,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.PerformOrderActionClient(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction,System.String,System.String)">
            <summary>
            Perform the specified action for an order. The actions you can perform depend on the current status of the order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="action">The action to perform for the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=PerformOrderAction( action,  orderId,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.UpdateOrderDiscountClient(Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the properties of a discount applied to an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="discount">Properties of all applied discounts for an associated cart, order, or product. </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderDiscount( discount,  orderId,  discountId,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.DeleteOrderDraftClient(System.String,System.String)">
             <summary>
             Deletes the current draft version of the order, which also deletes any uncommitted changes made to the order in draft mode.
             </summary>
             <param name="orderId">Unique identifier of the order.</param>
             <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteOrderDraft( orderId,  version);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.ResendOrderConfirmationEmailClient(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction,System.String)">
             <summary>
             commerce-orders Put ResendOrderConfirmationEmail description DOCUMENT_HERE 
             </summary>
             <param name="orderId">Unique identifier of the order.</param>
             <param name="action">The action to perform for the order.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=ResendOrderConfirmationEmail( action,  orderId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.ChangeOrderUserIdClient(System.String,System.String)">
            <summary>
            Updates the user ID of the shopper who placed the order to the current user.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ChangeOrderUserId( orderId,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.UpdateOrderClient(Mozu.Api.Contracts.CommerceRuntime.Orders.Order,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the specified order when additional order information, such as shipping or billing information, is modified during the checkout process.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="order">Properties of an order, including its components.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrder( order,  orderId,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient">
            <summary>
            Use this subresource to manage ad-hoc order level price adjustments.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.ApplyShippingAdjustmentClient(Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment,System.String,System.String,System.String,System.String)">
            <summary>
            Applies a shipping adjustment to the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="adjustment">Properties of an ad-hoc price adjustment for an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ApplyShippingAdjustment( adjustment,  orderId,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.ApplyAdjustmentClient(Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment,System.String,System.String,System.String,System.String)">
            <summary>
            Applies a price adjustment to the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="adjustment">Properties of an ad-hoc price adjustment for an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ApplyAdjustment( adjustment,  orderId,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.RemoveShippingAdjustmentClient(System.String,System.String,System.String)">
            <summary>
            Removes a shipping adjustment previously applied to an order or draft.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveShippingAdjustment( orderId,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.RemoveAdjustmentClient(System.String,System.String,System.String)">
            <summary>
            Removes a price adjustment from the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveAdjustment( orderId,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.AppliedDiscountClient">
            <summary>
            Use this subresource to apply coupons to or remove coupons from an order based on a supplied coupon code.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AppliedDiscountClient.ApplyCouponClient(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Apply a coupon to the order.
            </summary>
            <param name="couponCode">Alphanumeric code associated with the coupon or promotion that results in a discounted price.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ApplyCoupon( orderId,  couponCode,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AppliedDiscountClient.RemoveCouponClient(System.String,System.String,System.String,System.String)">
            <summary>
            Removes a coupon previously applied to the order.
            </summary>
            <param name="couponCode">Alphanumeric code associated with the coupon or promotion that results in a discounted price.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveCoupon( orderId,  couponCode,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AppliedDiscountClient.RemoveCouponsClient(System.String,System.String,System.String)">
            <summary>
            Removes all coupons previously applied to the order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveCoupons( orderId,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient">
            <summary>
            Use the Order Attribute Definition resource to manage the attributes that uniquely describe orders, such as the associated shopping season or "How did you hear about us?" information. Merchants can display order attributes on the order summary, the order confirmation page, invoices, or packing slips.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.GetAttributesClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of order attributes according to any filter criteria or sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributes( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var attributeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.GetAttributeVocabularyValuesClient(System.String)">
            <summary>
            Returns the list of vocabulary values defined for the order attribute specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeVocabularyValues( attributeFQN);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.GetAttributeClient(System.String,System.String)">
            <summary>
            Retrieves the details of the order attribute specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttribute( attributeFQN,  responseFields);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.BillingInfoClient">
            <summary>
            Use the Billing Info subresource to manage the billing information stored for an order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.BillingInfoClient.GetBillingInfoClient(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the billing information associated with an order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBillingInfo( orderId,  draft,  responseFields);
              var billingInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.BillingInfoClient.SetBillingInfoClient(Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the billing information supplied for an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="billingInfo">Properties of the billing information entered for an order during checkout.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=SetBillingInfo( billingInfo,  orderId,  updateMode,  version,  responseFields);
              var billingInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient">
            <summary>
            A digital package is a package in a digital format.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.GetAvailableDigitalPackageFulfillmentActionsClient(System.String,System.String)">
            <summary>
            Retrieves a collection of fulfillment options for digital packages. Options may include emailed files/links or provided links. 
            </summary>
            <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailableDigitalPackageFulfillmentActions( orderId,  digitalPackageId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.GetDigitalPackageClient(System.String,System.String,System.String)">
            <summary>
            This operation retreives a digital package within an order and it requires two parameters: orderId and digitalPackageId.
            </summary>
            <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDigitalPackage( orderId,  digitalPackageId,  responseFields);
              var digitalPackageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.CreateDigitalPackageClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage,System.String,System.String)">
            <summary>
            Lets you apply a digital package to the order using the orderId and digitalPackage parameters.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="digitalPackage">Lets you manage an order's digital packages, by applying a digital package to the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDigitalPackage( digitalPackage,  orderId,  responseFields);
              var digitalPackageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.UpdateDigitalPackageClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage,System.String,System.String,System.String)">
            <summary>
            This method operates on one digital package, specified by the id given. This method ensures that the digital package ID provided is in the order with the id given, and then updates the properties of that package with the properties of the one passed in using the ‘digitalpackage’ parameter.
            </summary>
            <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="digitalPackage">Lets you manage an order's digital packages, by applying a digital package to the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDigitalPackage( digitalPackage,  orderId,  digitalPackageId,  responseFields);
              var digitalPackageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.DeleteDigitalPackageClient(System.String,System.String)">
             <summary>
             This operation deletes a digital package from an order. This operation requires three parameters: orderId, digitalPackageId, and digitalPackage.
             </summary>
             <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
             <param name="orderId">Unique identifier of the order.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDigitalPackage( orderId,  digitalPackageId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.ExtendedPropertyClient">
            <summary>
            commerce/orders/extendedproperties related resources. DOCUMENT_HERE 
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ExtendedPropertyClient.GetExtendedPropertiesClient(System.String,System.Nullable{System.Boolean})">
            <summary>
            orders-extendedproperties Get GetExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtendedProperties( orderId,  draft);
              var extendedPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ExtendedPropertyClient.AddExtendedPropertiesClient(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty},System.String,System.String,System.String)">
            <summary>
            orders-extendedproperties Post AddExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <param name="extendedProperties">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=AddExtendedProperties( extendedProperties,  orderId,  updateMode,  version);
              var extendedPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ExtendedPropertyClient.UpdateExtendedPropertyClient(Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            orders-extendedproperties Put UpdateExtendedProperty description DOCUMENT_HERE 
            </summary>
            <param name="key"></param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="upsert"></param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <param name="extendedProperty">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateExtendedProperty( extendedProperty,  orderId,  key,  updateMode,  version,  upsert,  responseFields);
              var extendedPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ExtendedPropertyClient.UpdateExtendedPropertiesClient(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty},System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            orders-extendedproperties Put UpdateExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="upsert"></param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <param name="extendedProperties">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateExtendedProperties( extendedProperties,  orderId,  updateMode,  version,  upsert);
              var extendedPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ExtendedPropertyClient.DeleteExtendedPropertyClient(System.String,System.String,System.String,System.String)">
             <summary>
             orders-extendedproperties Delete DeleteExtendedProperty description DOCUMENT_HERE 
             </summary>
             <param name="key"></param>
             <param name="orderId">Unique identifier of the order.</param>
             <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
             <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteExtendedProperty( orderId,  key,  updateMode,  version);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ExtendedPropertyClient.DeleteExtendedPropertiesClient(System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             orders-extendedproperties Delete DeleteExtendedProperties description DOCUMENT_HERE 
             </summary>
             <param name="orderId">Unique identifier of the order.</param>
             <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
             <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
             <param name="keys"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteExtendedProperties( keys,  orderId,  updateMode,  version);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.FulfillmentActionClient">
            <summary>
            Use the Fulfillment resource to manage shipments or pickups of collections of packages for an order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.FulfillmentActionClient.PerformFulfillmentActionClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction,System.String,System.String)">
            <summary>
            Sets the fulfillment action to "Ship" or "PickUp". To ship an order or prepare it for in-store pickup, the order must have a customer name, the "Open" or "OpenAndProcessing" status. To ship the order, it must also have the full shipping address and shipping method. Shipping all packages or picking up all pickups for an order will complete a paid order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="action">Properties of an action to perform when fulfilling an item in an order, whether through in-store pickup or direct shipping.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=PerformFulfillmentAction( action,  orderId,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.FulfillmentActionClient.ResendPackageFulfillmentEmailClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction,System.String,System.String)">
            <summary>
            orders-fulfillment Post ResendPackageFulfillmentEmail description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="action">Properties of an action to perform when fulfilling an item in an order, whether through in-store pickup or direct shipping.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ResendPackageFulfillmentEmail( action,  orderId,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.FulfillmentInfoClient">
            <summary>
            Use the Fulfillment Information resource to manage shipping or pickup information for orders.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.FulfillmentInfoClient.GetFulfillmentInfoClient(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of the fulfillment information for the specified order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetFulfillmentInfo( orderId,  draft,  responseFields);
              var fulfillmentInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.FulfillmentInfoClient.SetFulFillmentInfoClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo,System.String,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of fulfillment information for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="fulfillmentInfo">Properties of the information needed to fulfill an order, whether via in-store pickup or direct shipping.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=SetFulFillmentInfo( fulfillmentInfo,  orderId,  updateMode,  version,  responseFields);
              var fulfillmentInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient">
            <summary>
            Use the Order Attributes resource to define how an order attribute definition applies to a specific order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.GetOrderAttributesClient(System.String)">
            <summary>
            Retrieves a list of the attributes defined for the order specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderAttributes( orderId);
              var orderAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.CreateOrderAttributesClient(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute},System.String)">
            <summary>
            Applies a list of attributes to the order specified in the request and defines a value for each attribute in the request body.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderAttributes">Properties of an attribute applied to an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderAttributes( orderAttributes,  orderId);
              var orderAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.UpdateOrderAttributesClient(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute},System.String,System.Nullable{System.Boolean})">
            <summary>
            Updates one or more properties of an attribute defined for the order specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="removeMissing">If true, the operation removes missing properties so that the updated order attributes will not show properties with a null value.</param>
            <param name="orderAttributes">Properties of an attribute applied to an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderAttributes( orderAttributes,  orderId,  removeMissing);
              var orderAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.OrderItemClient">
            <summary>
            Use this subresource to retrieve details about items in an active order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.GetOrderItemViaLineIdClient(System.String,System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            orders-orderitems Get GetOrderItemViaLineId description DOCUMENT_HERE 
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="lineId"></param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderItemViaLineId( orderId,  lineId,  draft,  responseFields);
              var orderItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.GetOrderItemClient(System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of a single order item.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderItem( orderId,  orderItemId,  draft,  responseFields);
              var orderItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.GetOrderItemsClient(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of all items in an order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderItems( orderId,  draft,  responseFields);
              var orderItemCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.CreateOrderItemClient(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Adds a new item to a defined order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="orderItem">The details associated with a specific item in an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderItem( orderItem,  orderId,  updateMode,  version,  skipInventoryCheck,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.UpdateOrderItemDiscountClient(Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount,System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the discount applied to an item in an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="discount">Properties of all applied discounts for an associated cart, order, or product. </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderItemDiscount( discount,  orderId,  orderItemId,  discountId,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.UpdateItemDutyClient(System.String,System.String,System.Decimal,System.String,System.String,System.String)">
            <summary>
            orders-orderitems Put UpdateItemDuty description DOCUMENT_HERE 
            </summary>
            <param name="dutyAmount"></param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateItemDuty( orderId,  orderItemId,  dutyAmount,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.UpdateItemFulfillmentClient(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the item fulfillment information for the order specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="orderItem">The details associated with a specific item in an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateItemFulfillment( orderItem,  orderId,  orderItemId,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.UpdateItemProductPriceClient(System.String,System.String,System.Decimal,System.String,System.String,System.String)">
            <summary>
            Override the price of an individual product on a line item in the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="price">The override price to specify for this item in the specified order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateItemProductPrice( orderId,  orderItemId,  price,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.UpdateItemQuantityClient(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the quantity of an item in an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateItemQuantity( orderId,  orderItemId,  quantity,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.DeleteOrderItemClient(System.String,System.String,System.String,System.String)">
            <summary>
            Removes a previously added item from a defined order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=DeleteOrderItem( orderId,  orderItemId,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient">
            <summary>
            Use the Order Notes subresource to manage merchant-level notes associated with an active order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient.GetOrderNotesClient(System.String)">
            <summary>
            Retrieves a list of all notes for an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderNotes( orderId);
              var orderNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient.GetOrderNoteClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a specific order note.
            </summary>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderNote( orderId,  noteId,  responseFields);
              var orderNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient.CreateOrderNoteClient(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote,System.String,System.String)">
            <summary>
            Creates a new merchant note for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="orderNote">Properties of an order note for a merchant, which is internal only for administrative purposes and not available to the shopper.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderNote( orderNote,  orderId,  responseFields);
              var orderNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient.UpdateOrderNoteClient(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote,System.String,System.String,System.String)">
            <summary>
            Updates a specific note for an order.
            </summary>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="orderNote">Properties of an order note for a merchant, which is internal only for administrative purposes and not available to the shopper.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderNote( orderNote,  orderId,  noteId,  responseFields);
              var orderNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient.DeleteOrderNoteClient(System.String,System.String)">
             <summary>
             Deletes the specified order note.
             </summary>
             <param name="noteId">Unique identifier of a particular note to retrieve.</param>
             <param name="orderId">Unique identifier of the order.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteOrderNote( orderId,  noteId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.OrderValidationResultClient">
            <summary>
            Manage the results of order validation.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderValidationResultClient.GetValidationResultsClient(System.String)">
            <summary>
            Retrieves a list of the validation results associated with the order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetValidationResults( orderId);
              var orderValidationResultClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderValidationResultClient.AddValidationResultClient(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult,System.String,System.String)">
            <summary>
            Add a new order validation result to a submitted order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="validationResult">Properties of the resulting order validation performed by an order validation capability.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddValidationResult( validationResult,  orderId,  responseFields);
              var orderValidationResultClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.PackageClient">
            <summary>
            Use the Packages subresource to manage the physical packages to ship for an order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.GetAvailablePackageFulfillmentActionsClient(System.String,System.String)">
            <summary>
            Retrieves a list of the actions available to perform for a package associated with order fulfillment.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailablePackageFulfillmentActions( orderId,  packageId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.GetPackageLabelClient(System.String,System.String)">
            <summary>
            Retrieves the package label image supplied by the carrier.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:System.IO.Stream"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPackageLabel( orderId,  packageId);
              var streamClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.GetPackageClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPackage( orderId,  packageId,  responseFields);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.CreatePackageClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String)">
            <summary>
            Creates a new physical package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="package">Properties of a physical package shipped for an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePackage( pkg,  orderId,  responseFields);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.UpdatePackageClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of a physical package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="package">Properties of a physical package shipped for an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdatePackage( pkg,  orderId,  packageId,  responseFields);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.DeletePackageClient(System.String,System.String)">
             <summary>
             Removes a physical package of items from the specified order.
             </summary>
             <param name="orderId">Unique identifier of the order.</param>
             <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeletePackage( orderId,  packageId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.PaymentClient">
            <summary>
            Use the Payments subresource to manage payment transactions for orders. Each transaction performed for an order represents an individual payment. For example, if an order totals $75.00 but the shopper has a $50.00 gift certificate, both the gift certificate transaction and the credit card transaction for the remaining $25.00 are recorded as payments for the order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PaymentClient.GetPaymentsClient(System.String,System.String)">
            <summary>
            Retrieves information about all payment transactions submitted for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPayments( orderId,  responseFields);
              var paymentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PaymentClient.GetAvailablePaymentActionsClient(System.String,System.String)">
            <summary>
            Retrieves the list of all available payment actions dependent on the order payment status by specifying the order ID.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailablePaymentActions( orderId,  paymentId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PaymentClient.GetPaymentClient(System.String,System.String,System.String)">
            <summary>
            Retrieves information about a specific payment transaction submitted for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPayment( orderId,  paymentId,  responseFields);
              var paymentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PaymentClient.PerformPaymentActionClient(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String,System.String)">
            <summary>
            Performs the specified action for an individual order payment transaction.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="action">Properties of the payment action performed for an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=PerformPaymentAction( action,  orderId,  paymentId,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PaymentClient.CreatePaymentActionClient(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String)">
            <summary>
            Creates a new payment transaction for the specified order and performs the specified action.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="action">Properties of the payment action performed for an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePaymentAction( action,  orderId,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.PickupClient">
            <summary>
            Use the Pickups resource to organize items submitted in an order into pickups that enable the shopper to fulfill the order items using the in-store pickup method.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PickupClient.GetAvailablePickupFulfillmentActionsClient(System.String,System.String)">
            <summary>
            Retrieves a list of the actions available to perform for the pickup specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailablePickupFulfillmentActions( orderId,  pickupId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PickupClient.GetPickupClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the in-store pickup specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPickup( orderId,  pickupId,  responseFields);
              var pickupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PickupClient.CreatePickupClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup,System.String,System.String)">
            <summary>
            Create a new pickup for the order specified in the request for in-store fufillment.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="pickup">Properties of an in-store pickup defined to fulfill items in an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePickup( pickup,  orderId,  responseFields);
              var pickupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PickupClient.UpdatePickupClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup,System.String,System.String,System.String)">
            <summary>
            Updates one or more details of a defined in-store pickup.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="pickup">Properties of an in-store pickup defined to fulfill items in an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdatePickup( pickup,  orderId,  pickupId,  responseFields);
              var pickupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PickupClient.DeletePickupClient(System.String,System.String)">
             <summary>
             Removes a pickup previously defined for order item in-store pickup fulfillment.
             </summary>
             <param name="orderId">Unique identifier of the order.</param>
             <param name="pickupId">Unique identifier of the pickup to remove.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeletePickup( orderId,  pickupId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.RefundClient">
            <summary>
            commerce/orders/orderrefunds related resources. DOCUMENT_HERE 
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.RefundClient.CreateRefundClient(Mozu.Api.Contracts.CommerceRuntime.Refunds.Refund,System.String,System.String)">
            <summary>
            orders-orderrefunds Post CreateRefund description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="refund">Mozu.CommerceRuntime.Contracts.Refunds.Refund ApiType DOCUMENT_HERE </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Refunds.Refund"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateRefund( refund,  orderId,  responseFields);
              var refundClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.RefundClient.ResendRefundEmailClient(System.String,System.String)">
             <summary>
             orders-orderrefunds Put ResendRefundEmail description DOCUMENT_HERE 
             </summary>
             <param name="orderId">Unique identifier of the order.</param>
             <param name="refundId"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=ResendRefundEmail( orderId,  refundId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.ShipmentClient">
            <summary>
            Use the shipments resource to manage shipments of collections of packages for an order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShipmentClient.GetShipmentClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the order shipment specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetShipment( orderId,  shipmentId,  responseFields);
              var shipmentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShipmentClient.GetAvailableShipmentMethodsClient(System.String,System.Nullable{System.Boolean})">
            <summary>
            Retrieves the available shipping methods applicable to the order. Typically used to display available shipping method options on the checkout page.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailableShipmentMethods( orderId,  draft);
              var shippingRateClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShipmentClient.CreatePackageShipmentsClient(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Creates a shipment from one or more package associated with an order and assign a label and tracking number to an order shipment.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageIds">List of unique identifiers for each package associated with this shipment. Not all packages must belong to the same shipment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePackageShipments( packageIds,  orderId);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShipmentClient.DeleteShipmentClient(System.String,System.String)">
             <summary>
             Deletes the shipment specified in the request.
             </summary>
             <param name="orderId">Unique identifier of the order.</param>
             <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteShipment( orderId,  shipmentId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Payments.PublicCardClient">
            <summary>
            commerce/payments/cards related resources. DOCUMENT_HERE 
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Payments.PublicCardClient.CreateClient(Mozu.Api.Contracts.PaymentService.PublicCard)">
            <summary>
            payments-cards Post Create description DOCUMENT_HERE 
            </summary>
            <param name="request">Mozu.PaymentService.Contracts.PublicCard ApiType DOCUMENT_HERE </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.PaymentService.Response.SyncResponse"/>}
            </returns>
            <example>
            <code>
              var mozuClient=Create( request);
              var syncResponseClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Payments.PublicCardClient.UpdateClient(Mozu.Api.Contracts.PaymentService.PublicCard,System.String)">
            <summary>
            payments-cards Put Update description DOCUMENT_HERE 
            </summary>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <param name="request">Mozu.PaymentService.Contracts.PublicCard ApiType DOCUMENT_HERE </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.PaymentService.Response.SyncResponse"/>}
            </returns>
            <example>
            <code>
              var mozuClient=Update( request,  cardId);
              var syncResponseClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Payments.PublicCardClient.DeleteClient(System.String)">
             <summary>
             payments-cards Delete Delete description DOCUMENT_HERE 
             </summary>
             <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=Delete( cardId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.ReturnClient">
            <summary>
            Use the Returns resource to manage returned items that were previously fufilled. Returns can include any number of items associated with an original Mozu order. Each return must either be associated with an original order or a product definition to represent each returned item.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetReturnsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of all returns according to any filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetReturns( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var returnCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetAvailableReturnActionsClient(System.String)">
            <summary>
            Retrieves a list of the actions available to perform for the specified return based on its current state.
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailableReturnActions( returnId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetReturnItemClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a single return item.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="returnItemId">Unique identifier of the return item whose details you want to get.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetReturnItem( returnId,  returnItemId,  responseFields);
              var returnItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetReturnItemsClient(System.String,System.String)">
            <summary>
            Retrieves the details of all return items in an order.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItemCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetReturnItems( returnId,  responseFields);
              var returnItemCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetAvailablePaymentActionsForReturnClient(System.String,System.String)">
            <summary>
            Retrieves a list of the payment actions available to perform for the specified return when a return results in a refund to the customer.
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailablePaymentActionsForReturn( returnId,  paymentId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetPaymentClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a payment submitted as part of a refund associated with a customer return.
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPayment( returnId,  paymentId,  responseFields);
              var paymentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetPaymentsClient(System.String,System.String)">
            <summary>
            Retrieves a list of all payments submitted as part of a refund associated with a customer return.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPayments( returnId,  responseFields);
              var paymentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetReturnClient(System.String,System.String)">
            <summary>
            Retrieves a list of properties for the specified return.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetReturn( returnId,  responseFields);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.CreateReturnClient(Mozu.Api.Contracts.CommerceRuntime.Returns.Return,System.String)">
            <summary>
            Creates a return for previously fulfilled items. Each return must either be associated with an original order or a product definition to represent each returned item.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="ret">Properties of a return of one or more previously fulfilled items.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateReturn( ret,  responseFields);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.CreateReturnItemClient(Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem,System.String,System.String)">
            <summary>
            Adds a return item to the return.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="returnItem">Properties of a previously fulfilled item associated with a return.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateReturnItem( returnItem,  returnId,  responseFields);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.PerformPaymentActionForReturnClient(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String,System.String)">
            <summary>
            Updates a refund payment associated with a customer return by performing the specified action.
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="action">Properties of the payment action performed for an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=PerformPaymentActionForReturn( action,  returnId,  paymentId,  responseFields);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.CreatePaymentActionForReturnClient(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String)">
            <summary>
            Creates a new payment for a return that results in a refund to the customer.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="action">Properties of the payment action performed for an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePaymentActionForReturn( action,  returnId,  responseFields);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.PerformReturnActionsClient(Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction,System.String)">
            <summary>
            Updates the return by performing the action specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="action">Properties of an action a user can perform for a return.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=PerformReturnActions( action,  responseFields);
              var returnCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.UpdateReturnClient(Mozu.Api.Contracts.CommerceRuntime.Returns.Return,System.String,System.String)">
            <summary>
            Updates one or more properties of a return for items previously shipped in a completed order.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="ret">Properties of a return of one or more previously fulfilled items.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateReturn( ret,  returnId,  responseFields);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.ResendReturnEmailClient(Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction)">
             <summary>
             commerce-returns Put ResendReturnEmail description DOCUMENT_HERE 
             </summary>
             <param name="action">Properties of an action a user can perform for a return.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=ResendReturnEmail( action);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.DeleteOrderItemClient(System.String,System.String)">
            <summary>
            Removes a particular order item from the order of the current shopper.
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="returnItemId">Unique identifier of the return item whose details you want to get.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=DeleteOrderItem( returnId,  returnItemId);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.DeleteReturnClient(System.String)">
             <summary>
             Deletes the return specified in the request.
             </summary>
             <param name="returnId">Unique identifier of the return whose items you want to get.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteReturn( returnId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Returns.PackageClient">
            <summary>
            Use the Return Packages subresource to manage physical packages used to ship return replacement items.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.PackageClient.GetPackageLabelClient(System.String,System.String)">
            <summary>
            Retrieves the package label image supplied by the carrier for a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:System.IO.Stream"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPackageLabel( returnId,  packageId);
              var streamClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.PackageClient.GetPackageClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a package of return replacement items.
            </summary>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPackage( returnId,  packageId,  responseFields);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.PackageClient.CreatePackageClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String)">
            <summary>
            Creates a new physical package of return replacement items.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="package">Properties of a physical package shipped for an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePackage( pkg,  returnId,  responseFields);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.PackageClient.UpdatePackageClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of a package associated with a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="package">Properties of a physical package shipped for an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdatePackage( pkg,  returnId,  packageId,  responseFields);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.PackageClient.DeletePackageClient(System.String,System.String)">
             <summary>
             Deletes a package associated with a return replacement.
             </summary>
             <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
             <param name="returnId">Unique identifier of the return whose items you want to get.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeletePackage( returnId,  packageId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Returns.ShipmentClient">
            <summary>
            Use the Return Shipments subresource to manage shipments for a return replacement.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.ShipmentClient.GetShipmentClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the specified return replacement shipment.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetShipment( returnId,  shipmentId,  responseFields);
              var shipmentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.ShipmentClient.CreatePackageShipmentsClient(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Creates a shipment from one or more packages associated with a return replacement.
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="packageIds">List of unique identifiers for each package associated with this shipment. Not all packages must belong to the same shipment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePackageShipments( packageIds,  returnId);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.ShipmentClient.DeleteShipmentClient(System.String,System.String)">
             <summary>
             Deletes a shipment for a return replacement.
             </summary>
             <param name="returnId">Unique identifier of the return whose items you want to get.</param>
             <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteShipment( returnId,  shipmentId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.ApplicationClient">
            <summary>
            Use the Applications resource to update site-specific settings for installed applications.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.ApplicationClient.ThirdPartyGetApplicationClient(System.String)">
            <summary>
            Retrieve the settings of a third-party application.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Application.Application"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ThirdPartyGetApplication( responseFields);
              var applicationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.ApplicationClient.ThirdPartyUpdateApplicationClient(Mozu.Api.Contracts.SiteSettings.Application.Application,System.String)">
            <summary>
            Initializes an application with the necessary configured settings.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="application">Properties of an application installed in a tenant.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Application.Application"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ThirdPartyUpdateApplication( application,  responseFields);
              var applicationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.Checkout.CustomerCheckoutSettingsClient">
            <summary>
            Use the Customer Checkout Settings resource to define login settings that apply when shoppers proceed to checkout.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.CustomerCheckoutSettingsClient.GetCustomerCheckoutSettingsClient(System.String)">
            <summary>
            Retrieves all checkout settings defined for the site: Payment settings, such as the payment gateway ID and credentials, supported credit cards, and more; Customer Checkout settings, such as whether login is required, and any custom attributes; and Order Processing settings, such as when payment is authorized and captured, and any custom attributes.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCustomerCheckoutSettings( responseFields);
              var customerCheckoutSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.CustomerCheckoutSettingsClient.UpdateCustomerCheckoutSettingsClient(Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings,System.String)">
            <summary>
            Modifies existing site checkout settings. Modify Payment, Customer Checkout, and Order Processing settings in one PUT.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="customerCheckoutSettings">The properties of the customer checkout settings such as whether shoppers must be logged in.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCustomerCheckoutSettings( customerCheckoutSettings,  responseFields);
              var customerCheckoutSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.Checkout.PaymentSettingsClient">
            <summary>
            Use the Payment Settings resource to specify settings when creating payments for order checkout on the site.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.PaymentSettingsClient.GetThirdPartyPaymentWorkflowsClient">
            <summary>
            Retrieves the details of the third-party payment service workflows configured for the site.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.ExternalPaymentWorkflowDefinition"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetThirdPartyPaymentWorkflows();
              var externalPaymentWorkflowDefinitionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.CheckoutSettingsClient">
            <summary>
            Use the Checkout Settings resource to specify the site-wide settings that define checkout and order processing behavior. This resource includes subresources for payment settings, customer checkout settings, and order processing settings.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.CheckoutSettingsClient.GetCheckoutSettingsClient(System.String)">
            <summary>
            Retrieves all checkout settings defined for the site including payment settings (payment gateway ID and credentials), shopper checkout settings (login requirement or guest mode and custom attributes), and order processing settings (when payment is authorized and captured plus any custom attributes).
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCheckoutSettings( responseFields);
              var checkoutSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.General.TaxableTerritoryClient">
            <summary>
            Use the taxable territories subresource to manage the regional territories for this site that are subejct to sales tax.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.General.TaxableTerritoryClient.GetTaxableTerritoriesClient">
            <summary>
            Retrieves a list of the taxable territories configured for the site.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetTaxableTerritories();
              var taxableTerritoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.General.TaxableTerritoryClient.AddTaxableTerritoryClient(Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory,System.String)">
            <summary>
            Creates a new territory for which to calculate sales tax.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="taxableTerritory">Properties of the territory which is subject to sales tax.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddTaxableTerritory( taxableTerritory,  responseFields);
              var taxableTerritoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.General.TaxableTerritoryClient.UpdateTaxableTerritoriesClient(System.Collections.Generic.List{Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory})">
            <summary>
            Updates one or more taxable territories configured for a site.
            </summary>
            <param name="taxableterritories">Properties of the territory which is subject to sales tax.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateTaxableTerritories( taxableterritories);
              var taxableTerritoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.GeneralSettingsClient">
            <summary>
            Define global site settings such as the site name, shipping and email addresses, and logo images. Block undesirable IP addresses using this resource.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.GeneralSettingsClient.GetGeneralSettingsClient(System.String)">
            <summary>
            Retrieve a site's general global settings.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetGeneralSettings( responseFields);
              var generalSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.GeneralSettingsClient.UpdateGeneralSettingsClient(Mozu.Api.Contracts.SiteSettings.General.GeneralSettings,System.String)">
            <summary>
            Updates a site's general global settings.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="generalSettings">General settings used on the storefront site.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateGeneralSettings( generalSettings,  responseFields);
              var generalSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.LocationUsageClient">
            <summary>
            Use the Location Usages resource to define the locations and location types that interact with the specified site. The system creates three default location usage types for each site after provisioning a new tenant - one for direct ship (DS), one for in-store pickup (SP), and one for store finder (storeFinder). Each site can only use a single location for the direct ship location usage type, and the location must support the direct ship fulfillment type (DS). For the in-store pickup location usage type, each site can use one or more location types. The location service identifies all locations of the specified type that support the in-store pickup fulfillment type (SP). For the store finder location usage type, each site can use one or more location types. The location service identifies all locations of the type. Locations configured for the store finder type do not typically maintain inventory. You cannot create additional location usage types at this time.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.LocationUsageClient.GetLocationUsagesClient(System.String)">
            <summary>
            Retrieves the configured site location usages for the location usage code specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationUsageCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationUsages( responseFields);
              var locationUsageCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.LocationUsageClient.GetLocationUsageClient(System.String,System.String)">
            <summary>
            Retrieves the location usages for the site specified in the request header.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationUsage"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationUsage( code,  responseFields);
              var locationUsageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.LocationUsageClient.UpdateLocationUsageClient(Mozu.Api.Contracts.Location.LocationUsage,System.String,System.String)">
            <summary>
            Updates the location usage for the site based on the location usage code specified in the request.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="usage">Configuration properties of a location usage type for a specified site. The direct ship location usage type consists of a single location that represents location that supports direct ship (DS) fulfillment. The in-store pickup location usage type consists of a list of location types that represent locations that support in-store pickup (SP) fulfillment. The store finder location usage type consists of a list of location codes, location types, or both.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationUsage"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateLocationUsage( usage,  code,  responseFields);
              var locationUsageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingHandlingFeeClient">
            <summary>
            Use the Order Handling Fee subresource to configure any shipping and handling fees to apply to orders for this site.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingHandlingFeeClient.GetOrderHandlingFeeClient(System.String)">
            <summary>
            Retrieves the details of the order handling fee configured for the site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderHandlingFee( responseFields);
              var siteShippingHandlingFeeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingHandlingFeeClient.CreateOrderHandlingFeeClient(Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee,System.String)">
            <summary>
            Creates a new order handling fee for the site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="orderHandlingFee">Properties of the handling fee to apply to order shipments for the site.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderHandlingFee( orderHandlingFee,  responseFields);
              var siteShippingHandlingFeeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingHandlingFeeClient.UpdateOrderHandlingFeeClient(Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee,System.String)">
            <summary>
            Updates the order handling fee amount for the site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="orderHandlingFee">Properties of the handling fee to apply to order shipments for the site.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderHandlingFee( orderHandlingFee,  responseFields);
              var siteShippingHandlingFeeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.SiteShippingSettingsClient">
            <summary>
            Use the shipping subresource to manage settings for the site shipping information, such as origin address information, carrier shipping methods, shipping rate providers, and regions available for shipping.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.SiteShippingSettingsClient.GetSiteShippingSettingsClient(System.String)">
            <summary>
            Retrieves a list of the shipping settings configured for a site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetSiteShippingSettings( responseFields);
              var siteShippingSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.WishlistClient">
            <summary>
            Use the Wish Lists resource to manage the shopper wish lists of products associated with a customer account. Although customer accounts are managed at the tenant level, the system stores shopper wish lists at the site level. This enables the same customer to have wish lists for each of a merchant's sites. Use the Wish List Items resource to manage items in a wish list.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.WishlistClient.GetWishlistsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a list of shopper wish lists according to any filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetWishlists( startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  responseFields);
              var wishlistCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.WishlistClient.GetWishlistClient(System.String,System.String)">
            <summary>
            Retrieves the details of the shopper wish list specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetWishlist( wishlistId,  responseFields);
              var wishlistClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.WishlistClient.GetWishlistByNameClient(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of a wish list by supplying the wish list name.
            </summary>
            <param name="customerAccountId">The unique identifier of the customer account for which to retrieve wish lists.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistName">The name of the wish list to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetWishlistByName( customerAccountId,  wishlistName,  responseFields);
              var wishlistClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.WishlistClient.CreateWishlistClient(Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist,System.String)">
            <summary>
            Creates a new shopper wish list for the associated customer account. Although customer accounts are maintained at the tenant level, the system stores wish lists at the site level. Newly created wish lists do not have any items.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlist">Properties of a shopper wish list defined for a site, associated with a customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateWishlist( wishlist,  responseFields);
              var wishlistClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.WishlistClient.UpdateWishlistClient(Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist,System.String,System.String)">
            <summary>
            Updates one or more properties of a shopper wish list defined for a customer account.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlist">Properties of a shopper wish list defined for a site, associated with a customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateWishlist( wishlist,  wishlistId,  responseFields);
              var wishlistClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.WishlistClient.DeleteWishlistClient(System.String)">
             <summary>
             Deletes the shopper wish list specified in the request and all items associated with it.
             </summary>
             <param name="wishlistId">Unique identifier of the wish list.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteWishlist( wishlistId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient">
            <summary>
            Use the Wish List Items subresource to manage items in a shopper wish list. The same product can be defined as an item in any number of wish lists for the customer account. Use the Wish Lists resource to manage shopper wish lists.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.GetWishlistItemClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of an item in a shopper wish list.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetWishlistItem( wishlistId,  wishlistItemId,  responseFields);
              var wishlistItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.GetWishlistItemsClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of items in a shopper wish list according to any specified filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetWishlistItems( wishlistId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var wishlistItemCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.GetWishlistItemsByWishlistNameClient(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieve a list of items in a customer wish list by supplying the wish list name.
            </summary>
            <param name="customerAccountId">The unique identifier of the customer account for which to retrieve wish lists.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="wishlistName">The name of the wish list to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetWishlistItemsByWishlistName( customerAccountId,  wishlistName,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var wishlistItemCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.AddItemToWishlistClient(Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem,System.String,System.String)">
            <summary>
            Adds a product in a site's catalog as an item in a shopper wish list.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItem">Properties of an item in a shopper wish list.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddItemToWishlist( wishlistItem,  wishlistId,  responseFields);
              var wishlistItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.UpdateWishlistItemQuantityClient(System.String,System.String,System.Int32,System.String)">
            <summary>
            Updates the quantity of an item in a shopper wish list.
            </summary>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateWishlistItemQuantity( wishlistId,  wishlistItemId,  quantity,  responseFields);
              var wishlistItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.UpdateWishlistItemClient(Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem,System.String,System.String,System.String)">
            <summary>
            Updates the details of an item in a shopper wish list.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <param name="wishlistItem">Properties of an item in a shopper wish list.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateWishlistItem( wishlistItem,  wishlistId,  wishlistItemId,  responseFields);
              var wishlistItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.RemoveAllWishlistItemsClient(System.String)">
            <summary>
            Removes all items associated with a shopper wish list.
            </summary>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveAllWishlistItems( wishlistId);
              var wishlistClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.DeleteWishlistItemClient(System.String,System.String)">
             <summary>
             Removes an item from the wish list specified in the request.
             </summary>
             <param name="wishlistId">Unique identifier of the wish list.</param>
             <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteWishlistItem( wishlistId,  wishlistItemId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.DocumentDraftSummaryClient">
            <summary>
            Use the document publishing subresource to manage and publish document drafts in the Content service.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentDraftSummaryClient.ListDocumentDraftSummariesClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of the documents currently in draft state, according to any defined filter and sort criteria.
            </summary>
            <param name="documentLists">List of document lists that contain documents to delete.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ListDocumentDraftSummaries( pageSize,  startIndex,  documentLists,  responseFields);
              var documentDraftSummaryPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentDraftSummaryClient.DeleteDocumentDraftsClient(System.Collections.Generic.List{System.String},System.String)">
             <summary>
             Deletes the drafts of the specified documents. Published documents cannot be deleted.
             </summary>
             <param name="documentLists">List of document lists that contain documents to delete.</param>
             <param name="documentIds">Unique identifiers of the documents to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDocumentDrafts( documentIds,  documentLists);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentDraftSummaryClient.PublishDocumentsClient(System.Collections.Generic.List{System.String},System.String)">
             <summary>
             Publish one or more document drafts to live content on the site.
             </summary>
             <param name="documentLists">List of document lists that contain documents to delete.</param>
             <param name="documentIds">Unique identifiers of the documents to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=PublishDocuments( documentIds,  documentLists);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.DocumentListClient">
            <summary>
            Use the document lists resource to organize your site's documents into a hierarchy. Document lists can contain documents, folders, and complete hierarchies of folders, which contain documents with unique names.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListClient.GetDocumentListsClient(Mozu.Api.DataViewMode,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a collection of document lists.
            </summary>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentListCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocumentLists(dataViewMode,  pageSize,  startIndex,  responseFields);
              var documentListCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListClient.GetDocumentListClient(Mozu.Api.DataViewMode,System.String,System.String)">
            <summary>
            Retrieve the details of a document list by providing the list name.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocumentList(dataViewMode,  documentListName,  responseFields);
              var documentListClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListClient.CreateDocumentListClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.Content.DocumentList,System.String)">
            <summary>
            Creates a new documentList
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="list">The list of document types and related properties that define content used by the content management system (CMS).</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDocumentList(dataViewMode,  list,  responseFields);
              var documentListClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListClient.UpdateDocumentListClient(Mozu.Api.Contracts.Content.DocumentList,System.String,System.String)">
            <summary>
            Updates a `DocumentListName`.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="list">The list of document types and related properties that define content used by the content management system (CMS).</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDocumentList( list,  documentListName,  responseFields);
              var documentListClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListClient.DeleteDocumentListClient(System.String)">
             <summary>
             Deletes the specified `DocumentListName`.
             </summary>
             <param name="documentListName">Name of content documentListName to delete</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDocumentList( documentListName);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.Documentlists.DocumentClient">
            <summary>
            Use this subresource to manage documents in a document list.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.GetDocumentContentClient(Mozu.Api.DataViewMode,System.String,System.String)">
            <summary>
            Retrieve the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:System.IO.Stream"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocumentContent(dataViewMode,  documentListName,  documentId);
              var streamClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.GetDocumentClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves a document within the specified document list.
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocument(dataViewMode,  documentListName,  documentId,  responseFields);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.GetDocumentsClient(Mozu.Api.DataViewMode,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a collection of documents according to any filter and sort criteria.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocuments(dataViewMode,  documentListName,  filter,  sortBy,  pageSize,  startIndex,  responseFields);
              var documentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.CreateDocumentClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.Content.Document,System.String,System.String)">
            <summary>
            Creates a new document in an defined document list.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="document">The document properties that define the content used by the content management system (CMS).</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDocument(dataViewMode,  document,  documentListName,  responseFields);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.UpdateDocumentContentClient(System.IO.Stream,System.String,System.String,System.String)">
             <summary>
             Updates the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
             </summary>
             <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
             <param name="documentListName">Name of content documentListName to delete</param>
             <param name="stream">Data stream that delivers information. Used to input and output data.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateDocumentContent( stream,  documentListName,  documentId,  contentType);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.UpdateDocumentClient(Mozu.Api.Contracts.Content.Document,System.String,System.String,System.String)">
            <summary>
            Updates a document in a document list.
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="document">The document properties that define the content used by the content management system (CMS).</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDocument( document,  documentListName,  documentId,  responseFields);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.DeleteDocumentClient(System.String,System.String)">
             <summary>
             Deletes a specific document based on the specified document ID.
             </summary>
             <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
             <param name="documentListName">Name of content documentListName to delete</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDocument( documentListName,  documentId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.DeleteDocumentContentClient(System.String,System.String)">
             <summary>
             Deletes the content associated with a document, such as a product image or PDF specification, by supplying the document ID.
             </summary>
             <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
             <param name="documentListName">Name of content documentListName to delete</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDocumentContent( documentListName,  documentId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient">
            <summary>
            Use the document tree subresource to retrieve documents and manage content within the document hierarchy.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.GetTreeDocumentContentClient(Mozu.Api.DataViewMode,System.String,System.String)">
            <summary>
            Retrieve the content associated with the document, such as a product image or PDF specifications file.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="documentName">The name of the document in the site.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:System.IO.Stream"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTreeDocumentContent(dataViewMode,  documentListName,  documentName);
              var streamClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.GetTreeDocumentClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves a document based on its document list and folder path in the document hierarchy.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="documentName">The name of the document in the site.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTreeDocument(dataViewMode,  documentListName,  documentName,  responseFields);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.UpdateTreeDocumentContentClient(System.IO.Stream,System.String,System.String,System.String)">
             <summary>
             Updates the content associated with a document, such as a product image or PDF specifications file, based on the document's position in the document hierarchy.
             </summary>
             <param name="documentListName">Name of content documentListName to delete</param>
             <param name="documentName">The name of the document in the site.</param>
             <param name="stream">Data stream that delivers information. Used to input and output data.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateTreeDocumentContent( stream,  documentListName,  documentName,  contentType);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.DeleteTreeDocumentContentClient(System.IO.Stream,System.String,System.String,System.String)">
             <summary>
             Deletes the content associated with a document, such as a product image or PDF specifications file.
             </summary>
             <param name="documentListName">Name of content documentListName to delete</param>
             <param name="documentName">The name of the document in the site.</param>
             <param name="stream">Data stream that delivers information. Used to input and output data.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteTreeDocumentContent( stream,  documentListName,  documentName,  contentType);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.Documentlists.FacetClient">
            <summary>
            Use the facets subresource to allow a merchant to add information for product indexing and searching.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.FacetClient.GetFacetsClient(System.String,System.String)">
            <summary>
            Retrieves the properties of facets that aid in indexing and searching.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="propertyName">The property name associated with the facets to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Content.Facet"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetFacets( documentListName,  propertyName);
              var facetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.Documentlists.ViewClient">
            <summary>
            Properties and content for views within a site/tenant. Views provide the schema, formatting, and associated content and entities for displaying content within a site/tenant.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.ViewClient.GetViewDocumentsClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a collection of documents associated with a view.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetViewDocuments( documentListName,  viewName,  filter,  sortBy,  pageSize,  startIndex,  responseFields);
              var documentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.DocumentListTypeClient">
            <summary>
            Use the Document List Types resource to manage the types of document lists in your site's document hierarchy. The type denotes a content type for that list of folders, sub-folders, and documents such as `web_pages`.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListTypeClient.CreateDocumentListTypeClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.Content.DocumentListType,System.String)">
            <summary>
            Creates a new documentListType
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="list">Properties for the document list type. Document lists contain documents with an associated document type, such as web pages.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentListType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDocumentListType(dataViewMode,  list,  responseFields);
              var documentListTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListTypeClient.UpdateDocumentListTypeClient(Mozu.Api.Contracts.Content.DocumentListType,System.String,System.String)">
            <summary>
            Updates a DocumentListType
            </summary>
            <param name="documentListTypeFQN"></param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="list">Properties for the document list type. Document lists contain documents with an associated document type, such as web pages.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentListType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDocumentListType( list,  documentListTypeFQN,  responseFields);
              var documentListTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.DocumentTypeClient">
            <summary>
            Use the Document Types resource to view the document types supplied by the Content API.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentTypeClient.GetDocumentTypesClient(Mozu.Api.DataViewMode,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a paged list of the system-defined document types.
            </summary>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentTypeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocumentTypes(dataViewMode,  pageSize,  startIndex,  responseFields);
              var documentTypeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentTypeClient.GetDocumentTypeClient(Mozu.Api.DataViewMode,System.String,System.String)">
            <summary>
            Retrieves a system-defined document type.
            </summary>
            <param name="documentTypeName">The name of the document type to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocumentType(dataViewMode,  documentTypeName,  responseFields);
              var documentTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentTypeClient.CreateDocumentTypeClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.Content.DocumentType,System.String)">
            <summary>
            Creates a new DocumentType
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="documentType">The type of documents used in the CMS such as "web_page" or "template" or "image_url".</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDocumentType(dataViewMode,  documentType,  responseFields);
              var documentTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentTypeClient.UpdateDocumentTypeClient(Mozu.Api.Contracts.Content.DocumentType,System.String,System.String)">
            <summary>
            Updates a DocumentType
            </summary>
            <param name="documentTypeName">The name of the document type to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="documentType">The type of documents used in the CMS such as "web_page" or "template" or "image_url".</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDocumentType( documentType,  documentTypeName,  responseFields);
              var documentTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.PropertyTypeClient">
            <summary>
            Use the property types subresource to manage content properties.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.PropertyTypeClient.GetPropertyTypesClient(Mozu.Api.DataViewMode,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a list of the content property types.
            </summary>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.PropertyTypeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPropertyTypes(dataViewMode,  pageSize,  startIndex,  responseFields);
              var propertyTypeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.PropertyTypeClient.GetPropertyTypeClient(Mozu.Api.DataViewMode,System.String,System.String)">
            <summary>
            Retrieves the details of the content property type.
            </summary>
            <param name="propertyTypeName">The name of the property type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPropertyType(dataViewMode,  propertyTypeName,  responseFields);
              var propertyTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.PropertyTypeClient.CreatePropertyTypeClient(Mozu.Api.Contracts.Content.PropertyType,System.String)">
            <summary>
            Creates a new
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="propertyType">Property type available for content. Property types are like templates that can be reused.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePropertyType( propertyType,  responseFields);
              var propertyTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.PropertyTypeClient.UpdatePropertyTypeClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.Content.PropertyType,System.String,System.String)">
            <summary>
            Updates a
            </summary>
            <param name="propertyTypeName">The name of the property type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="propertyType">Property type available for content. Property types are like templates that can be reused.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdatePropertyType(dataViewMode,  propertyType,  propertyTypeName,  responseFields);
              var propertyTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.PropertyTypeClient.DeletePropertyTypeClient(Mozu.Api.DataViewMode,System.String)">
             <summary>
             Delete a specific
             </summary>
             <param name="propertyTypeName">The name of the property type.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeletePropertyType(dataViewMode,  propertyTypeName);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Event.EventNotificationClient">
            <summary>
            Events are notifications Mozu publishes to the application when a create, read, update, or delete operation is performed. If the application subscribes to the event, you can use the Events resource to query for recent events Mozu published to your application or events that were not published successfully.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Event.EventNotificationClient.GetEventsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of events.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Event.EventCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEvents( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var eventCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Event.EventNotificationClient.GetEventClient(System.String,System.String)">
            <summary>
            Retrieves an event by providing the event ID.
            </summary>
            <param name="eventId">The unique identifier of the event being retrieved. An event is a notification about a create, read, update, or delete on an order, product, discount or category.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Event.Event"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEvent( eventId,  responseFields);
              var eventClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Event.Push.SubscriptionClient">
            <summary>
            The Subscriptions resource triggers a push service to sent immediate notifications to the subscribed tenants and applications when triggers. The resource sends messages regarding a subscription event tha occurs in the tenant or site.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Event.Push.SubscriptionClient.GetSubscriptionsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of events according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Event.SubscriptionCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetSubscriptions( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var subscriptionCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Event.Push.Subscriptions.EventDeliverySummaryClient">
            <summary>
            Provides details for each attempted delivery of the event to the endpoint.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Event.Push.Subscriptions.EventDeliverySummaryClient.GetDeliveryAttemptSummaryClient(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This operation method is the external/public event entity used specifically in pull/poll event scenarios.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="subscriptionId">Unique identifier for a subscription, such as subscribing tenants for an event or to receive a notification.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Event.EventDeliverySummary"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDeliveryAttemptSummary( subscriptionId,  id,  responseFields);
              var eventDeliverySummaryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Event.Push.Subscriptions.EventDeliverySummaryClient.GetDeliveryAttemptSummariesClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of data for delivery attempts of events and notifications. These are notifications sent to subscribing sites and tenants. A paged list is returned sorted and filtered per the entered parameters.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="subscriptionId">Unique identifier for a subscription, such as subscribing tenants for an event or to receive a notification.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Event.EventDeliverySummaryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDeliveryAttemptSummaries( subscriptionId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var eventDeliverySummaryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Adminuser.AdminUserClient">
            <summary>
            The Accounts resource displays the user accounts and account details associated with a developer or Mozu tenant administrator. Email addresses uniquely identify admin user accounts.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.AdminUserClient.GetTenantScopesForUserClient(System.String,System.String)">
            <summary>
            Retrieves a list of the Mozu tenants or development stores for which the specified user has an assigned role.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Tenant.TenantCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTenantScopesForUser( userId,  responseFields);
              var tenantCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.AdminUserClient.GetUserClient(System.String,System.String)">
            <summary>
            Retrieves the details of the specified administrator user account.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.User"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetUser( userId,  responseFields);
              var userClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Adminuser.TenantAdminUserAuthTicketClient">
            <summary>
            Use the Admin User authentication tickets resource to generate and refresh authentication tickets that enable Mozu administrator or developer account users to access development or production tenants.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.TenantAdminUserAuthTicketClient.CreateUserAuthTicketClient(Mozu.Api.Contracts.Core.UserAuthInfo,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates an authentication ticket for the supplied user to specify in API requests associated with the supplied tenant.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="tenantId">Unique identifier of the development or production tenant for which to generate the user authentication ticket.</param>
            <param name="userAuthInfo">Information required to authenticate a user.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateUserAuthTicket( userAuthInfo,  tenantId,  responseFields);
              var tenantAdminUserAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.TenantAdminUserAuthTicketClient.RefreshAuthTicketClient(Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket,System.Nullable{System.Int32},System.String)">
            <summary>
            Generates a new user authentication ticket for the specified tenant by supplying the user's existing refresh token information.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="tenantId"></param>
            <param name="existingAuthTicket">Properties of the authentication ticket to be used in user claims with the Mozu API.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RefreshAuthTicket( existingAuthTicket,  tenantId,  responseFields);
              var tenantAdminUserAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.TenantAdminUserAuthTicketClient.DeleteUserAuthTicketClient(System.String)">
             <summary>
             Deletes the authentication ticket for the user by supplying the refresh token.
             </summary>
             <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteUserAuthTicket( refreshToken);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.ApplicationClient">
            <summary>
            platform/developer related resources. DOCUMENT_HERE 
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ApplicationClient.GetAppPackageNamesClient(System.String,System.String)">
            <summary>
            platform-developer Get GetAppPackageNames description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AppDev.PackageNamesCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAppPackageNames( applicationKey,  responseFields);
              var packageNamesCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ApplicationClient.GetAppVersionsClient(System.String,System.String)">
            <summary>
            platform-developer Get GetAppVersions description DOCUMENT_HERE 
            </summary>
            <param name="nsAndAppId"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AppDev.ApplicationVersionsCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAppVersions( nsAndAppId,  responseFields);
              var applicationVersionsCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ApplicationClient.GetPackageFileMetadataClient(System.String,System.String,System.String)">
            <summary>
            platform-developer Get GetPackageFileMetadata description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="filepath"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AppDev.FileMetadata"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPackageFileMetadata( applicationKey,  filepath,  responseFields);
              var fileMetadataClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ApplicationClient.GetPackageMetadataClient(System.String,System.String)">
            <summary>
            platform-developer Get GetPackageMetadata description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AppDev.FolderMetadata"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPackageMetadata( applicationKey,  responseFields);
              var folderMetadataClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ApplicationClient.UpsertPackageFileClient(System.IO.Stream,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            platform-developer Post UpsertPackageFile description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="filepath"></param>
            <param name="lastModifiedTime"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="stream">Data stream that delivers information. Used to input and output data.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AppDev.FileMetadata"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpsertPackageFile( stream,  applicationKey,  filepath,  lastModifiedTime,  responseFields,  contentType);
              var fileMetadataClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ApplicationClient.RenamePackageFileClient(Mozu.Api.Contracts.AppDev.RenameInfo,System.String,System.String)">
            <summary>
            platform-developer Post RenamePackageFile description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="renameInfo">Information required to update the name of a file in a package, which consists of the original name and the new name.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AppDev.FileMetadata"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RenamePackageFile( renameInfo,  applicationKey,  responseFields);
              var fileMetadataClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ApplicationClient.DeletePackageFileClient(System.String,System.String)">
             <summary>
             platform-developer Delete DeletePackageFile description DOCUMENT_HERE 
             </summary>
             <param name="applicationKey"></param>
             <param name="filepath"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeletePackageFile( applicationKey,  filepath);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Applications.AuthTicketClient">
            <summary>
            Use the Authetickets for applications resource to manage authentication tickets for your apps.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Applications.AuthTicketClient.AuthenticateAppClient(Mozu.Api.Contracts.AppDev.AppAuthInfo,System.String)">
            <summary>
            Generate an authentication ticket for an application.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="appAuthInfo">The information required to authenticate third party applications against the Mozu API.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AppDev.AuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AuthenticateApp( appAuthInfo,  responseFields);
              var authTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Applications.AuthTicketClient.RefreshAppAuthTicketClient(Mozu.Api.Contracts.AppDev.AuthTicketRequest,System.String)">
            <summary>
            Refreshes the application's authentication ticket and generates a new access token by providing the refresh token string.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="authTicketRequest">Properties of the authentication ticket refresh requests, which includes the refresh token string.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AppDev.AuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RefreshAppAuthTicket( authTicketRequest,  responseFields);
              var authTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Applications.AuthTicketClient.DeleteAppAuthTicketClient(System.String)">
             <summary>
             Deletes an authentication for an application based on the specified refresh token.
             </summary>
             <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAppAuthTicket( refreshToken);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Developer.DeveloperAdminUserAuthTicketClient">
            <summary>
            Use the Authtickets resource to manage authentication tickets for your developer account.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Developer.DeveloperAdminUserAuthTicketClient.CreateDeveloperUserAuthTicketClient(Mozu.Api.Contracts.Core.UserAuthInfo,System.Nullable{System.Int32},System.String)">
            <summary>
            Generate an authentication ticket for a developer account.
            </summary>
            <param name="developerAccountId">Unique identifier of the developer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userAuthInfo">Information required to authenticate a user.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDeveloperUserAuthTicket( userAuthInfo,  developerAccountId,  responseFields);
              var developerAdminUserAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Developer.DeveloperAdminUserAuthTicketClient.RefreshDeveloperAuthTicketClient(Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket,System.Nullable{System.Int32},System.String)">
            <summary>
            Generates a new developer account authentication ticket for the specified tenant by supplying the defined refresh token information.
            </summary>
            <param name="developerAccountId">Unique identifier of the developer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="existingAuthTicket">Properties of the authentication ticket to be used in developer account claims with the Mozu API.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RefreshDeveloperAuthTicket( existingAuthTicket,  developerAccountId,  responseFields);
              var developerAdminUserAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Developer.DeveloperAdminUserAuthTicketClient.DeleteUserAuthTicketClient(System.String)">
             <summary>
             Deletes the authentication ticket for the developer account by supplying the refresh token.
             </summary>
             <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteUserAuthTicket( refreshToken);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.EntityListClient">
            <summary>
            The Entity Lists resource manages all dynamic entities in your Mozu document store of the Mozu cloud. The content is JSON and can have up to five indexed properties (integer, decimal, string, date, and boolean) with support for additional customized elements as needed. Every document in the entity list has a validated unique ID. 
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.EntityListClient.GetEntityListsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a filtered list of EntityLists for a specific tenant.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityListCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntityLists( pageSize,  startIndex,  filter,  sortBy,  responseFields);
              var entityListCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.EntityListClient.GetEntityListClient(System.String,System.String)">
            <summary>
            Get an existing EntityList definition for a specific tenant
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityList"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntityList( entityListFullName,  responseFields);
              var entityListClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.EntityListClient.CreateEntityListClient(Mozu.Api.Contracts.MZDB.EntityList,System.String)">
            <summary>
            Create a new EntityList for a specific tenant.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="entityList">The definition of an MZDB EntityList which describes the characteristics of the EntityList on a per tenant basis. EntityLists are created at the tenant level, but instances of the EntityLists are implicitly created at the appropriate context level as entities are added or removed from the EntityList.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityList"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateEntityList( entityList,  responseFields);
              var entityListClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.EntityListClient.UpdateEntityListClient(Mozu.Api.Contracts.MZDB.EntityList,System.String,System.String)">
            <summary>
            Update an existing Entitylist for a specific tenant.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="entityList">The definition of an MZDB EntityList which describes the characteristics of the EntityList on a per tenant basis. EntityLists are created at the tenant level, but instances of the EntityLists are implicitly created at the appropriate context level as entities are added or removed from the EntityList.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityList"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateEntityList( entityList,  entityListFullName,  responseFields);
              var entityListClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.EntityListClient.DeleteEntityListClient(System.String)">
             <summary>
             Delete an existing EntityList for a specific tenant. This will also delete all Entities in all instances of this EntityList for the tenant.
             </summary>
             <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteEntityList( entityListFullName);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Entitylists.EntityClient">
            <summary>
            Entities are JSON entries within the MZDB (Mozu Mongo DB) for handling large data sets to heavily filter (&gt;2,000 items). Each entity is associated to an EntityList with schema, rules, and formatting for storing the content. This content can be accessed via the Mozu API and Mozu Hypr tags.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.EntityClient.GetEntityClient(System.String,System.String,System.String)">
            <summary>
            Retrieves an entity with an associated entity list and context level at tenant, master catalog, catalog, or site. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{JObject}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntity( entityListFullName,  id,  responseFields);
              var jsonClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.EntityClient.GetEntitiesClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of entities with an associated entity list and context level at tenant, master catalog, catalog, or site. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntities( entityListFullName,  pageSize,  startIndex,  filter,  sortBy,  responseFields);
              var entityCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.EntityClient.InsertEntityClient(Newtonsoft.Json.Linq.JObject,System.String,System.String)">
            <summary>
            Inserts a new entity per the entered item, the entity list full name, and associated response fields. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="item">JSON code for objects.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{JObject}
            </returns>
            <example>
            <code>
              var mozuClient=InsertEntity( item,  entityListFullName,  responseFields);
              var jsonClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.EntityClient.UpdateEntityClient(Newtonsoft.Json.Linq.JObject,System.String,System.String,System.String)">
            <summary>
            Updates the content and associations for an existing entity.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="item">JSON code for objects.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{JObject}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateEntity( item,  entityListFullName,  id,  responseFields);
              var jsonClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.EntityClient.DeleteEntityClient(System.String,System.String)">
             <summary>
             Deletes an entity depending on the context of tenant, master catalog, catalog, or site level. Entities are associated to an entity list (schema and formatting) for displaying within a namespace and context level.
             </summary>
             <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
             <param name="id">Unique identifier of the customer segment to retrieve.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteEntity( entityListFullName,  id);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Entitylists.EntityContainerClient">
            <summary>
            Entity containers provide all properties and data for entities within a site/tenant. This data encapsulates all associated IDs including entity lists, entity views, site, tenant, entities, and more.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.EntityContainerClient.GetEntityContainerClient(System.String,System.String,System.String)">
            <summary>
            Retrieves an entity container, providing all schema and rules and associated IDs for entities.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityContainer"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntityContainer( entityListFullName,  id,  responseFields);
              var entityContainerClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.EntityContainerClient.GetEntityContainersClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of entity containers. Each container holds a set of entities per ID. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityContainerCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntityContainers( entityListFullName,  pageSize,  startIndex,  filter,  sortBy,  responseFields);
              var entityContainerCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Entitylists.ListViewClient">
            <summary>
            Provides settings and options for displaying associated content within a context level of site, tenant, catalog, or master catalog. ListViews can be associated with entity lists and entities.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.GetViewEntityClient(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves a view for associated entities. A view provides display context levels (site, tenant, catalog, master catalog) and settings.
            </summary>
            <param name="entityId">Unique identifier for an entity, which defines the schema, rules, and formats for JSON entities within the MZDB (Mozu Mongo DB).</param>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{JObject}
            </returns>
            <example>
            <code>
              var mozuClient=GetViewEntity( entityListFullName,  viewName,  entityId,  responseFields);
              var jsonClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.GetViewEntitiesClient(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a collection of views for associated entities. Each view provides display context levels (site, tenant, catalog, master catalog) and settings.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetViewEntities( entityListFullName,  viewName,  pageSize,  startIndex,  filter,  responseFields);
              var entityCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.GetViewEntityContainerClient(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of container data for creating and displaying a view of entities. 
            </summary>
            <param name="entityId">Unique identifier for an entity, which defines the schema, rules, and formats for JSON entities within the MZDB (Mozu Mongo DB).</param>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityContainer"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetViewEntityContainer( entityListFullName,  viewName,  entityId,  responseFields);
              var entityContainerClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.GetViewEntityContainersClient(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a collection of container data for creating and displaying a view of entities. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityContainerCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetViewEntityContainers( entityListFullName,  viewName,  pageSize,  startIndex,  filter,  responseFields);
              var entityContainerCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.GetEntityListViewClient(System.String,System.String,System.String)">
            <summary>
            Retrieves a specific `EntityListView`. These views provide schema, rules, and formatting for all associated entities. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.ListView"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntityListView( entityListFullName,  viewName,  responseFields);
              var listViewClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.GetEntityListViewsClient(System.String,System.String)">
            <summary>
            Retrieves a collection of `EntityListViews`. These views provide schema, rules, and formatting for all associated entities. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.ListViewCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntityListViews( entityListFullName,  responseFields);
              var listViewCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.CreateEntityListViewClient(Mozu.Api.Contracts.MZDB.ListView,System.String,System.String)">
            <summary>
            Creates an entity list view. Each view provides display context levels (site, tenant, catalog, master catalog) and settings for the list of entities.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="listView">Properties for the list view that specifies what fields and content display per page load. All associated fields in the list view correspond with object data.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.ListView"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateEntityListView( listView,  entityListFullName,  responseFields);
              var listViewClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.UpdateEntityListViewClient(Mozu.Api.Contracts.MZDB.ListView,System.String,System.String,System.String)">
            <summary>
            Updates an existing entity list view. Each view provides display context levels (site, tenant, catalog, master catalog) and settings for the list of entities.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <param name="listView">Properties for the list view that specifies what fields and content display per page load. All associated fields in the list view correspond with object data.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.ListView"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateEntityListView( listView,  entityListFullName,  viewName,  responseFields);
              var listViewClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.DeleteEntityListViewClient(System.String,System.String)">
             <summary>
             Deletes an entity list view. Any associated entities have the association removed.
             </summary>
             <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
             <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteEntityListView( entityListFullName,  viewName);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.ReferenceDataClient">
            <summary>
            The Reference resource retrieves collections of standards the Mozu system currently supports. This includes content locales, top-level domains, units of measure, countries, currencies, time zones, and shipping or billing address schemas.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetAddressSchemaClient(System.String,System.String)">
            <summary>
            Retrieves a specific address schema based on the country code provided. This operation allows the creation of custom shipping and billing address fields.
            </summary>
            <param name="countryCode">The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.AddressSchema"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAddressSchema( countryCode,  responseFields);
              var addressSchemaClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetAddressSchemasClient(System.String)">
            <summary>
            Retrieves the entire list of address schemas that the system supports.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.AddressSchemaCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAddressSchemas( responseFields);
              var addressSchemaCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorClient(System.Int32,System.String)">
            <summary>
            Retrieves the details of a behavior based on the behavior ID specified in the request.
            </summary>
            <param name="behaviorId">Unique identifier of the behavior.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Behavior"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBehavior( behaviorId,  responseFields);
              var behaviorClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorCategoryClient(System.Int32,System.String)">
            <summary>
            Retrieves the details of the behavior category specified in the request.
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.BehaviorCategory"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBehaviorCategory( categoryId,  responseFields);
              var behaviorCategoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorCategoriesClient(System.String)">
            <summary>
            Retrieves the list of behavior categories.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.BehaviorCategoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBehaviorCategories( responseFields);
              var behaviorCategoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorsClient(System.String,System.String)">
            <summary>
            Retrieves a list of application behaviors.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userType">The user type associated with the behaviors to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.BehaviorCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBehaviors( userType,  responseFields);
              var behaviorCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetContentLocalesClient(System.String)">
            <summary>
            Retrieves the list of content locales the system supports. Content locales indicate the language used and the country where the language is used.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.ContentLocaleCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetContentLocales( responseFields);
              var contentLocaleCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetCountriesClient(System.String)">
            <summary>
            Retrieves the entire list of countries that the system supports.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.CountryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCountries( responseFields);
              var countryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetCountriesWithStatesClient(System.String)">
            <summary>
            Retrieves the entire list of countries that the system supports.
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.CountryWithStatesCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCountriesWithStates( responseFields);
              var countryWithStatesCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetCurrenciesClient(System.String)">
            <summary>
            Retrieves the entire list of currencies that the system supports.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.CurrencyCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCurrencies( responseFields);
              var currencyCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetTimeZonesClient(System.String)">
            <summary>
            Retrieves the entire list of time zones that the system supports.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.TimeZoneCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTimeZones( responseFields);
              var timeZoneCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetTopLevelDomainsClient(System.String)">
            <summary>
            Retrieves the entire list of top-level internet domains that the system supports.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.TopLevelDomainCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTopLevelDomains( responseFields);
              var topLevelDomainCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetUnitsOfMeasureClient(System.String,System.String)">
            <summary>
            Retrieves an array list of all units of measure the system supports.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetUnitsOfMeasure( filter,  responseFields);
              var unitOfMeasureCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.SiteDataClient">
            <summary>
            Use the site data resource to store site-level information required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.SiteDataClient.GetDBValueClient(System.String,System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{string}
            </returns>
            <example>
            <code>
              var mozuClient=GetDBValue( dbEntryQuery,  responseFields);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.SiteDataClient.CreateDBValueClient(System.String,System.String)">
             <summary>
             Creates a new record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry string to create.</param>
             <param name="value">The value string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=CreateDBValue( value,  dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.SiteDataClient.UpdateDBValueClient(System.String,System.String)">
             <summary>
             Updates a record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry string to create.</param>
             <param name="value">The value string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateDBValue( value,  dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.SiteDataClient.DeleteDBValueClient(System.String)">
             <summary>
             Removes a previously defined record in the Mozu database.
             </summary>
             <param name="dbEntryQuery">The database entry string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDBValue( dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.TenantClient">
            <summary>
            Use the tenants resource to manage information about a Mozu tenant.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantClient.GetTenantClient(System.Int32,System.String)">
            <summary>
            Retrieve details about a specific tenant by providing the tenant ID.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="tenantId">Unique identifier of the Mozu tenant.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Tenant.Tenant"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTenant( tenantId,  responseFields);
              var tenantClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.TenantDataClient">
            <summary>
            Use the tenant data resource to store tenant-level information required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantDataClient.GetDBValueClient(System.String,System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{string}
            </returns>
            <example>
            <code>
              var mozuClient=GetDBValue( dbEntryQuery,  responseFields);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantDataClient.CreateDBValueClient(System.String,System.String)">
             <summary>
             Creates a new record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry string to create.</param>
             <param name="value">The value string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=CreateDBValue( value,  dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantDataClient.UpdateDBValueClient(System.String,System.String)">
             <summary>
             Updates a record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry string to create.</param>
             <param name="value">The value string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateDBValue( value,  dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantDataClient.DeleteDBValueClient(System.String)">
             <summary>
             Removes a previously defined record in the Mozu database.
             </summary>
             <param name="dbEntryQuery">The database entry string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDBValue( dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.TenantExtensionsClient">
            <summary>
            platform/extensions related resources. DOCUMENT_HERE 
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantExtensionsClient.GetExtensionsClient(System.String)">
            <summary>
            platform-extensions Get GetExtensions description DOCUMENT_HERE 
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.InstalledApplications.TenantExtensions"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtensions( responseFields);
              var tenantExtensionsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantExtensionsClient.UpdateExtensionsClient(Mozu.Api.Contracts.InstalledApplications.TenantExtensions,System.String)">
            <summary>
            platform-extensions Put UpdateExtensions description DOCUMENT_HERE 
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="extensions">Mozu.InstalledApplications.Contracts.TenantExtensions ApiType DOCUMENT_HERE </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.InstalledApplications.TenantExtensions"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateExtensions( extensions,  responseFields);
              var tenantExtensionsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.UserDataClient">
            <summary>
            Use the user data subresource to store user-level data required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.UserDataClient.GetDBValueClient(System.String,System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{string}
            </returns>
            <example>
            <code>
              var mozuClient=GetDBValue( dbEntryQuery,  responseFields);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.UserDataClient.CreateDBValueClient(System.String,System.String)">
             <summary>
             Creates a new record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry string to create.</param>
             <param name="value">The value string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=CreateDBValue( value,  dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.UserDataClient.UpdateDBValueClient(System.String,System.String)">
             <summary>
             Updates a record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry string to create.</param>
             <param name="value">The value string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateDBValue( value,  dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.UserDataClient.DeleteDBValueClient(System.String)">
             <summary>
             Removes a previously defined record in the Mozu database.
             </summary>
             <param name="dbEntryQuery">The database entry string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDBValue( dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Contracts.AdminUser.DeveloperAccount">
            
            	Properties of a developer account used to build a company's applications and themes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAccount.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAccount.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket">
            
            	Properties of the authentication ticket to be used in developer account claims with the Mozu API.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.AccessToken">
            
            Alphanumeric string used to authenticate the user in API request headers. The token stores an encrypted list of the application's configured behaviors and authenticates the application.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.AccessTokenExpiration">
            
            The date and time the user access token expires. If the token will expire, a new token will need to be generated and assigned to the account to continue and restore access to the store, data, and account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.Account">
            
            Properties of the developer account for which the user authentication ticket grants access.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.AvailableAccounts">
            
            Collection of developer accounts for which the user authentication ticket grants access.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.CreatedOn">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.GrantedBehaviors">
            
            Collection of behaviors encrypted in the developer account authentication ticket. Behaviors are granted to users as part of the role assigned for the given developer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.RefreshToken">
            
            Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.RefreshTokenExpiration">
            
            The date and time the developer account or application refresh token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.User">
            
            User information associated with the authentication ticket.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket">
            
            	Properties of the authentication ticket to be used in user claims with the Mozu API.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.AccessToken">
            
            Alphanumeric string used to authenticate the user in API request headers. The token stores an encrypted list of the application's configured behaviors and authenticates the application.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.AccessTokenExpiration">
            
            The date and time the user access token expires. If the token will expire, a new token will need to be generated and assigned to the account to continue and restore access to the store, data, and account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.AvailableTenants">
            
            Collection of tenants for which the user authentication ticket grants access.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.CreatedOn">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.GrantedBehaviors">
            
            Collection of behaviors encrypted in the developer account authentication ticket. Behaviors are granted to users as part of the role assigned for the given developer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.RefreshToken">
            
            Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.RefreshTokenExpiration">
            
            The date and time the developer account or application refresh token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.Tenant">
            
            Tenant information associated with the user authentication ticket or domain lookup service result.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.User">
            
            User information associated with the authentication ticket.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AppDev.AppAuthInfo">
            
            	The information required to authenticate third party applications against the Mozu API.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AppAuthInfo.ApplicationId">
            
            Unique identifier of the application. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AppAuthInfo.SharedSecret">
            
            System-supplied alphanumeric code used to authenticate applications. This string is only available for viewing in Mozu Dev Center.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AppDev.ApplicationVersionsCollection">
            
            	Mozu.AppDev.Contracts.Public.ApplicationVersionsCollection ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.ApplicationVersionsCollection.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.ApplicationVersionsCollection.TotalCount">
            
            Total number of objects in am item collection. Total counts are calculated for numerous objects in Mozu, including location inventory, products, options, product types, product reservations, categories, addresses, carriers, tax rates, time zones, and much more.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AppDev.AuthTicketRequest">
            
            	Properties of the authentication ticket refresh requests, which includes the refresh token string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AuthTicketRequest.RefreshToken">
            
            Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AppDev.FileMetadata">
            
            	Properties of the metadata associated with a file or subfolder in a development or release package associated with an application version.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.FileMetadata.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.FileMetadata.CheckSum">
            
            Checksum function used to validate the local version of the file against the version on the server.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.FileMetadata.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.FileMetadata.Path">
            
            The path and file name that represents the file location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.FileMetadata.SizeInBytes">
            
            The total size of the package file, in bytes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.FileMetadata.Type">
            
            The type of file in the package.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AppDev.FolderMetadata">
            
            	Metadata associated with a folder in a package of files for an application version.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.FolderMetadata.Files">
            
            Array list of files in the folder.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.FolderMetadata.FullPath">
            
            The directory of the file location of the folder in the package.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.FolderMetadata.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.FolderMetadata.SubFolders">
            
            Array list of subfolders stored in this folder.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AppDev.PackageNamesCollection">
            
            	Mozu.AppDev.Contracts.Public.PackageNamesCollection ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.PackageNamesCollection.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.PackageNamesCollection.TotalCount">
            
            Total number of objects in am item collection. Total counts are calculated for numerous objects in Mozu, including location inventory, products, options, product types, product reservations, categories, addresses, carriers, tax rates, time zones, and much more.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AppDev.RenameInfo">
            
            	Information required to update the name of a file in a package, which consists of the original name and the new name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.RenameInfo.NewFullPath">
            
            The destination file location and file name to specify.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.RenameInfo.OldFullPath">
            
            The original file location and file name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart">
            
            	Properties of a shopping cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ChangeMessages">
            
            Collection (list or paged) of change messages logged for each modification made by a shopper to their carts, wishlists, orders, package, payment, pickup, and returns. Change log messages are system-supplied based on shopper actions and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ChannelCode">
            
            Code that identifies the channel associated with the site for the shopper's created shopping cart, order, and return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.CouponCodes">
            
            Array list of coupon codes associated with a shopping cart and the associated order. These codes are entered by a shopper when proceeding to checkout. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.CustomerInteractionType">
            
            The type of customer interaction used to create this shopping cart. Possible values are Website, Call, Store, or Unknown.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.Data">
            
            Custom data for a given vendor set within the commerce process.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.DiscountedSubtotal">
            
            The aggregate total for all items in the cart, including costs associated with shopper-defined options or extras and any applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.DiscountedTotal">
            
            The subtotal of the cart, order, and wishlist items, including any applied discount calculations. Wishlist subtotals may change depending on the length of time, available discounts, and stock amounts of products at the time of review by shoppers.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.DiscountTotal">
            
            Estimated amount of discounts applied to all items in the carts and orders. System-supplied and read-only. This value will be available at the wish list, cart item, order item, and wish list item level at a later time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ExpirationDate">
            
            Date and time in UTC format when a discount, credit, wish list, or cart expires. An expired discount no longer can be redeemed. An expired wish list is no longer available. An expired credit can no longer be redeemed for a purchase. Acart becomes inactive and expired based on a system-calculated interval. For example, if an anonymous shopper has 14 days of inactivity, the cart is considered abandoned after that period of inactivity. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ExtendedProperties">
            
            Extra properties (key-value pairs) that extend the primary object. Think of this as a property bag of string keys and string values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.FeeTotal">
            
            The monetary sum of all fees incurred in the cart, order, line item in a cart, or line item in an order. This value is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.FulfillmentInfo">
            
            Properties of the information required to fulfill the cart, order, or wish list. Shoppers can fulfill ordered items by using in-store pickup or direct shipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.HandlingTaxTotal">
            
            Calculated total tax amount for handling costs if the cart/order is subject to sales tax. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.InvalidCoupons">
            
            The list of invalid coupons the shopper attempted to enter for the cart or order. These coupons may no longer be valid or incorrectly entered.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ItemTaxTotal">
            
            The total amount of calculated tax for items, used by carts, orders, and wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.LastValidationDate">
            
            The date in UTC Date/Time when the items in the cart were last validated against the site's product catalog. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.OrderDiscounts">
            
            List of order-level discounts projected to apply to the cart at checkout or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ShippingSubTotal">
            
            The shipping subtotal amount calculated without any applied discounts for line item and entire amounts of carts and orders. This property is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ShippingTaxTotal">
            
            The total amount of tax incurred on the shipping charges in the cart and order. This property is not calculated at this time for wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ShippingTotal">
            
            The calculated total shipping amount estimated for carts or orders, including tax. This amount is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.SiteId">
            
            Unique identifier of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.Subtotal">
            
            Estimated amount of the cart or order without sales tax, shipping costs, and other fees. This amount is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.TaxTotal">
            
            The total monetary sum of sales tax estimated for a cart or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.Total">
            
            Total is used to indicate the monetary, estimated total amount of the cart or order, including items, sales tax, shipping costs, and other fees. Totals are not estimated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.UserId">
            
            Unique identifier of the customer account (shopper or system user). System-supplied and read-only. If the shopper user is anonymous, the user ID represents a system-generated user ID string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.VisitId">
            
            Unique identifier of the customer visit in which the cart was created or last modified.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.WebSessionId">
            
            Unique identifier of the web session in which the cart, order, return, or wish list was created or last modified.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection">
            
            	Collection of messages logged or created each time the cart was modifed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection.TotalCount">
            
            Total number of objects in am item collection. Total counts are calculated for numerous objects in Mozu, including location inventory, products, options, product types, product reservations, categories, addresses, carriers, tax rates, time zones, and much more.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem">
            
            	Properties of an item added to an active shopping cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Data">
            
            Custom data for a given vendor set within the commerce process.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.DiscountedTotal">
            
            The subtotal of the cart, order, and wishlist items, including any applied discount calculations. Wishlist subtotals may change depending on the length of time, available discounts, and stock amounts of products at the time of review by shoppers.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.DiscountTotal">
            
            Estimated amount of discounts applied to all items in the carts and orders. System-supplied and read-only. This value will be available at the wish list, cart item, order item, and wish list item level at a later time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ExtendedTotal">
            
            Represents the total price of the cart item extended to the shopper. This begins with the Unit Price, then uses any of the following prices if they are defined, in the following order: Override Amount, Sale Amount, List Amount. This value is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.FeeTotal">
            
            The monetary sum of all fees incurred in the cart, order, line item in a cart, or line item in an order. This value is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.FulfillmentLocationCode">
            
            The code that identifies the location used to fulfill the cart/cart item or order/order item. This code can include physical store locations for in-store pickup, warehouse locations providing the products for shipment, or the location for the digital file(s).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.FulfillmentMethod">
            
            The method used to fulfill this cart or order item. The method includes direct ship or in-store pickup. The available methods depend on the supported fulfillment types for the product. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.HandlingAmount">
            
            The combined price for all handling costs calculated together for shipped orders, not for digital or in-store pickup. This includes all handling costs per the product line items and options, excluding taxes and discounts. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.IsRecurring">
            
            Indicates if the product in a cart, order, or wish list is purchased on a recurring schedule. If true, the item can be purchased or fulfilled at regular intervals, such as a monthly billing cycle. For example, digital or physical product subscriptions are recurring cart items. This property is not used at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.IsTaxable">
            
            Indicates if the item is subject to taxation, used by products, options, extras, cart and order items, line items, and wish lists. If true, the entity is subject to tax based on the relevant tax rate and rules.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ItemTaxTotal">
            
            The total amount of calculated tax for items, used by carts, orders, and wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.LineId">
            
            The line id assigned to the order item. Visible only in the Admin, this is set from the Admin or in CommerceRuntime when a cart is converted to an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Product">
            
            The properties of a product, referenced and used by carts, orders, wish lists, and returns.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ProductDiscount">
            
            The applicable product discount for an associated cart, order, or wish list. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ProductDiscounts">
            
            List of product-level discounts projected to apply to a cart, order, or wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ShippingDiscounts">
            
            List of shipping discounts projected to apply to carts, orders, and wish lists and items at checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ShippingTaxTotal">
            
            The total amount of tax incurred on the shipping charges in the cart and order. This property is not calculated at this time for wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ShippingTotal">
            
            The calculated total shipping amount estimated for carts or orders, including tax. This amount is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Subtotal">
            
            Estimated amount of the cart or order without sales tax, shipping costs, and other fees. This amount is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.TaxableTotal">
            
            The monetary amount of an item in the cart that is subject to tax. This amount typically represents the line item subtotal before applied discounts for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Total">
            
            Total is used to indicate the monetary, estimated total amount of the cart or order, including items, sales tax, shipping costs, and other fees. Totals are not estimated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.UnitPrice">
            
            Properties of the price per unit of a product, associated with cart and order items. This price is not used for wish lists at this time.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection">
            
            	Collection of items in a cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary">
            
            	The properties of an active shopping cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary.HasActiveCart">
            
            If true, this shopping cart is active.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary.IsExpired">
            
            If true, the cart's period of inactivity is past its calculated expiration date and the cart is considered abandoned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary.ItemCount">
            
            The total number of line items in the cart. Each line item can have multiple quantities.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary.Total">
            
            Total is used to indicate the monetary, estimated total amount of the cart or order, including items, sales tax, shipping costs, and other fees. Totals are not estimated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary.TotalQuantity">
            
            The combined total quantity across all items in the cart.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel">
            
            	Properties of a channel used to divide a company into logical business divisions, such as "US Retail," "US Online," or "Amazon." All sites and orders are associated with a channel.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel.Code">
            
            User-defined code that uniquely identifies the channel.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel.GroupCode">
            
            User-defined code that identifies the channel group.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel.Region">
            
            The geographical region associated with this channel. This region could represent any geographical entity from a state to a continent.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel.SiteIds">
            
            Array list of site identifiers associated with this channel. Each tenant site must have a channel association.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection">
            
            	Paged list of channels defined for a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup">
            
            	Properties of a group of channels that share common information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup.Code">
            
            User-defined code that identifies the channel group.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection">
            
            	Paged collection of channel groups defined for a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment">
            
            	Properties of an ad-hoc price adjustment for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment.Amount">
            
            The amount of the order-level adjustment, which can be a positive or negative amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment.Description">
            
            The localized description in text for the object, displayed per the locale code. For example, descriptions are used for product descriptions, attributes, and pre-authorization transaction types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment.InternalComment">
            
            Administrator notes associated with the order adjustment. These comments are not shopper facing.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage">
            
            	Properties of a system message displayed when a change, such as a change in product price, occurs for a cart or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Amount">
            
            The order or item amount changed, if applicable.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.AppId">
            
            Unique identifier of an app available in your Mozu tenant or within Mozu Dev Center. This ID is unique across all apps installed, initialized, and enabled in the Mozu Admin and those in development through the Dev Center Console.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.AppKey">
            
            App Key
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.AppName">
            
            App Name
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.CorrelationId">
            
            The unique identifier of the API request associated with the event action, which might contain multiple actions.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.CreateDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Identifier">
            
            Identifier for the object associated with the change message, which can represent a cart, cart item, or an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Message">
            
            The text of the change message, such as "This product is no longer available." System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Metadata">
            
            Metadata content for entities, used by document lists, document type lists, document type, views, entity lists, and list views.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.NewValue">
            
            The new value of the object affected by the change, such as the new price of the product. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.OldValue">
            
            The prior value of the object affected by the change, such as the price of the product when it was added to the cart. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Subject">
            
            The text that appears on the subject line of the message, such as "The product price has changed."
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.SubjectType">
            
            Represents the type of object affected by the change, such as Cart Item or Product. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Success">
            
            If true, the change associated with the message executed successfully.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.UserFirstName">
            
            User First Name
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.UserId">
            
            Unique identifier of the customer account (shopper or system user). System-supplied and read-only. If the shopper user is anonymous, the user ID represents a system-generated user ID string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.UserLastName">
            
            User Last Name
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.UserScopeType">
            
            User Type (e.g. Shopper, Admin, etc.)
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Verb">
            
            The action associated with this message. For example, if the price of a product changes, the verb could be "Increased" or "Decreased". If the product is no longer available, the verb could be "Invalidated". System-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice">
            
            	Pricing details for a product in a cart or an order, including the original price, discount amount, and final price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice.ExtendedAmount">
            
            Represents the total price of the line item extended to the shopper. This begins with the Unit Price, then uses any of the following prices if they are defined, in the following order: Override Amount, Sale Amount, List Amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice.ListAmount">
            
            The price the item is listed for in the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice.OverrideAmount">
            
            The override price of the item set by the merchant for a given order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice.SaleAmount">
            
            The sale price set for the item.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty">
            
            	Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty.Key">
            
            Key used for metadata defined for objects, including extensible attributes, custom attributes associated with a shipping provider, and search synonyms definitions. This content may be user-defined depending on the object and usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.PackageMeasurements">
            
            	Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.PackageMeasurements.Height">
            
            Height of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.PackageMeasurements.Length">
            
            Length of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.PackageMeasurements.Weight">
            
            Weight of the package in imperial units of pounds and ounces.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.PackageMeasurements.Width">
            
            Width of the package in imperial units of feet and inches.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount">
            
            	The discount currently applied to the cart or order, represented as a negative currency amount to be subtracted from the final price. If multiple discounts are applied to the same order, the Applied Discount displays the most valuable discount for the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount.CouponCode">
            
            Alphanumeric code associated with the coupon or promotion that results in a discounted price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount.Discount">
            
            Name of the discount added and applied to a shopping cart and order for a shopper's purchase. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount.Excluded">
            
            Indicates if a discount is not used for the product or product line item in an order. If true, the system ignores this discount when pricing the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount.Impact">
            
            The value of the discount applied to the cart or order, represented as a negative currency amount to apply to the original price.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedLineItemProductDiscount">
            
            	Discount applied to the order, which is a negative number, which is to be subtracted from the original price to get the final price for a particular line item. If multiple discounts for the order exist, this is the value most advantageous to the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedLineItemProductDiscount.AppliesToSalePrice">
            
            Determines if the discount applies to the sale price of the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedLineItemProductDiscount.CouponCode">
            
            Alphanumeric code associated with the coupon or promotion that results in a discounted price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedLineItemProductDiscount.Discount">
            
            Name of the discount added and applied to a shopping cart and order for a shopper's purchase. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedLineItemProductDiscount.DiscountQuantity">
            
            The number of the line items that are used for this particular discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedLineItemProductDiscount.Excluded">
            
            Indicates if a discount is not used for the product or product line item in an order. If true, the system ignores this discount when pricing the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedLineItemProductDiscount.Impact">
            
            The value of the discount applied to the cart or order, represented as a negative currency amount to apply to the original price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedLineItemProductDiscount.ImpactPerUnit">
            
            The impact of a discount for each discount quantity. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedLineItemProductDiscount.ProductQuantity">
            
            Quantity of products priced. This is always one unless calculating pricing on the order or cart.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedLineItemShippingDiscount">
            
            	The value of the shipping discount for each line item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedLineItemShippingDiscount.Discount">
            
            Name of the discount added and applied to a shopping cart and order for a shopper's purchase. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedLineItemShippingDiscount.DiscountQuantity">
            
            The number of the line items that are used for this particular discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedLineItemShippingDiscount.ImpactPerUnit">
            
            The impact of a discount for each discount quantity. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedLineItemShippingDiscount.MethodCode">
            
            Carrier-supplied, unique code that represents the shipping method service type associated with the shipping discount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Discounts.Discount">
            
            	Properties of a discount defined for a product, order, or shipping on a web storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.Discount.ExpirationDate">
            
            Date and time in UTC format when a discount, credit, wish list, or cart expires. An expired discount no longer can be redeemed. An expired wish list is no longer available. An expired credit can no longer be redeemed for a purchase. Acart becomes inactive and expired based on a system-calculated interval. For example, if an anonymous shopper has 14 days of inactivity, the cart is considered abandoned after that period of inactivity. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.Discount.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.Discount.ItemIds">
            
            List of cart or order items to which the discount applies, if applicable.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.Discount.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Discounts.InvalidCoupon">
            
            	Properties of an invalid coupon code a shopper attempts to enter for a cart or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.InvalidCoupon.CreateDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.InvalidCoupon.DiscountId">
            
            Unique identifier for the discount in the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.InvalidCoupon.Reason">
            
            The reason description for an action, including item return, coupon not valid, and item is taxed. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.InvalidCoupon.ReasonCode">
            
            A code indicating the reason why a facet is invalid.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Discounts.ShippingDiscount">
            
            	Properties of a discount that can apply to shipping an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.ShippingDiscount.Discount">
            
            Name of the discount added and applied to a shopping cart and order for a shopper's purchase. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.ShippingDiscount.MethodCode">
            
            Carrier-supplied, unique code that represents the shipping method service type associated with the shipping discount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage">
            
            	Lets you manage an order's digital packages, by applying a digital package to the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage.AuditInfo">
            
            Basic audit info about the object, including date, time, and user account. Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage.AvailableActions">
            
            Available actions you can complete for an order. These actions may differ depending on the status of the order, such as actions required to enter a payment, return of a package, and fulfillment of a shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage.ChangeMessages">
            
            Collection (list or paged) of change messages logged for each modification made by a shopper to their carts, wishlists, orders, package, payment, pickup, and returns. Change log messages are system-supplied based on shopper actions and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage.Code">
            
            The digital package code is a human-readable identifier for this digital fulfillment unit. If not set on create, it is autogenerated as a string in the form {fulfillmentUnitType} #{next available int}.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage.FulfillmentDate">
            
            Date and time when a shipment completes fulfillment by delivery to a customer's physical address, picked up by a customer at a store, or delivered digitally for downloadable products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage.FulfillmentLocationCode">
            
            The code that identifies the location used to fulfill the cart/cart item or order/order item. This code can include physical store locations for in-store pickup, warehouse locations providing the products for shipment, or the location for the digital file(s).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage.Status">
            
            The current status of an object. This status is specific to the object including payment (New, Authorized, Captured, Declined, Failed, Voided, Credited, CheckRequested, or RolledBack), discount (Active, Scheduled, or Expired), returns (ReturnAuthorized), tenant, package (Fulfilled or NotFulfilled), application, master and product catalogs, orders (Pending, Submitted, Processing, Pending Review, Closed, or Canceled), and order validation results (Pass, Fail, Error, or Review).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackageItem.FulfillmentItemType">
            
            This specifies the fulfillment type of digital package item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackageItem.GiftCardCode">
            
            Specifies the gift card code for the digital package item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackageItem.LineId">
            
            The line id associated with the fulfillment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackageItem.ProductCode">
            
            The unique, user-defined  product code of a product, used throughout Mozu to reference and associate to a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackageItem.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction">
            
            	Properties of an action to perform when fulfilling an item in an order, whether through in-store pickup or direct shipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction.ActionName">
            
            The name of the fulfillment action to perform for the purchased product. Options include "Ship" or "PickUp" (in-store pick-up).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction.DigitalPackageIds">
            
            The digital package ID identifies the package to update on the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction.PackageIds">
            
            Array list of unique IDs of packages in a shipment planned for or finished a shipping fulfillment action. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction.PickupIds">
            
            Array list of in-store pickups for which to perform the fulfillment action.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo">
            
            	Properties of the information needed to fulfill an order, whether via in-store pickup or direct shipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo.Data">
            
            Custom data originated by the shipping service.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo.FulfillmentContact">
            
            The contact information of the person receiving the shipment or performing the pickup.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo.IsDestinationCommercial">
            
            If true, the shipping destination for a shipment is a commercial address.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo.ShippingMethodCode">
            
            The code associated with a carrier's shipping method service type, used during fulfillment of packages and shipments. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD and UPS_GROUND.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo.ShippingMethodName">
            
            The carrier-supplied name for the shipping service type, such as "UPS Ground" or "2nd Day Air".
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package">
            
            	Properties of a physical package shipped for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.AvailableActions">
            
            Available actions you can complete for an order. These actions may differ depending on the status of the order, such as actions required to enter a payment, return of a package, and fulfillment of a shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.ChangeMessages">
            
            Collection (list or paged) of change messages logged for each modification made by a shopper to their carts, wishlists, orders, package, payment, pickup, and returns. Change log messages are system-supplied based on shopper actions and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.Code">
            
            The code of the product to be fulfilled.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.FulfillmentDate">
            
            Date and time when a shipment completes fulfillment by delivery to a customer's physical address, picked up by a customer at a store, or delivered digitally for downloadable products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.FulfillmentLocationCode">
            
            The code that identifies the location used to fulfill the cart/cart item or order/order item. This code can include physical store locations for in-store pickup, warehouse locations providing the products for shipment, or the location for the digital file(s).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.HasLabel">
            
            If there is a shipping label present for this Package, this will be set to true
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.Measurements">
            
            Dimensional properties (height, length, and width) of packages, products and bundles.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.PackagingType">
            
            The package type associated with this physical package. Possible values include Tube, Letter, Pak, Small Box (carrier_box_small), Medium Box (carrier_box_medium), Large Box (carrier_box_large), or Custom.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.ShipmentId">
            
            Unique identifier of the shipment associated with this package.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.ShippingMethodCode">
            
            The code associated with a carrier's shipping method service type, used during fulfillment of packages and shipments. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD and UPS_GROUND.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.ShippingMethodName">
            
            The carrier-supplied name for the shipping service type, such as "UPS Ground" or "2nd Day Air".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.Status">
            
            The current status of an object. This status is specific to the object including payment (New, Authorized, Captured, Declined, Failed, Voided, Credited, CheckRequested, or RolledBack), discount (Active, Scheduled, or Expired), returns (ReturnAuthorized), tenant, package (Fulfilled or NotFulfilled), application, master and product catalogs, orders (Pending, Submitted, Processing, Pending Review, Closed, or Canceled), and order validation results (Pass, Fail, Error, or Review).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.TrackingNumber">
            
            Tracking number for the package or shipment, supplied by the shipping carrier to track the shipment until fulfillment completes. The tracking number format may differ between carriers.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PackageItem">
            
            	Properties of an item shipped in a physical package.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PackageItem.FulfillmentItemType">
            
            This specifies the fulfillment type of digital package item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PackageItem.LineId">
            
            The line id associated with the fulfillment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PackageItem.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PackageItem.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup">
            
            	Properties of an in-store pickup defined to fulfill items in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.AvailableActions">
            
            Available actions you can complete for an order. These actions may differ depending on the status of the order, such as actions required to enter a payment, return of a package, and fulfillment of a shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.ChangeMessages">
            
            Collection (list or paged) of change messages logged for each modification made by a shopper to their carts, wishlists, orders, package, payment, pickup, and returns. Change log messages are system-supplied based on shopper actions and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.Code">
            
            The specific code that represents pickup.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.FulfillmentDate">
            
            Date and time when a shipment completes fulfillment by delivery to a customer's physical address, picked up by a customer at a store, or delivered digitally for downloadable products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.FulfillmentLocationCode">
            
            The code that identifies the location used to fulfill the cart/cart item or order/order item. This code can include physical store locations for in-store pickup, warehouse locations providing the products for shipment, or the location for the digital file(s).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.Status">
            
            The current status of an object. This status is specific to the object including payment (New, Authorized, Captured, Declined, Failed, Voided, Credited, CheckRequested, or RolledBack), discount (Active, Scheduled, or Expired), returns (ReturnAuthorized), tenant, package (Fulfilled or NotFulfilled), application, master and product catalogs, orders (Pending, Submitted, Processing, Pending Review, Closed, or Canceled), and order validation results (Pass, Fail, Error, or Review).
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PickupItem">
            
            	Properties of an item in an in-store pickup.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PickupItem.FulfillmentItemType">
            
            This specifies the fulfillment type of digital package item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PickupItem.LineId">
            
            The line id associated with the fulfillment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PickupItem.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PickupItem.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment">
            
            	Properties of a shipment used to ship order items to a shopper. A shipment can include any number of packages.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.Cost">
            
            Total cost of shipping the shipment to the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.DestinationAddress">
            
            The physical address orders are sent to as a shipping destination. This address may contain multiple lines, city, state/province, country, and zip/postal code. The destination is used to calculate shipping costs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.OriginAddress">
            
            The physical address from which the order or shipment will ship.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.PackageIds">
            
            Array list of unique IDs of packages in a shipment planned for or finished a shipping fulfillment action. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.ShippingMethodCode">
            
            The code associated with a carrier's shipping method service type, used during fulfillment of packages and shipments. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD and UPS_GROUND.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.SignatureRequired">
            
            If true, a shopper signature is required to deliver this shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.TrackingNumber">
            
            Tracking number for the package or shipment, supplied by the shipping carrier to track the shipment until fulfillment completes. The tracking number format may differ between carriers.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate">
            
            	Properties of an estimated shipping rate for a shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate.Data">
            
            Custom data returned by the shipping service.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate.IsValid">
            
            Indicates if the facet is currently valid.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate.Messages">
            
            Array list of validation and status messages associated with shipping rates, orders, and product purchasable state.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate.Price">
            
            The amount the company and the shopper pay for shipping based on the current rate. Depending on any company discounts or fees, the price the company pays for shipping may differ from what the shopper pays.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate.ShippingMethodCode">
            
            The code associated with a carrier's shipping method service type, used during fulfillment of packages and shipments. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD and UPS_GROUND.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate.ShippingMethodName">
            
            The carrier-supplied name for the shipping service type, such as "UPS Ground" or "2nd Day Air".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate.ShippingZoneCode">
            
            The shipping zone to which this rate applies.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order">
            
            	Properties of an order, including its components.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.AcceptedDate">
            
            The date and time the order was accepted by the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.AcceptsMarketing">
            
            Indicates if the customer account is opted to receive marketing materials. If true, the customer account is opted in for receiving the content. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Adjustment">
            
            Properties of an ad-hoc price adjustment for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.AmountAvailableForRefund">
            
            The amount of the order the shopper can receive in the event of a return. This amount represents the amount captured at the time the order was submitted, not when the order was returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.AmountRefunded">
            
            A counter for how much money has been issued in refunds. This calculated field does NOT include refunds issued in returns.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.AmountRemainingForPayment">
            
            The total amount of the order not currently associated with a payment. The shopper must create one or more payments to satisfy this amount before the order can be fully paid.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Attributes">
            
            Collection of attributes that may be paged list or a list, depending on the usage per object and API type. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.AvailableActions">
            
            Available actions you can complete for an order. These actions may differ depending on the status of the order, such as actions required to enter a payment, return of a package, and fulfillment of a shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.BillingInfo">
            
            Properties for the customer's billing information associated with an order or specific payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.CancelledDate">
            
            Date when the order was cancelled. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ChangeMessages">
            
            Collection (list or paged) of change messages logged for each modification made by a shopper to their carts, wishlists, orders, package, payment, pickup, and returns. Change log messages are system-supplied based on shopper actions and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ChannelCode">
            
            Code that identifies the channel associated with the site for the shopper's created shopping cart, order, and return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ClosedDate">
            
            Date when the order was closed. Closed order is an order that has been processed and the items shipped. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.CouponCodes">
            
            Array list of coupon codes associated with a shopping cart and the associated order. These codes are entered by a shopper when proceeding to checkout. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.CustomerAccountId">
            
            Unique identifer of the customer account. This ID is used to associate numerous types of data and object with the customer account, including orders, returns, wish lists, and in-store credit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.CustomerInteractionType">
            
            The type of customer interaction used to create this shopping cart. Possible values are Website, Call, Store, or Unknown.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.CustomerTaxId">
            
            The tax identification number (TIN) of the customer who submitted the order. If the customer who submitted the order has a customer account defined for the tenant, the system sets this value when the order is submitted.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Data">
            
            Custom data for a given vendor set within the commerce process.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.DigitalPackages">
            
            Specifies the fulfillment of digital packages associated with this order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.DiscountedSubtotal">
            
            The aggregate total for all items in the cart, including costs associated with shopper-defined options or extras and any applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.DiscountedTotal">
            
            The subtotal of the cart, order, and wishlist items, including any applied discount calculations. Wishlist subtotals may change depending on the length of time, available discounts, and stock amounts of products at the time of review by shoppers.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.DiscountTotal">
            
            Estimated amount of discounts applied to all items in the carts and orders. System-supplied and read-only. This value will be available at the wish list, cart item, order item, and wish list item level at a later time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.DutyAmount">
            
            Order level duty or tariff amount. Does not take into account duties or tariffs specifically on items on the order
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.DutyTotal">
            
            Duties or tariffs for the Order as well as OrderItems (e.g. if the Order has a $5 duty or tariff for any reason and an OrderItem has a $2 duty or tariff then the value in this property would be $7)
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Email">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ExpirationDate">
            
            Date and time in UTC format when a discount, credit, wish list, or cart expires. An expired discount no longer can be redeemed. An expired wish list is no longer available. An expired credit can no longer be redeemed for a purchase. Acart becomes inactive and expired based on a system-calculated interval. For example, if an anonymous shopper has 14 days of inactivity, the cart is considered abandoned after that period of inactivity. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ExtendedProperties">
            
            Extra properties (key-value pairs) that extend the primary object. Think of this as a property bag of string keys and string values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ExternalId">
            
            Unique identifier used by an external program to identify a Mozu order, customer account, or wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.FeeTotal">
            
            The monetary sum of all fees incurred in the cart, order, line item in a cart, or line item in an order. This value is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.FulfillmentInfo">
            
            Properties of the information required to fulfill the cart, order, or wish list. Shoppers can fulfill ordered items by using in-store pickup or direct shipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.FulfillmentStatus">
            
            The current fulfillment status of the order, which is "Fulfilled," "NotFulfilled," or "PartiallyFulfilled." The order is considered fulfilled when all packages are shipped or all pickups are picked up.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.HandlingAmount">
            
            The combined price for all handling costs calculated together for shipped orders, not for digital or in-store pickup. This includes all handling costs per the product line items and options, excluding taxes and discounts. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.HandlingDiscounts">
            
            The list of historically-applied handling discounts.  The active one will have IsExcluded == false
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.HandlingSubTotal">
            
            Handling fees for the Order as well as OrderItems (e.g. if the Order has a $5 handling fee and an OrderItem has a $2 handling fee per item quantity then the value in this property would be $9)
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.HandlingTaxTotal">
            
            Calculated total tax amount for handling costs if the cart/order is subject to sales tax. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.HandlingTotal">
            
            This total represents the handling amount value with any applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.HasDraft">
            
            If true, the order has a draft that may include one or more uncommitted changes to the order or its components.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ImportDate">
            
            The date and time an order or wish list is imported into Mozu. This is not the date and time it was created in the external application. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.InvalidCoupons">
            
            The list of invalid coupons the shopper attempted to enter for the cart or order. These coupons may no longer be valid or incorrectly entered.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.IpAddress">
            
            A captured and stored IP address. IP addresses are stored for the origin location of submitted orders and the tenant domain.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.IsDraft">
            
            If true, this version of the order is a draft that might contain uncommitted changes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.IsEligibleForReturns">
            
            If true, the shopper can return any of the items in this order to the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.IsImport">
            
            Indicates if this object/data was imported from an outside source such as a data import or synchronization via an app or service. If true, this data was originally imported into Mozu and accessible through your store database. Examples of imported objects/data include orders and customer accounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.IsTaxExempt">
            
            If true, the order is exempt from applied sales tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ItemTaxTotal">
            
            The total amount of calculated tax for items, used by carts, orders, and wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.LastValidationDate">
            
            The date in UTC Date/Time when the items in the cart were last validated against the site's product catalog. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.LocationCode">
            
            The unique, user-defined code that identifies a location. This location can be the location where the order was entered, location for newly in-stock products, and where products are returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Notes">
            
            Paged list collection of note content for objects including customers, orders, and returns. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.OrderDiscounts">
            
            List of order-level discounts projected to apply to the cart at checkout or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.OrderNumber">
            
            The order number that displays on the storefront which differs from the order ID.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.OriginalCartId">
            
            Identifier of the cart prior to the customer proceeding to checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Packages">
            
            Array list of physical packages shipped for a specified order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ParentOrderId">
            
            If this Order has a parent Order, the parent Order ID is recorded here.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ParentReturnId">
            
            If this order was created to fulfill an item replacement as part of a return merchandise authorization (RMA), the unique identifier of the return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Payments">
            
            Wrapper for a collection of payments associated with an order or return. An order can include a number of payments until the full total is covered. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.PaymentStatus">
            
            Status of the payment for the specified order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Pickups">
            
            Array list of the in-store pickups defined for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Refunds">
            
            Refunds associated with this order. A refund is a single exchange of money from merchant to customer that either encapsulates a refund to a credit card or an issuance of a store credit. Refunds does not reduce the 'amount collected' on an order and it is possible for refunds to exceed the total order amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ReturnStatus">
            
            Status of any returns associated with this order after it was completed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Shipments">
            
            Array list of the shipments defined to fulfill items in this order using the direct ship fulfillment method.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShippingAdjustment">
            
            Properties of an ad-hoc price adjustment made for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShippingDiscounts">
            
            List of shipping discounts projected to apply to carts, orders, and wish lists and items at checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShippingSubTotal">
            
            The shipping subtotal amount calculated without any applied discounts for line item and entire amounts of carts and orders. This property is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShippingTaxTotal">
            
            The total amount of tax incurred on the shipping charges in the cart and order. This property is not calculated at this time for wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShippingTotal">
            
            The calculated total shipping amount estimated for carts or orders, including tax. This amount is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShopperNotes">
            
            A paged list collection of shopper notes for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.SiteId">
            
            Unique identifier of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.SourceDevice">
            
            The device from which the order originated in the case of offline orders.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Status">
            
            The current status of an object. This status is specific to the object including payment (New, Authorized, Captured, Declined, Failed, Voided, Credited, CheckRequested, or RolledBack), discount (Active, Scheduled, or Expired), returns (ReturnAuthorized), tenant, package (Fulfilled or NotFulfilled), application, master and product catalogs, orders (Pending, Submitted, Processing, Pending Review, Closed, or Canceled), and order validation results (Pass, Fail, Error, or Review).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.SubmittedDate">
            
            The date and time the order was submitted. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Subtotal">
            
            Estimated amount of the cart or order without sales tax, shipping costs, and other fees. This amount is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.TaxTotal">
            
            The total monetary sum of sales tax estimated for a cart or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Total">
            
            Total is used to indicate the monetary, estimated total amount of the cart or order, including items, sales tax, shipping costs, and other fees. Totals are not estimated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.TotalCollected">
            
            The total amount collected to date for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Type">
            
            This specifies the order type. This means, was this order placed online or offline? Online means shopper created the order at checkout, offline means the order was a phone order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ValidationResults">
            
            Response returned by an order validation capability application.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Version">
            
            The current version number of the order, wish list, document list, or document type list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.VisitId">
            
            Unique identifier of the customer visit in which the cart was created or last modified.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.WebSessionId">
            
            Unique identifier of the web session in which the cart, order, return, or wish list was created or last modified.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction">
            
            	The action to perform for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction.ActionName">
            
            The name of the fulfillment action to perform for the purchased product. Options include "Ship" or "PickUp" (in-store pick-up).
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute">
            
            	Properties of an attribute applied to an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.AttributeDefinitionId">
            
            Unique identifier of the attribute definition.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.FullyQualifiedName">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.Values">
            
            List of value data for objects.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection">
            
            	Paged collection of orders sorted and filtered by any query parameters specified in the request.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem">
            
            	The details associated with a specific item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Data">
            
            Custom data for a given vendor set within the commerce process.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.DiscountedTotal">
            
            The subtotal of the cart, order, and wishlist items, including any applied discount calculations. Wishlist subtotals may change depending on the length of time, available discounts, and stock amounts of products at the time of review by shoppers.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.DiscountTotal">
            
            Estimated amount of discounts applied to all items in the carts and orders. System-supplied and read-only. This value will be available at the wish list, cart item, order item, and wish list item level at a later time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.DutyAmount">
            
            Duty or Tariff for this item
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ExtendedTotal">
            
            Represents the total price of the cart item extended to the shopper. This begins with the Unit Price, then uses any of the following prices if they are defined, in the following order: Override Amount, Sale Amount, List Amount. This value is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.FeeTotal">
            
            The monetary sum of all fees incurred in the cart, order, line item in a cart, or line item in an order. This value is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.FulfillmentLocationCode">
            
            The code that identifies the location used to fulfill the cart/cart item or order/order item. This code can include physical store locations for in-store pickup, warehouse locations providing the products for shipment, or the location for the digital file(s).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.FulfillmentMethod">
            
            The method used to fulfill this cart or order item. The method includes direct ship or in-store pickup. The available methods depend on the supported fulfillment types for the product. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.HandlingAmount">
            
            The combined price for all handling costs calculated together for shipped orders, not for digital or in-store pickup. This includes all handling costs per the product line items and options, excluding taxes and discounts. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.IsRecurring">
            
            Indicates if the product in a cart, order, or wish list is purchased on a recurring schedule. If true, the item can be purchased or fulfilled at regular intervals, such as a monthly billing cycle. For example, digital or physical product subscriptions are recurring cart items. This property is not used at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.IsTaxable">
            
            Indicates if the item is subject to taxation, used by products, options, extras, cart and order items, line items, and wish lists. If true, the entity is subject to tax based on the relevant tax rate and rules.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ItemTaxTotal">
            
            The total amount of calculated tax for items, used by carts, orders, and wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.LineId">
            
            The line id assigned to the order item. Visible only in the Admin, this is set from the Admin or in CommerceRuntime when a cart is converted to an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.OriginalCartItemId">
            
            The unique identifier of the item when it was applied to a cart, prior to checkout, when the cart became an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Product">
            
            The properties of a product, referenced and used by carts, orders, wish lists, and returns.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ProductDiscount">
            
            The applicable product discount for an associated cart, order, or wish list. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ProductDiscounts">
            
            List of product-level discounts projected to apply to a cart, order, or wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ShippingDiscounts">
            
            List of shipping discounts projected to apply to carts, orders, and wish lists and items at checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ShippingTaxTotal">
            
            The total amount of tax incurred on the shipping charges in the cart and order. This property is not calculated at this time for wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ShippingTotal">
            
            The calculated total shipping amount estimated for carts or orders, including tax. This amount is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Subtotal">
            
            Estimated amount of the cart or order without sales tax, shipping costs, and other fees. This amount is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.TaxableTotal">
            
            The monetary amount of an item in the cart that is subject to tax. This amount typically represents the line item subtotal before applied discounts for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Total">
            
            Total is used to indicate the monetary, estimated total amount of the cart or order, including items, sales tax, shipping costs, and other fees. Totals are not estimated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.UnitPrice">
            
            Properties of the price per unit of a product, associated with cart and order items. This price is not used for wish lists at this time.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection">
            
            	Collection of all order items that appear on the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote">
            
            	Properties of an order note for a merchant, which is internal only for administrative purposes and not available to the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote.Text">
            
            The text content of the order note.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationMessage">
            
            	Properties of a message returned by an order validation capability for the order specified in the request.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationMessage.Message">
            
            The text of the change message, such as "This product is no longer available." System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationMessage.MessageType">
            
            The type of message returned by the order validation capability, such as "Fraud Score."
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationMessage.OrderItemId">
            
            Unique identifier of the order item associated with a validation message, order, or return.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult">
            
            	Properties of the resulting order validation performed by an order validation capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult.CreatedDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult.Messages">
            
            Array list of validation and status messages associated with shipping rates, orders, and product purchasable state.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult.Status">
            
            The current status of an object. This status is specific to the object including payment (New, Authorized, Captured, Declined, Failed, Voided, Credited, CheckRequested, or RolledBack), discount (Active, Scheduled, or Expired), returns (ReturnAuthorized), tenant, package (Fulfilled or NotFulfilled), application, master and product catalogs, orders (Pending, Submitted, Processing, Pending Review, Closed, or Canceled), and order validation results (Pass, Fail, Error, or Review).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult.ValidationId">
            
            Read-only identifier defined by the order validation capability that uniquely identifies this validation operation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult.ValidatorName">
            
            Read-only name of this order validator supplied by the capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult.ValidatorType">
            
            The type of order validator supplied by the capability. At this time, the only supported validator type is Fraud.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.ShopperNotes">
            
            	Comments and/or gift message provided by the shopper which are associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.ShopperNotes.Comments">
            
            Notes entered and saved with an order. These notes may be entered by a shopper on a wishlist or for an order. Comments may also be entered by Mozu Admins on an order that may be visible only to authorized shoppers and users.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.ShopperNotes.GiftMessage">
            
            Shopper-entered gift message for the associated order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo">
            
            	Properties of the billing information entered for an order during checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.BillingContact">
            
            The cardholder's billing contact information, including addresses.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.Card">
            
            If the customer is paying by card, the credit card information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.IsSameBillingShippingAddress">
            
            If true, the system overrides the customer's billing address information with the supplied fulfillment information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.PaymentType">
            
            The type of payment, such as credit card, check, or PayPal Express. Additional payment types will be supported in future releases.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.StoreCreditCode">
            
            The code that identifies the store credit to apply to the order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment">
            
            	Properties of a payment transaction submitted for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.AmountCollected">
            
            The total monetary amount collected in this payment transaction for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.AmountCredited">
            
            If the payment transaction is a shopper store credit, the total monetary amount credited in this payment transaction for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.AmountRequested">
            
            The total amount originally requested for this payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.AvailableActions">
            
            Available actions you can complete for an order. These actions may differ depending on the status of the order, such as actions required to enter a payment, return of a package, and fulfillment of a shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.BillingInfo">
            
            Properties for the customer's billing information associated with an order or specific payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.ChangeMessages">
            
            Collection (list or paged) of change messages logged for each modification made by a shopper to their carts, wishlists, orders, package, payment, pickup, and returns. Change log messages are system-supplied based on shopper actions and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.Interactions">
            
            Container for the interactions associated with the payment, which includes details for each action performed for the payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.IsRecurring">
            
            Indicates if the product in a cart, order, or wish list is purchased on a recurring schedule. If true, the item can be purchased or fulfilled at regular intervals, such as a monthly billing cycle. For example, digital or physical product subscriptions are recurring cart items. This property is not used at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.OrderId">
            
            Unique identifier of the order associated with the payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.PaymentServiceTransactionId">
            
            The transaction ID supplied by the payment service to associate with this order payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.PaymentType">
            
            The type of payment, such as credit card, check, or PayPal Express. Additional payment types will be supported in future releases.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.Status">
            
            The current status of an object. This status is specific to the object including payment (New, Authorized, Captured, Declined, Failed, Voided, Credited, CheckRequested, or RolledBack), discount (Active, Scheduled, or Expired), returns (ReturnAuthorized), tenant, package (Fulfilled or NotFulfilled), application, master and product catalogs, orders (Pending, Submitted, Processing, Pending Review, Closed, or Canceled), and order validation results (Pass, Fail, Error, or Review).
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction">
            
            	Properties of the payment action performed for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.ActionName">
            
            The name of the fulfillment action to perform for the purchased product. Options include "Ship" or "PickUp" (in-store pick-up).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.Amount">
            
            The total monetary amount of the payment transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.CancelUrl">
            
            The URL provided to cancel payments submitted using PayPal Express or another non-gateway payment provider.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.CheckNumber">
            
            If applicable, the check number associated with the payment action or interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.InteractionDate">
            
            Date and time of a payment interaction, including handling and processing a payment and validating and completing a payment with a payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.ManualGatewayInteraction">
            
            Properties of a manually performed interaction with the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.NewBillingInfo">
            
            The billing information associated with this payment action.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.ReferenceSourcePaymentId">
            
            Unique ID that references an original transaction in the event of a credit back.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.ReturnUrl">
            
            The URL provided to redirect users who submit payments using PayPal Express or another non-gateway payment provider.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard">
            
            	Properties of a credit card used to submit payment for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.CardNumberPartOrMask">
            
            The masked credit card number part returned from the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.ExpireMonth">
            
            The two-digit month a credit card expires for a payment method.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.ExpireYear">
            
            The four-digit year the credit card expires for a payment method.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.IsCardInfoSaved">
            
            If true, the credit card information is saved to the customer account for future use.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.IsUsedRecurring">
            
            If true, the credit card is used for a recurring order payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.NameOnCard">
            
            The full name printed on a credit card. The name should match what is printed on the card exactly, used in validation during a payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.PaymentOrCardType">
            
            The type of credit card, such as Visa or Amex.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.PaymentServiceCardId">
            
            Unique identifier of the credit card from the payment service.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection">
            
            	Collection of payment transactions associated with an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction">
            
            	Properties of an interaction with the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayAuthCode">
            
            If required by the payment gateway, the authorization code of the transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayAVSCodes">
            
            AVS (Address Verification Service) codes supplied by the payment gateway. The codes indicate partial to complete or failed matches against the billing address for the shopper against the financial institute data through the gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayCVV2Codes">
            
            CVV2 (Card Verification Value) codes supplied by the payment gateway. The codes indicate a verified or failed match of the encrypted code entered against the financial institution data through the gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayInteractionId">
            
            Unique identifier of the payment interaction from the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayResponseCode">
            
            Response code from the gateway associated with the payment interaction. For example, if the gateway returns "Not Authorized," an interaction for voiding the payment transaction would result.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayResponseText">
            
            Textual message returned by the payment gateway for the associated success or failure code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayTransactionId">
            
            Unique identifier of the gateway transaction associated with the payment interaction.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction">
            
            	Properties of a resulting payment interaction that occurs when a payment action is performed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.Amount">
            
            If applicable, the total monetary amount associated with this payment interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.CheckNumber">
            
            If applicable, the check number associated with the payment action or interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayAuthCode">
            
            If required by the payment gateway, the authorization code of the transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayAVSCodes">
            
            AVS (Address Verification Service) codes supplied by the payment gateway. The codes indicate partial to complete or failed matches against the billing address for the shopper against the financial institute data through the gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayCVV2Codes">
            
            CVV2 (Card Verification Value) codes supplied by the payment gateway. The codes indicate a verified or failed match of the encrypted code entered against the financial institution data through the gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayInteractionId">
            
            Unique identifier of the payment interaction from the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayResponseCode">
            
            Response code from the gateway associated with the payment interaction. For example, if the gateway returns "Not Authorized," an interaction for voiding the payment transaction would result.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayResponseText">
            
            Textual message returned by the payment gateway for the associated success or failure code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayTransactionId">
            
            Unique identifier of the gateway transaction associated with the payment interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.InteractionDate">
            
            Date and time of a payment interaction, including handling and processing a payment and validating and completing a payment with a payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.InteractionType">
            
            The type of payment interaction. The payment can be Capture or CheckReceived. The value also includes customer payment interactions such as Website, Call, Store, or Unknown.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.IsManual">
            
            If true, the payment interaction was manually defined s part of offline order processing.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.IsRecurring">
            
            Indicates if the product in a cart, order, or wish list is purchased on a recurring schedule. If true, the item can be purchased or fulfilled at regular intervals, such as a monthly billing cycle. For example, digital or physical product subscriptions are recurring cart items. This property is not used at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.Note">
            
            User-entered notation content for an object, used to save information such as payment, return, account, and order notes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.OrderId">
            
            Unique identifier of the order associated with the payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.PaymentEntryStatus">
            
            The status of the payment prior to the interaction being performed, which enables manual rollback of previous transactions.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.PaymentId">
            
            Unique identifier of the payment associated with this transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.PaymentTransactionInteractionIdReference">
            
            Unique identifier of previous interaction that this payment interaction is modifying. For example, when refunding a payment, the crediting interaction would reference the capture interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.Status">
            
            The current status of an object. This status is specific to the object including payment (New, Authorized, Captured, Declined, Failed, Voided, Credited, CheckRequested, or RolledBack), discount (Active, Scheduled, or Expired), returns (ReturnAuthorized), tenant, package (Fulfilled or NotFulfilled), application, master and product catalogs, orders (Pending, Submitted, Processing, Pending Review, Closed, or Canceled), and order validation results (Pass, Fail, Error, or Review).
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct">
            
            	Properties of a component product in a product bundle. A product bundle can represent either a collection of multiple products sold as a single entity, or a collection of the same product sold as a package. For example, a 10-pack of socks or multiple parts and devices in a technology bundle for a computer.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.AllocationExpiration">
            
            Allocation ID associated with this product on this order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.AllocationId">
            
            Allocation ID associated with this product on this order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.CreditValue">
            
            The credit value of the product or bundled product. When the `goodsType `is `DigitalCredit`, this value is populated to indicate the value of the credit. This is used to create store credit in the fulfillment of gift cards.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.Description">
            
            The localized description in text for the object, displayed per the locale code. For example, descriptions are used for product descriptions, attributes, and pre-authorization transaction types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.FulfillmentStatus">
            
            Fulfillment status of the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.GoodsType">
            
            The type of goods in a bundled product. A bundled product is composed of products associated to sell together. Possible values include “Physical” and “DigitalCredit”. This comes from the `productType `of the product. Products are defaulted to a Physical `goodsType`. Gift cards have a `goodsType `of DigitalCredit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.IsPackagedStandAlone">
            
            Indicates if the product must be shipped alone in a container. This is used for products and products within a bundle. If true, this product cannot be shipped in a package with other items and must ship in a package by itself.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.OptionAttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.OptionValue">
            
            The value of the option attribute. These values are associated and used by product bundles and options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.ProductReservationId">
            
            Unique identifier of the product reservation associated with the component product in a product bundle or item in a cart/order. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.Category">
            
            	The category associated with assigned products. Products, product bundles, and options can be classified to multiple categories. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Category.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Category.Parent">
            
            If applicable, the parent category in the category tree. This can be associated to a product as the parent category.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.Product">
            
            	Properties of a product set up in admin and added as an item in a cart or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.AllocationExpiration">
            
            Allocation ID associated with this product on this order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.AllocationId">
            
            Allocation ID associated with this product on this order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.BundledProducts">
            
            Properties of a collection of component products that make up a single product bundle with its own product code. Tenants can define product bundles for any product type that supports the Bundle product usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Categories">
            
            The list of all categories associated with the product. These categories contain products, can have discounts associated, and define the grouping of products to display on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Description">
            
            The localized description in text for the object, displayed per the locale code. For example, descriptions are used for product descriptions, attributes, and pre-authorization transaction types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.DiscountsRestricted">
            
            Indicates if the discount is restricted. If true, the system cannot apply any discounts to this product. Discount restrictions are defined at the master catalog level. Client administrators cannot override discount restrictions at the catalog level, but they can limit the restriction to a defined time interval.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.DiscountsRestrictedEndDate">
            
            The date and time on which the discount restriction period ends.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.DiscountsRestrictedStartDate">
            
            The date and time on which the discount restriction period starts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.FulfillmentStatus">
            
            Fulfillment status of the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.FulfillmentTypesSupported">
            
            List of supported types of fulfillment  for the product or variation. The types include direct ship, in-store pickup, or both. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.GoodsType">
            
            The type of goods in a bundled product. A bundled product is composed of products associated to sell together. Possible values include “Physical” and “DigitalCredit”. This comes from the `productType `of the product. Products are defaulted to a Physical `goodsType`. Gift cards have a `goodsType `of DigitalCredit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ImageAlternateText">
            
            The alternate image description defined for the product, in the language specified in the locale code for the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ImageUrl">
            
            The URL link for the image file associated with a product or category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.IsPackagedStandAlone">
            
            Indicates if the product must be shipped alone in a container. This is used for products and products within a bundle. If true, this product cannot be shipped in a package with other items and must ship in a package by itself.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.IsRecurring">
            
            Indicates if the product in a cart, order, or wish list is purchased on a recurring schedule. If true, the item can be purchased or fulfilled at regular intervals, such as a monthly billing cycle. For example, digital or physical product subscriptions are recurring cart items. This property is not used at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.IsTaxable">
            
            Indicates if the item is subject to taxation, used by products, options, extras, cart and order items, line items, and wish lists. If true, the entity is subject to tax based on the relevant tax rate and rules.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.MfgPartNumber">
            
            The manufacturer's part number for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Options">
            
            List of option attributes configured for an object. These values are associated and used by products, product bundles, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Price">
            
            The price of the product that appears on the storefront including any applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ProductReservationId">
            
            Unique identifier of the product reservation associated with the component product in a product bundle or item in a cart/order. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ProductType">
            
            The product type template associated with the product on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ProductUsage">
            
            The usage type that applies to this product, which is Standard (a single product without configurable options), Configurable (a product that includes configurable option attributes), Bundle (a collection of products sold as a single entity), or Component (an invididual product that represents a component in a bundle).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Properties">
            
            Collection of property attributes defined for the object. Properties are associated to all objects within Mozu, including documents, products, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Upc">
            
            The universal product code (UPC) is the barcode defined for the product. The UPC is unique across all sales channels. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.VariationProductCode">
            
            Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption">
            
            	An option attribute configured for a product on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.DataType">
            
            The data type of the source product property, typically of type Bool, DateTime, Number, or String.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.ShopperEnteredValue">
            
            The value a shopper entered for an attribute that requires additional input for the product on a storefront. This entered value is a selected option or entered content for an extra, such as selecting a color or entering content for a monogram.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.StringValue">
            
            If the object value is a String, this value provides that string value, used by vocabulary property values, products, and options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPrice">
            
            	The price of a product that appears on a storefront after any applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPrice.CreditValue">
            
            The credit value of the product or bundled product. When the `goodsType `is `DigitalCredit`, this value is populated to indicate the value of the credit. This is used to create store credit in the fulfillment of gift cards.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPrice.Msrp">
            
            The manufacturer's suggested retail price for the product. This content may be defined by the supplier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPrice.Price">
            
            The price the merchant charges for a product on a storefront if no sales price is defined.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPrice.SalePrice">
            
            The set sale price for a product consisting of a price with a discount already applied.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPrice.TenantOverridePrice">
            
            The override price defined by the tenant for this cart or order item.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty">
            
            	Details of a property attribute defined for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty.DataType">
            
            The data type of the source product property, typically of type Bool, DateTime, Number, or String.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty.IsMultiValue">
            
            Indicates if the object has or can have multiple properties or values. If true, the object can have more than one value, selectable by shoppers through the storefront or configurable through the catalogs. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty.Values">
            
            List of value data for objects.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPropertyValue">
            
            	Values of a product property attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPropertyValue.StringValue">
            
            If the object value is a String, this value provides that string value, used by vocabulary property values, products, and options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPropertyValue.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Refunds.Refund">
            
            	Mozu.CommerceRuntime.Contracts.Refunds.Refund ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Refunds.Refund.Amount">
            
            Amount refunded.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Refunds.Refund.AuditInfo">
            
            Basic audit info about the object, including date, time, and user account. Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Refunds.Refund.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Refunds.Refund.OrderId">
            
            Unique identifier of the order associated with the payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Refunds.Refund.Payment">
            
            The payment associated with this refund (if applicable).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Refunds.Refund.Reason">
            
            The reason description for an action, including item return, coupon not valid, and item is taxed. 
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return">
            
            	Properties of a return of one or more previously fulfilled items.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.AvailableActions">
            
            Available actions you can complete for an order. These actions may differ depending on the status of the order, such as actions required to enter a payment, return of a package, and fulfillment of a shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ChangeMessages">
            
            Collection (list or paged) of change messages logged for each modification made by a shopper to their carts, wishlists, orders, package, payment, pickup, and returns. Change log messages are system-supplied based on shopper actions and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ChannelCode">
            
            Code that identifies the channel associated with the site for the shopper's created shopping cart, order, and return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.CustomerAccountId">
            
            Unique identifer of the customer account. This ID is used to associate numerous types of data and object with the customer account, including orders, returns, wish lists, and in-store credit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.CustomerInteractionType">
            
            The type of customer interaction used to create this shopping cart. Possible values are Website, Call, Store, or Unknown.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.LocationCode">
            
            The unique, user-defined code that identifies a location. This location can be the location where the order was entered, location for newly in-stock products, and where products are returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.LossTotal">
            
            The total value of the return to the merchant for accounting purposes. This total represents the combined product loss and shipping loss associated with the return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Notes">
            
            Paged list collection of note content for objects including customers, orders, and returns. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.OriginalOrderId">
            
            If this return is associated with a previously completed order, the unique identifier of the original order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Packages">
            
            Array list of physical packages shipped for a specified order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Payments">
            
            Wrapper for a collection of payments associated with an order or return. An order can include a number of payments until the full total is covered. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ProductLossTaxTotal">
            
            The total tax amount levied on the product loss amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ProductLossTotal">
            
            The total value of the product returned to the merchant for accounting purposes, calculated by multiplying the cost of the item by its quantity returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.RefundAmount">
            
            If a refund action was performed for this return, the total amount refunded to the shopper. The refund amount can differ from the sum of the price of the returned items.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ReturnNumber">
            
            A merchant-specific identifier used to sequentially order returns.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ReturnOrderId">
            
            Unique identifier for the order created as a result of the return. If the return results in shipping a replacement item, the order includes shipment information for the replaced items. If the return results in a refund, the order includes payment transactions to credit the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ReturnType">
            
            The type of return, which is "Refund" or "Replace".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.RmaDeadline">
            
            The date by which a shopper must ship items associated with a return in an "awaiting items" state to the merchant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ShippingLossTaxTotal">
            
            The total tax amount levied on the shipping loss amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ShippingLossTotal">
            
            The total value of shipping the returned product to the merchant for accounting purposes, calculated by multiplying the shipping cost of the item by its quantity returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.SiteId">
            
            Unique identifier of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Status">
            
            The current status of an object. This status is specific to the object including payment (New, Authorized, Captured, Declined, Failed, Voided, Credited, CheckRequested, or RolledBack), discount (Active, Scheduled, or Expired), returns (ReturnAuthorized), tenant, package (Fulfilled or NotFulfilled), application, master and product catalogs, orders (Pending, Submitted, Processing, Pending Review, Closed, or Canceled), and order validation results (Pass, Fail, Error, or Review).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.UserId">
            
            Unique identifier of the customer account (shopper or system user). System-supplied and read-only. If the shopper user is anonymous, the user ID represents a system-generated user ID string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.VisitId">
            
            Unique identifier of the customer visit in which the cart was created or last modified.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.WebSessionId">
            
            Unique identifier of the web session in which the cart, order, return, or wish list was created or last modified.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction">
            
            	Properties of an action a user can perform for a return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction.ActionName">
            
            The name of the fulfillment action to perform for the purchased product. Options include "Ship" or "PickUp" (in-store pick-up).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction.ReturnIds">
            
            The list of returns for which to perform the action.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnBundle">
            
            	Properties of a product bundle returned to a tenant for replacement or refund. Shoppers can return either the entire bundle or an individual component product in the bundle. If a component is returned and the shopper requests a refund, it is up to the client to determine the refund amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnBundle.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnBundle.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection">
            
            	List of returns and the details of each return in the list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem">
            
            	Properties of a previously fulfilled item associated with a return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.BundledProducts">
            
            Properties of a collection of component products that make up a single product bundle with its own product code. Tenants can define product bundles for any product type that supports the Bundle product usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.Notes">
            
            Paged list collection of note content for objects including customers, orders, and returns. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.OrderItemId">
            
            Unique identifier of the order item associated with a validation message, order, or return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.OrderLineId">
            
            The OrderLineId that this ReturnItem is associated with. If order item is present, the orderLineId should be present also.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.Product">
            
            The properties of a product, referenced and used by carts, orders, wish lists, and returns.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.ProductLossAmount">
            
            The total value of the product returned to the merchant for accounting purposes, calculated by multiplying the cost of the item by its quantity returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.ProductLossTaxAmount">
            
            The total tax amount levied on the product loss amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.QuantityReceived">
            
            The actual quantity received for the return item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.QuantityRestockable">
            
            The quantity of returned items that can be returned to active product stock.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.QuantityShipped">
            
            The quantity of the item shipped to the shopper in the event of a return item replacement.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.Reasons">
            
            The list of return reasons for the item and the quantity associated with each return reason.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.ShippingLossAmount">
            
            The total value of shipping the returned product to the merchant for accounting purposes, calculated by multiplying the shipping cost of the item by its quantity returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.ShippingLossTaxAmount">
            
            The total tax amount levied on the shipping loss amount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItemCollection">
            
            	Collection of all return items that appear on the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItemCollection.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItemCollection.TotalCount">
            
            Total number of objects in am item collection. Total counts are calculated for numerous objects in Mozu, including location inventory, products, options, product types, product reservations, categories, addresses, carriers, tax rates, time zones, and much more.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnReason">
            
            	The reason for which the item is returned. Valid values include Damaged, Defective, MissingParts, DifferentExpectations, Late, NoLongerWanted, or Other.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnReason.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnReason.Reason">
            
            The reason description for an action, including item return, coupon not valid, and item is taxed. 
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist">
            
            	Properties of a shopper wish list defined for a site, associated with a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ChangeMessages">
            
            Collection (list or paged) of change messages logged for each modification made by a shopper to their carts, wishlists, orders, package, payment, pickup, and returns. Change log messages are system-supplied based on shopper actions and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ChannelCode">
            
            Code that identifies the channel associated with the site for the shopper's created shopping cart, order, and return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.CustomerAccountId">
            
            Unique identifer of the customer account. This ID is used to associate numerous types of data and object with the customer account, including orders, returns, wish lists, and in-store credit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.CustomerInteractionType">
            
            The type of customer interaction used to create this shopping cart. Possible values are Website, Call, Store, or Unknown.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.Data">
            
            Custom data for a given vendor set within the commerce process.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.DiscountedSubtotal">
            
            The aggregate total for all items in the cart, including costs associated with shopper-defined options or extras and any applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.DiscountedTotal">
            
            The subtotal of the cart, order, and wishlist items, including any applied discount calculations. Wishlist subtotals may change depending on the length of time, available discounts, and stock amounts of products at the time of review by shoppers.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.DiscountTotal">
            
            Estimated amount of discounts applied to all items in the carts and orders. System-supplied and read-only. This value will be available at the wish list, cart item, order item, and wish list item level at a later time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ExpirationDate">
            
            Date and time in UTC format when a discount, credit, wish list, or cart expires. An expired discount no longer can be redeemed. An expired wish list is no longer available. An expired credit can no longer be redeemed for a purchase. Acart becomes inactive and expired based on a system-calculated interval. For example, if an anonymous shopper has 14 days of inactivity, the cart is considered abandoned after that period of inactivity. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ExtendedProperties">
            
            Extra properties (key-value pairs) that extend the primary object. Think of this as a property bag of string keys and string values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ExternalId">
            
            Unique identifier used by an external program to identify a Mozu order, customer account, or wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.FeeTotal">
            
            The monetary sum of all fees incurred in the cart, order, line item in a cart, or line item in an order. This value is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.FulfillmentInfo">
            
            Properties of the information required to fulfill the cart, order, or wish list. Shoppers can fulfill ordered items by using in-store pickup or direct shipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.HandlingTaxTotal">
            
            Calculated total tax amount for handling costs if the cart/order is subject to sales tax. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ImportDate">
            
            The date and time an order or wish list is imported into Mozu. This is not the date and time it was created in the external application. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.IsImport">
            
            Indicates if this object/data was imported from an outside source such as a data import or synchronization via an app or service. If true, this data was originally imported into Mozu and accessible through your store database. Examples of imported objects/data include orders and customer accounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ItemTaxTotal">
            
            The total amount of calculated tax for items, used by carts, orders, and wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.LastValidationDate">
            
            The date in UTC Date/Time when the items in the cart were last validated against the site's product catalog. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.OrderDiscounts">
            
            List of order-level discounts projected to apply to the cart at checkout or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.PrivacyType">
            
            The type of privacy to apply to this wish list. Possible values are "Private" which makes the wish list viewable only to the shopper, "DirectShare" which makes the wish list viewable only to people with whom the shopper shares the wish list link, or "Public" which makes the wish list available to everyone. At this time, the system treats all shopper wish lists as "Public" regardless of the defined privacy type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ShippingSubTotal">
            
            The shipping subtotal amount calculated without any applied discounts for line item and entire amounts of carts and orders. This property is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ShippingTaxTotal">
            
            The total amount of tax incurred on the shipping charges in the cart and order. This property is not calculated at this time for wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ShippingTotal">
            
            The calculated total shipping amount estimated for carts or orders, including tax. This amount is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.SiteId">
            
            Unique identifier of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.SortOrder">
            
            The integer that represents the sequential order of this wish list in the customer's collection of wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.Subtotal">
            
            Estimated amount of the cart or order without sales tax, shipping costs, and other fees. This amount is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.TaxTotal">
            
            The total monetary sum of sales tax estimated for a cart or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.Total">
            
            Total is used to indicate the monetary, estimated total amount of the cart or order, including items, sales tax, shipping costs, and other fees. Totals are not estimated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.TypeTag">
            
            User-defined string that defines the type of wish list to define, such as wish list, baby registry, or Christmas list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.Version">
            
            System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.VisitId">
            
            Unique identifier of the customer visit in which the cart was created or last modified.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.WebSessionId">
            
            Unique identifier of the web session in which the cart, order, return, or wish list was created or last modified.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection">
            
            	Collection of shopper wish lists associated with a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem">
            
            	Properties of an item in a shopper wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.Comments">
            
            Notes entered and saved with an order. These notes may be entered by a shopper on a wishlist or for an order. Comments may also be entered by Mozu Admins on an order that may be visible only to authorized shoppers and users.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.Data">
            
            Custom data for a given vendor set within the commerce process.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.DiscountedTotal">
            
            The subtotal of the cart, order, and wishlist items, including any applied discount calculations. Wishlist subtotals may change depending on the length of time, available discounts, and stock amounts of products at the time of review by shoppers.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.DiscountTotal">
            
            Estimated amount of discounts applied to all items in the carts and orders. System-supplied and read-only. This value will be available at the wish list, cart item, order item, and wish list item level at a later time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.ExtendedTotal">
            
            Represents the total price of the cart item extended to the shopper. This begins with the Unit Price, then uses any of the following prices if they are defined, in the following order: Override Amount, Sale Amount, List Amount. This value is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.FeeTotal">
            
            The monetary sum of all fees incurred in the cart, order, line item in a cart, or line item in an order. This value is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.HandlingAmount">
            
            The combined price for all handling costs calculated together for shipped orders, not for digital or in-store pickup. This includes all handling costs per the product line items and options, excluding taxes and discounts. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.IsRecurring">
            
            Indicates if the product in a cart, order, or wish list is purchased on a recurring schedule. If true, the item can be purchased or fulfilled at regular intervals, such as a monthly billing cycle. For example, digital or physical product subscriptions are recurring cart items. This property is not used at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.IsTaxable">
            
            Indicates if the item is subject to taxation, used by products, options, extras, cart and order items, line items, and wish lists. If true, the entity is subject to tax based on the relevant tax rate and rules.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.ItemTaxTotal">
            
            The total amount of calculated tax for items, used by carts, orders, and wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.LineId">
            
            The line id assigned to the order item. Visible only in the Admin, this is set from the Admin or in CommerceRuntime when a cart is converted to an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.PriorityType">
            
            User-defined string that indicates the priority of an item in a wish list. Possible values are Lowest, Low, Medium, High, and Highest.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.Product">
            
            The properties of a product, referenced and used by carts, orders, wish lists, and returns.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.ProductDiscount">
            
            The applicable product discount for an associated cart, order, or wish list. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.ProductDiscounts">
            
            List of product-level discounts projected to apply to a cart, order, or wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.PurchasableStatusType">
            
            The status of the item that indicates whether an item in a wish list can be purchased. Possible values are "Purchasable" which indicates the item can be purchased, "NotPurchasable" which indicates the item is out of stock or otherwise unavailable, or "Missing" which indicates the item has been deleted from the catalog since it was added to the wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.ShippingDiscounts">
            
            List of shipping discounts projected to apply to carts, orders, and wish lists and items at checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.ShippingTaxTotal">
            
            The total amount of tax incurred on the shipping charges in the cart and order. This property is not calculated at this time for wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.ShippingTotal">
            
            The calculated total shipping amount estimated for carts or orders, including tax. This amount is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.Subtotal">
            
            Estimated amount of the cart or order without sales tax, shipping costs, and other fees. This amount is not calculated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.TaxableTotal">
            
            The monetary amount of an item in the cart that is subject to tax. This amount typically represents the line item subtotal before applied discounts for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.Total">
            
            Total is used to indicate the monetary, estimated total amount of the cart or order, including items, sales tax, shipping costs, and other fees. Totals are not estimated for wish lists at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.UnitPrice">
            
            Properties of the price per unit of a product, associated with cart and order items. This price is not used for wish lists at this time.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection">
            
            	Collection of items in a shopper wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.Document">
            
            	The document properties that define the content used by the content management system (CMS).
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.ContentLength">
            
            The character length allowed for the content text.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.ContentMimeType">
            
            The mime type associated with the document content, if applicable.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.ContentUpdateDate">
            
            The date and time the most recent content update was made. UTC date/time. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.DocumentTypeFQN">
            
            Fully qualified name of the document type. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.Extension">
            
            If applicable, the file extension associated with the document content. For example, the extension may be .html for an HTML web page.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.InsertDate">
            
            The date and time when a document was added to the document list. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.ListFQN">
            
            The fully qualified name of the document list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.Properties">
            
            Collection of property attributes defined for the object. Properties are associated to all objects within Mozu, including documents, products, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.PublishState">
            
            The current state of the document or product definition. States for documents include Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft. States for product include New, Draft, or Live.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.UpdateDate">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentCollection">
            
            	A collection of documents in the content resource.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentDraftSummary">
            
            	Summary properties of an unpublished document draft.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.ActiveUpdateDate">
            
            Detailed information of the date and time for the active update date for the document draft summary. This data is associated to document and content data.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.DocumentTypeFQN">
            
            Fully qualified name of the document type. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.DraftUpdateDate">
            
            Detailed information of the date and time for the draft update date for the document draft summary. This data is associated to document and content data.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.ListFQN">
            
            The fully qualified name of the document list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.PublishType">
            
            Whether the draft has been published.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.UpdatedBy">
            
            Unique identifier of the user who last modified the item. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection">
            
            	A paged list collection of document draft summaries.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentInstallation">
            
            	Properties for the document installation package and data. This information details the installation of document content and files within the site. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentInstallation.DocumentTypeFQN">
            
            Fully qualified name of the document type. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentInstallation.Locale">
            
            Localized properties for the document installation package and data. This information details the installation of document content and files within the site and is localized based on the `localeCode`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentInstallation.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentInstallation.Properties">
            
            Collection of property attributes defined for the object. Properties are associated to all objects within Mozu, including documents, products, and product types.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentList">
            
            	The list of document types and related properties that define content used by the content management system (CMS).
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.DocumentListType">
            
            The type of the document list, containing content for a site. For example, a list type could be web pages.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.DocumentTypes">
            
            List of document types associated with this document list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.EnablePublishing">
            
            Indicates if the document list and document list type are enabled to publish. If true, publishing of draft documents in this document list/document list type is enabled for the site. If false, all document changes are immediately published in live mode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.ListFQN">
            
            The fully qualified name of the document list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.Metadata">
            
            Metadata content for entities, used by document lists, document type lists, document type, views, entity lists, and list views.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.Namespace">
            
            If applicable, the registered namespace associated with objects, used to generate the fully qualified name. If no namespace is defined, the namespace associated with the tenant is automatically assigned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.ScopeId">
            
            The ID of the specific scope for the object. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.ScopeType">
            
            The scope at which the object exists, such as "Tenant", "MasterCatalog", or "Site". Scope delineates the level and area of Mozu the object exists within or affects.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.Security">
            
            Indicates the security level for the document content as public, administrator, or owner.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.SupportsPublishing">
            
            Indicates if modified documents are published automatically or saved to publish at a later time. If true, changed documents in this list can be saved as drafts until they are published to the site. If false, all document changes are immediately published in live mode. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.Usages">
            
            List description of usages for content within a view and scope.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.Views">
            
            The view in the site used by associated entities or document lists/list types.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentListCollection">
            
            	Collection of document lists used to organize content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentListType">
            
            	Properties for the document list type. Document lists contain documents with an associated document type, such as web pages.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListType.DefaultDocuments">
            
            Definition of any documents to create with a document list is created. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListType.DocumentListTypeFQN">
            
            The fully qualified name for the document list type for content. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListType.DocumentTypeFQNs">
            
            List of fully qualified names for the document type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListType.EnablePublishing">
            
            Indicates if the document list and document list type are enabled to publish. If true, publishing of draft documents in this document list/document list type is enabled for the site. If false, all document changes are immediately published in live mode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListType.InstallationPackage">
            
            The package of document lists and content documents to be installed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListType.Metadata">
            
            Metadata content for entities, used by document lists, document type lists, document type, views, entity lists, and list views.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListType.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListType.Namespace">
            
            If applicable, the registered namespace associated with objects, used to generate the fully qualified name. If no namespace is defined, the namespace associated with the tenant is automatically assigned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListType.ScopeType">
            
            The scope at which the object exists, such as "Tenant", "MasterCatalog", or "Site". Scope delineates the level and area of Mozu the object exists within or affects.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListType.SupportsPublishing">
            
            Indicates if modified documents are published automatically or saved to publish at a later time. If true, changed documents in this list can be saved as drafts until they are published to the site. If false, all document changes are immediately published in live mode. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListType.Usages">
            
            List description of usages for content within a view and scope.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListType.Version">
            
            The current version number of the order, wish list, document list, or document type list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListType.Views">
            
            The view in the site used by associated entities or document lists/list types.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentType">
            
            	The type of documents used in the CMS such as "web_page" or "template" or "image_url".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.AdminName">
            
            The administrator name associated with the object/data.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.DocumentTypeFQN">
            
            Fully qualified name of the document type. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.InstallationPackage">
            
            The package of document lists and content documents to be installed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.Metadata">
            
            Metadata content for entities, used by document lists, document type lists, document type, views, entity lists, and list views.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.Namespace">
            
            If applicable, the registered namespace associated with objects, used to generate the fully qualified name. If no namespace is defined, the namespace associated with the tenant is automatically assigned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.Properties">
            
            Collection of property attributes defined for the object. Properties are associated to all objects within Mozu, including documents, products, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.Version">
            
            The current version number of the order, wish list, document list, or document type list.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentTypeCollection">
            
            	Collection of document types for the content service.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentTypeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentTypeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentTypeCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentTypeCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentTypeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.Facet">
            
            	Properties of the facet used to retrieve documents.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Facet.Count">
            
            The number of facet results for a product search.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Facet.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.Property">
            
            	Provides details and data for properties for content in the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Property.IsMultiValued">
            
            If true, the attribute can have more than one value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Property.IsRequired">
            
            Indicates if the property, attribute, product option, or product extra is required. If true, the object must have a defined value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Property.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Property.PropertyType">
            
            The type of a property. These types are associated to properties for documents and document types.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.PropertyType">
            
            	Property type available for content. Property types are like templates that can be reused.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.AdminName">
            
            The administrator name associated with the object/data.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.DataType">
            
            The data type of the source product property, typically of type Bool, DateTime, Number, or String.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.InstallationPackage">
            
            The package of document lists and content documents to be installed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.IsAggregatable">
            
            If true, this entity can be grouped.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.IsQueryable">
            
            Indicates if the entity can be located and returned in a search, used for fields and property types. If true, the entity can be searched. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.IsSortable">
            
            Indicates if the fields or property types are sortable on the page. If true, the property type results are sortable. If false, the property type results cannot be sorted by any options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.Namespace">
            
            If applicable, the registered namespace associated with objects, used to generate the fully qualified name. If no namespace is defined, the namespace associated with the tenant is automatically assigned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.PropertyTypeFQN">
            
            The fully qualified name for the property type for content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.Version">
            
            The current version number of the order, wish list, document list, or document type list.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.PropertyTypeCollection">
            
            	Collection of content property types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyTypeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyTypeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyTypeCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyTypeCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyTypeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.View">
            
            	A view can select which fields are returned from a document query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.View.Fields">
            
            The list of fields to display for a view or an associated schema. For example, the address schema would display fields for postal addresses.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.View.IsVisibleInStorefront">
            
            The isVisibleInStorefront field indicates whether documents in the view can be accessed from the Mozu storefront application. If true, the storefront application and storefront client application (javascript tier) can GET documents from the view.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.View.Metadata">
            
            Metadata content for entities, used by document lists, document type lists, document type, views, entity lists, and list views.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.View.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.View.Usages">
            
            List description of usages for content within a view and scope.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.ViewField">
            
            	Field within a view of the content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.ViewField.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.ViewField.Target">
            
            Targets represent the object, such as an item to apply discounts (products or orders) or a view field for content. When accessing MZDB APIs for Mongo interactions, targets are the dot notation that links to the source document property. For example, firstitem for the direc level or firstitem.seconditem.thirditem for a deeper property.              
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Address">
            
            	Address information to supply for a contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.Address1">
            
            Physical or mailing address line one. Usually includes the street number and street name or it could be a P.O. Box. Max length: 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.Address2">
            
            Physical or mailing address line two. Usually supplements the main street address with apartment, floor, suite, building, or unit information. Max length: 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.Address3">
            
            Physical or mailing address line three. Max length: 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.Address4">
            
            Physical or mailing address line four. Max length: 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.AddressType">
            
            The type of address, which is commercial or residential.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.CityOrTown">
            
            City or town for the physical or mailing address. The maximum character length is 100.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.CountryCode">
            
            The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.IsValidated">
            
            Indicates if the address has been validated. If true, the address has been verified by an address validation service.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.PostalOrZipCode">
            
            The postal or zip code for the address. For example, a USPS-approved ZIP code standard is ZIP+4: 12345-6789. The maximum character length is 100.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.StateOrProvince">
            
            The two-letter geographic code representing the state for the physical or mailing address. This is currently limited to the US.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.AuditInfo">
            
            	Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.AuditInfo.CreateBy">
            
            Unique identifier of the user created the resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.AuditInfo.CreateDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.AuditInfo.UpdateBy">
            
            Unique identifier of the user who last modified the item. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.AuditInfo.UpdateDate">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Behavior">
            
            	Properties of an application's behavior.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.CategoryId">
            
            Unique identifier of a category. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.IsPrivate">
            
            If true, this application behavior is not part of the public Mozu API.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.RequiresBehaviorIds">
            
            For validation purposes, the integer value must be a list of behavior IDs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.SystemRoles">
            
            Provides a list of system roles for a specified behavior.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.ValidUserTypes">
            
            The user types that are valid for this behavior.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.BehaviorCategory">
            
            	Properties of a category of application behaviors.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCategory.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCategory.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.BehaviorCategoryCollection">
            
            	List of categories of application behaviors.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCategoryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCategoryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.BehaviorCollection">
            
            	List of application behaviors and details for each record in the list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Contact">
            
            	Contact information for an account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.Address">
            
            All address information for the contact. This data is used to validate the address for the customer account and includes the full address.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.CompanyOrOrganization">
            
            The legal or doing business as (DBA) or tradestyle name of the business or organization. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.Email">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.FirstName">
            
            The first name of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.LastNameOrSurname">
            
            The last name or surname of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.MiddleNameOrInitial">
            
            The middle name or the first initial of the middle name of the contact. The maximum character length is 100.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.PhoneNumbers">
            
            List of phone numbers associated with the customer account contact. The phone numbers include area codes.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.Attribute">
            
            	Properties of an attribute used to describe customers or orders.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.AdminName">
            
            The administrator name associated with the object/data.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.AttributeCode">
            
            Merchant-defined code for an extensible attribute. This code may be used to generate an object's fully qualified name, such as for products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.AttributeFQN">
            
            The fully qualified name of the attribute. The attributeDefiniteId may be used to generate this name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.AttributeMetadata">
            
            List of metadata key-value pairs defined for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.AuditInfo">
            
            Basic audit info about the object, including date, time, and user account. Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.Content">
            
            Localizable content (such as a name and/or description) for an attribute. The content may be localized when displayed according to the locale code specified by the master catalog. Content can include descriptive text for product extensible attributes, catalog-level descriptions (displayed if isContentOverriden is true), product bundles, and customer account notes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.DataType">
            
            The data type of the source product property, typically of type Bool, DateTime, Number, or String.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.DisplayGroup">
            
            Whether the customer or order attribute appears in Mozu Admin only, or in both Mozu Admin and the website storefront. Possible values are Admin and AdminAndStorefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.InputType">
            
            The type of input selection used to define a value for the attribute, including Yes/No, Date, DateTime, List, TextBox, or TextArea.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.IsActive">
            
            Indicates if the object or feature is active. This indicator is used for subscriptions (at the site or tenant level), customer accounts, products and variations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.IsMultiValued">
            
            If true, the attribute can have more than one value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.IsReadOnly">
            
            Flag used to indicate if this attribute definition is read-only. Once an attribute definition is set to read-only this action cannot be undone. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.IsRequired">
            
            Indicates if the property, attribute, product option, or product extra is required. If true, the object must have a defined value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.IsVisible">
            
            If true, the attribute is visible in its defined display group.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.Namespace">
            
            If applicable, the registered namespace associated with objects, used to generate the fully qualified name. If no namespace is defined, the namespace associated with the tenant is automatically assigned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.Order">
            
            Integer that represents the sequence order of the attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.Validation">
            
            Properties used when validating a value entered for an object, including extensible attributes, products attributes, and database entries.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.ValueType">
            
            An attribute value type is either predefined vocabulary by the admin during attribute set up or user-defined with an appropriate type (AdminEntered or ShopperEntered depending on the user). These types are used by products and attributes. The difference between predefined values versus manually entered values is such that the first choice is a set of options to choose from. AdminEntered and ShopperEntered are values that are entered rather than system-supplied and are not stored in the database, but captured during a live commerce operations such as during an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.VocabularyValues">
            
            List of valid vocabulary values defined for an attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection">
            
            	Array list of customer or order attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeLocalizedContent">
            
            	The localized name and description of the attribute, displayed in the locale defined for the master catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeLocalizedContent.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeMetadataItem">
            
            	Properties of a metadata item defined for an attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeMetadataItem.Key">
            
            Key used for metadata defined for objects, including extensible attributes, custom attributes associated with a shipping provider, and search synonyms definitions. This content may be user-defined depending on the object and usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeMetadataItem.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeValidation">
            
            	Validates the attribute configured for the customer in the storefront against the attribute configured in Mozu admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MaxDateTime">
            
            The latest possible date and time the extensible attribute can be validated.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MaxNumericValue">
            
            The maximum number that can be entered as a value for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MaxStringLength">
            
            The maximum character length possible for a string value entered for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MinDateTime">
            
            The earliest date and time an extensible attribute can be validated.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MinNumericValue">
            
            The minimum numeric value required to validate an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MinStringLength">
            
            The minimum character length possible for a string value entered for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.RegularExpression">
            
            Regular expression used to process and validate an extensible attribute value that require special formatting, such as phone numbers.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeValueLocalizedContent">
            
            	The attribute value localized content are the content strings used to describe an attribute value in the localized language specified by the site's locale code. Extensible only for customer and order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValueLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValueLocalizedContent.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue">
            
            	Properties of a vocabulary value defined for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue.Content">
            
            Localizable content (such as a name and/or description) for an attribute. The content may be localized when displayed according to the locale code specified by the master catalog. Content can include descriptive text for product extensible attributes, catalog-level descriptions (displayed if isContentOverriden is true), product bundles, and customer account notes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue.IsHidden">
            
            Indicates if the object is hidden or breaks inheritance, primarily used by facets, products, and attribute vocabulary values. For example, if true, the attribute vocabulary value does not appear in the list when defining a value for an attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue.Sequence">
            
            The numeric order of objects, used by a vocabulary value defined for an extensible attribute, images, and categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Measurement">
            
            	Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Measurement.Unit">
            
            The unit of measurement, such as length or weight.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Measurement.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Phone">
            
            	Phone number information for a contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Phone.Home">
            
            Home phone number.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Phone.Mobile">
            
            Mobile phone number.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Phone.Work">
            
            Work phone number.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.ThirdParty.ActiveShippingCountry">
            
            	Properties of a shipping country active for a third-party capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.ActiveShippingCountry.ActiveCarriers">
            
            Array list of the active shipping carriers for the country.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.ThirdParty.InitializablePropertyValue">
            
            	Properties of a value that can be initialized for a capability property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.InitializablePropertyValue.Initialized">
            
            Indicates if an app is initialized and capable of being enabled in the tenant and site. Apps will need to be installed and configured to become initialized, such as validating credentials and/or API keys with a third-party service. If true, the app is initialized and can be enabled for usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.InitializablePropertyValue.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.ThirdParty.InitializableShippingCountryPropertyValue">
            
            	Property value that can be initialized for a capability that uses shipping countries.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.InitializableShippingCountryPropertyValue.Child">
            
            Child value in a hierarchy of shipping country properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.InitializableShippingCountryPropertyValue.Initialized">
            
            Indicates if an app is initialized and capable of being enabled in the tenant and site. Apps will need to be installed and configured to become initialized, such as validating credentials and/or API keys with a third-party service. If true, the app is initialized and can be enabled for usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.InitializableShippingCountryPropertyValue.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.ThirdParty.OperationUrl">
            
            	Properties of a URL endpoint associated with a capability operation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.OperationUrl.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.OperationUrl.Url">
            
            The URL endpoint address.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.User">
            
            	Properties of the user. Users include customers and Mozu users.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.EmailAddress">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.FirstName">
            
            The first name of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.IsActive">
            
            Indicates if the object or feature is active. This indicator is used for subscriptions (at the site or tenant level), customer accounts, products and variations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.LastName">
            
            The last name or surname of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.Password">
            
            The saved password for the customer account. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.Roles">
            
            Collection of roles assigned to the user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.SystemData">
            
            Collection of system-supplied data about the user.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserAuthInfo">
            
            	Information required to authenticate a user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserAuthInfo.EmailAddress">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserAuthInfo.Password">
            
            The saved password for the customer account. 
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserProfile">
            
            	Properties of the admin user profile.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserProfile.EmailAddress">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserProfile.FirstName">
            
            The first name of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserProfile.LastName">
            
            The last name or surname of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserProfile.UserId">
            
            Unique identifier of the customer account (shopper or system user). System-supplied and read-only. If the shopper user is anonymous, the user ID represents a system-generated user ID string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserProfile.UserName">
            
            The user name associated with the user profile. The customer uses the user name to access the account.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserRole">
            
            	Properties of a role assigned to a user for a defined scope.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserRole.AssignedInScope">
            
            Properties of the developer account or Mozu tenant associated with the user role.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserRole.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserRole.RoleId">
            
            Unique identifier of the user role.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserRole.RoleName">
            
            The name of the user role, such as "developer" or "administrator".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserRole.UserId">
            
            Unique identifier of the customer account (shopper or system user). System-supplied and read-only. If the shopper user is anonymous, the user ID represents a system-generated user ID string.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserScope">
            
            	Properties of the scope in which a user operates, which represents a developer account or Mozu production tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserScope.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserScope.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserScope.Type">
            
            The type of scope, which is a developer account or production tenant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserSystemData">
            
            	System-supplied and read-only information about the user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.CreatedOn">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.FailedLoginAttemptCount">
            
            The total number of failed authentication attempts associated with a customer account attempting access.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.FirstFailedLoginAttemptOn">
            
            The date and time the initial login was unsuccessful. System-supplied and read only. Each time user authentication fails, an update occurs on this field. The amount of failures is calculated together for `failedLoginAttemptCount`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.IsLocked">
            
            Indicates if a customer account and associated data is locked. If true, the user account is locked due to multiple failed authentication attempts. The user cannot login until the account is unlocked.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.IsPasswordChangeRequired">
            
            Indicates if the customer account must have the password changed on login. If true, the login action requires a password change for increased security. If false, the login does not require a password change.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.LastLockedOn">
            
            Provides date and time data when the customer's account was last locked. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.LastLoginOn">
            
            Provides the date and time the customer last logged into the store. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.LastPasswordChangeOn">
            
            Date and time the customer's password was last modified. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.RemainingLoginAttempts">
            
            The number of login attempts remaining for the customer. The user must login successfully before this value reaches zero otherwise the account locks.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.UpdatedOn">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.AccountPasswordInfo">
            
            	Mozu.Customer.Contracts.AccountPasswordInfo ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.AccountPasswordInfo.AccountId">
            
            Unique identifier of the customer account generated by the system. Account IDs are generated at account creation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.AccountPasswordInfo.PasswordInfo">
            
            The Old and New Password for the Account
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.AccountPasswordInfo.UnlockAccount">
            
            Indicates to unlock the Account
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.AccountPasswordInfoCollection">
            
            	Mozu.Customer.Contracts.AccountPasswordInfoCollection ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.AccountPasswordInfoCollection.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.AccountPasswordInfoCollection.TotalCount">
            
            Total number of objects in am item collection. Total counts are calculated for numerous objects in Mozu, including location inventory, products, options, product types, product reservations, categories, addresses, carriers, tax rates, time zones, and much more.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.AddressValidationRequest">
            
            	Properties of the address used for validation of the account's full address. This content may include multiple lines of an address, city, state/province, zip/postal code, and country.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.AddressValidationRequest.Address">
            
            All address information for the contact. This data is used to validate the address for the customer account and includes the full address.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.AddressValidationResponse">
            
            	Array list of possible valid address matches based on the entry supplied in the request.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.AddressValidationResponse.AddressCandidates">
            
            Array list of possible valid address matches based on the entry supplied in the request.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Card">
            
            	Properties of a credit card used to submit payment for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.CardNumberPart">
            
            The masked credit card number part returned from the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.CardType">
            
            The type of credit card, such as Visa or Amex.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.ContactId">
            
            Unique identifier of the customer account contact associated with the credit card.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.ExpireMonth">
            
            The two-digit month a credit card expires for a payment method.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.ExpireYear">
            
            The four-digit year the credit card expires for a payment method.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.NameOnCard">
            
            The full name printed on a credit card. The name should match what is printed on the card exactly, used in validation during a payment.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CardCollection">
            
            	Collection of credit cards defined for the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CardCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CardCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.ChangePasswordResult">
            
            	Mozu.Customer.Contracts.ChangePasswordResult ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.ChangePasswordResult.AccountId">
            
            Unique identifier of the customer account generated by the system. Account IDs are generated at account creation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.ChangePasswordResult.ErrorMessage">
            
            Mozu.Customer.Contracts.ChangePasswordResult errorMessage ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.ChangePasswordResult.Succeeded">
            
            Mozu.Customer.Contracts.ChangePasswordResult succeeded ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.ChangePasswordResultCollection">
            
            	Mozu.Customer.Contracts.ChangePasswordResultCollection ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.ChangePasswordResultCollection.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.ChangePasswordResultCollection.TotalCount">
            
            Total number of objects in am item collection. Total counts are calculated for numerous objects in Mozu, including location inventory, products, options, product types, product reservations, categories, addresses, carriers, tax rates, time zones, and much more.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CommerceSummary">
            
            	Properties of the commerce summary associated with a customer account, which includes details about the shopper's most recent order, wish lists, and total order value over time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CommerceSummary.LastOrderDate">
            
            The date and time the shopper last submitted an order for any site associated with the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CommerceSummary.OrderCount">
            
            The total number of order the shopper submitted across all sites associated with the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CommerceSummary.TotalOrderAmount">
            
            The aggregate total amount of all orders the shopper submitted, across all sites associated with the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CommerceSummary.VisitsCount">
            
            The number of visits to a site associated with a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CommerceSummary.WishlistCount">
            
            The number of wish lists associated with a customer account. This number represents the total number of a shopper's wish lists across all sites associated with a tenant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.ContactType">
            
            	Properties of a type of contact associated with a customer account, such as Billing or Fulfillment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.ContactType.IsPrimary">
            
            Indicates if the object is primary, used to indicate primary contacts and entities within a tenant. If true, this marker indicates that the object is the primary in a set.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.ContactType.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Credit.Credit">
            
            	Properties of the store credit of gift card applied to a customer account. At this time, gift card functionality is reserved for future use.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.ActivationDate">
            
            The date and time the store credit or gift card was activated by the shopper. Credits cannot be used until activated. After the credit is activated, this property value is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.Code">
            
            User-defined identifier of the credit, which is unique within the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.CreditType">
            
            The type of customer credit, which is "GiftCard" or "StoreCredit".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.CurrentBalance">
            
            The current remaining balance of the credit applied to the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.CustomerId">
            
            Unique identifier of the customer in Mozu, used to associate customers with data, orders, returns, and in-store credit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.ExpirationDate">
            
            Date and time in UTC format when a discount, credit, wish list, or cart expires. An expired discount no longer can be redeemed. An expired wish list is no longer available. An expired credit can no longer be redeemed for a purchase. Acart becomes inactive and expired based on a system-calculated interval. For example, if an anonymous shopper has 14 days of inactivity, the cart is considered abandoned after that period of inactivity. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.InitialBalance">
            
            The initial balance of the credit applied to the customer account. This value cannot be changed after it is set.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntry">
            
            	Properties of an audit entry logged for a store credit or gift card.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntry.ActivityType">
            
            The type of activity associated with the audit entry. Possible values are: Created, Updated, Deleted, Activated, Deactivated, or Transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntry.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntry.Details">
            
            Detail log that describes the activity performed for this credit audit entry.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection">
            
            	Paged list of audit entries associated with a customer's store credit or gift card.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Credit.CreditCollection">
            
            	Paged list of store credits and gift cards defined for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Credit.CreditTransaction">
            
            	Properties of a transaction performed for a customer credit that update the remaining balance of the credit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransaction.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransaction.Comments">
            
            Notes entered and saved with an order. These notes may be entered by a shopper on a wishlist or for an order. Comments may also be entered by Mozu Admins on an order that may be visible only to authorized shoppers and users.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransaction.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransaction.ImpactAmount">
            
            The amount to apply to the credit balance. The defined transaction type determines whether this amount represents a positive or negative integer.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransaction.TransactionType">
            
            The type of transaction, pertaining to the transaction a customer performed or the type of customer credit. For customer credit, you will set the data to Debit to decrease or Credit to update. For the type of transaction, the type includes Order, Return, OrderPickup, or Wishlist.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection">
            
            	Paged list of transactions associated with a customer credit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CurrencyAmount">
            
            	The currency code and the total monetary sum of the order. Currently, only USD is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CurrencyAmount.Amount">
            
            The monetary amount in the specified currency locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CurrencyAmount.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAccount">
            
            	Properties of the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.AcceptsMarketing">
            
            Indicates if the customer account is opted to receive marketing materials. If true, the customer account is opted in for receiving the content. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.Attributes">
            
            Collection of attributes that may be paged list or a list, depending on the usage per object and API type. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.CommerceSummary">
            
            Properties of the commerce summary associated with a customer account, which includes details about the shopper's most recent order, wish lists, and total order value over time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.CompanyOrOrganization">
            
            The legal or doing business as (DBA) or tradestyle name of the business or organization. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.Contacts">
            
            Contact information, including the contact's name, address, phone numbers, email addresses, and company (if supplied). Also indicates whether this is a billing, shipping, or billing and shipping contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.EmailAddress">
            
            The email address for the customer account and contact. This email may be used for login to the storefront and for subscription mailing lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.ExternalId">
            
            Unique identifier used by an external program to identify a Mozu order, customer account, or wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.FirstName">
            
            The full first name of a customer or contact name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.HasExternalPassword">
            
            Indicates if an external password is set on this account
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.IsActive">
            
            Indicates if the object or feature is active. This indicator is used for subscriptions (at the site or tenant level), customer accounts, products and variations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.IsAnonymous">
            
            If true, this customer account represents an anonymous shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.IsLocked">
            
            Indicates if a customer account and associated data is locked. If true, the user account is locked due to multiple failed authentication attempts. The user cannot login until the account is unlocked.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.LastName">
            
            The full last name of a customer or contact name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.Notes">
            
            Paged list collection of note content for objects including customers, orders, and returns. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.Segments">
            
            List of customer segments associated with the customer account. Customer accounts can be members of any number of segments.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.TaxExempt">
            
            If true, this customer account has tax exempt status.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.TaxId">
            
            The tax identification number associated with the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.UserId">
            
            Unique identifier of the customer account (shopper or system user). System-supplied and read-only. If the shopper user is anonymous, the user ID represents a system-generated user ID string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.UserName">
            
            The user name associated with the user profile. The customer uses the user name to access the account.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo">
            
            	The authentication information associated with a customer account. The data includes the account properties such as the name, username, authorization access, and email address, the required password to match, and indicates if the account was imported from a third party resource. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo.Account">
            
            The unique identifier of the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo.ExternalPassword">
            
            Mozu.Customer.Contracts.CustomerAccountAndAuthInfo externalPassword ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo.IsImport">
            
            Indicates if this object/data was imported from an outside source such as a data import or synchronization via an app or service. If true, this data was originally imported into Mozu and accessible through your store database. Examples of imported objects/data include orders and customer accounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo.Password">
            
            The saved password for the customer account. 
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection">
            
            	Paged list of customer accounts sorted and filtered by any query parameters specified in the request.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAttribute">
            
            	Properties of an attribute associated with a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttribute.AttributeDefinitionId">
            
            Unique identifier of the attribute definition.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttribute.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttribute.FullyQualifiedName">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttribute.Values">
            
            List of value data for objects.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAttributeCollection">
            
            	Collection of customer account attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttributeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttributeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttributeCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttributeCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttributeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket">
            
            	Properties of an authentication ticket generated for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAuthTicket.AccessToken">
            
            Alphanumeric string used to authenticate the user in API request headers. The token stores an encrypted list of the application's configured behaviors and authenticates the application.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAuthTicket.AccessTokenExpiration">
            
            The date and time the user access token expires. If the token will expire, a new token will need to be generated and assigned to the account to continue and restore access to the store, data, and account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAuthTicket.CustomerAccount">
            
            Properties of the customer account associated with the authentication ticket.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAuthTicket.RefreshToken">
            
            Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAuthTicket.RefreshTokenExpiration">
            
            The date and time the developer account or application refresh token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAuthTicket.UserId">
            
            Unique identifier of the customer account (shopper or system user). System-supplied and read-only. If the shopper user is anonymous, the user ID represents a system-generated user ID string.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerContact">
            
            	Contact information, including the contact's name, address, phone numbers, email addresses, and company (if supplied). Also indicates whether this is a billing, shipping, or billing and shipping contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.AccountId">
            
            Unique identifier of the customer account generated by the system. Account IDs are generated at account creation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.Address">
            
            All address information for the contact. This data is used to validate the address for the customer account and includes the full address.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.CompanyOrOrganization">
            
            The legal or doing business as (DBA) or tradestyle name of the business or organization. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.Email">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.FaxNumber">
            
            The fax number associated with the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.FirstName">
            
            The first name of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.Label">
            
            Descriptive text used as a label for objects, such as field names, facets, date ranges, contact information, and package information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.LastNameOrSurname">
            
            The last name or surname of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.MiddleNameOrInitial">
            
            The middle name or the first initial of the middle name of the contact. The maximum character length is 100.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.PhoneNumbers">
            
            List of phone numbers associated with the customer account contact. The phone numbers include area codes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.Types">
            
            List of the types associated with a customer contact, such as Billing or Fulfillment.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerContactCollection">
            
            	Paged list of contact information for a specified customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContactCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContactCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContactCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContactCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContactCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerLoginInfo">
            
            	The login information for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerLoginInfo.EmailAddress">
            
            The email address for the customer account and contact. This email may be used for login to the storefront and for subscription mailing lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerLoginInfo.ExternalPassword">
            
            Mozu.Customer.Contracts.CustomerLoginInfo externalPassword ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerLoginInfo.IsImport">
            
            Indicates if this object/data was imported from an outside source such as a data import or synchronization via an app or service. If true, this data was originally imported into Mozu and accessible through your store database. Examples of imported objects/data include orders and customer accounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerLoginInfo.Password">
            
            The saved password for the customer account. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerLoginInfo.Username">
            
            The user name associated with the user profile. The customer uses the user name to access the account.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerNote">
            
            	Properties of a note configured for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNote.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNote.Content">
            
            Localizable content (such as a name and/or description) for an attribute. The content may be localized when displayed according to the locale code specified by the master catalog. Content can include descriptive text for product extensible attributes, catalog-level descriptions (displayed if isContentOverriden is true), product bundles, and customer account notes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNote.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerNoteCollection">
            
            	Collection of notes for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNoteCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNoteCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNoteCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNoteCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNoteCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerSegment">
            
            	The Customer Segment object includes properties of a defined customer segment used to group customer accounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerSegment.Code">
            
            The user-defined code assigned for the customer segment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerSegment.Description">
            
            The localized description in text for the object, displayed per the locale code. For example, descriptions are used for product descriptions, attributes, and pre-authorization transaction types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerSegment.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerSegment.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerSegmentCollection">
            
            	Paged list of customer segments.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerSegmentCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerSegmentCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerSegmentCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerUserAuthInfo">
            
            	The authentication information required to generate an authentication ticket for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerUserAuthInfo.Password">
            
            The saved password for the customer account. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerUserAuthInfo.Username">
            
            The user name associated with the user profile. The customer uses the user name to access the account.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscription">
            
            	Properties of a push notification to which the shopper subscribes. This notification sends the shopper an alert when a new product or a product previously out of stock becomes available in the specified location's active product inventory.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscription.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscription.CustomerId">
            
            Unique identifier of the customer in Mozu, used to associate customers with data, orders, returns, and in-store credit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscription.Email">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscription.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscription.LocationCode">
            
            The unique, user-defined code that identifies a location. This location can be the location where the order was entered, location for newly in-stock products, and where products are returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscription.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection">
            
            	Collection of push notifications to which the shopper subscribes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.LoginState">
            
            	Properties of the login state of a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.CreatedOn">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.FailedLoginAttemptCount">
            
            The total number of failed authentication attempts associated with a customer account attempting access.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.FirstFailedLoginAttemptOn">
            
            The date and time the initial login was unsuccessful. System-supplied and read only. Each time user authentication fails, an update occurs on this field. The amount of failures is calculated together for `failedLoginAttemptCount`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.IsLocked">
            
            Indicates if a customer account and associated data is locked. If true, the user account is locked due to multiple failed authentication attempts. The user cannot login until the account is unlocked.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.IsPasswordChangeRequired">
            
            Indicates if the customer account must have the password changed on login. If true, the login action requires a password change for increased security. If false, the login does not require a password change.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.LastLockedOn">
            
            Provides date and time data when the customer's account was last locked. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.LastLoginOn">
            
            Provides the date and time the customer last logged into the store. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.LastPasswordChangeOn">
            
            Date and time the customer's password was last modified. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.RemainingLoginAttempts">
            
            The number of login attempts remaining for the customer. The user must login successfully before this value reaches zero otherwise the account locks.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.UpdatedOn">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.PasswordInfo">
            
            	The information required to modify a shopper account password.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.PasswordInfo.ExternalPassword">
            
            The External Password, typically used for imports in conjunction with a custom action
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.PasswordInfo.NewPassword">
            
            The new password entered and saved by the user of the account. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.PasswordInfo.OldPassword">
            
            The previous shopper account password value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.ResetPasswordInfo">
            
            	Information required to reset the password for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.ResetPasswordInfo.EmailAddress">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.ResetPasswordInfo.UserName">
            
            The user name associated with the user profile. The customer uses the user name to access the account.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Transaction">
            
            	Properties of a transaction performed by a customer account. The system creates a transaction each time the customer submits an order, returns an item, picks up items for an order, or manages items on a wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Transaction.Amount">
            
            If applicable, the amount of the transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Transaction.CurrencyCode">
            
            The localized currency code for the monetary amount. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Transaction.Date">
            
            The date and time recording for a customer action including a transaction and storefront visit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Transaction.InteractionType">
            
            The type of payment interaction. The payment can be Capture or CheckReceived. The value also includes customer payment interactions such as Website, Call, Store, or Unknown.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Transaction.TransactionId">
            
            The unique identifier of the transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Transaction.TransactionType">
            
            The type of transaction, pertaining to the transaction a customer performed or the type of customer credit. For customer credit, you will set the data to Debit to decrease or Credit to update. For the type of transaction, the type includes Order, Return, OrderPickup, or Wishlist.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Transaction.VisitId">
            
            Unique identifier of the customer visit in which the cart was created or last modified.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Visit">
            
            	Properties of a customer visit to one of a company's sites.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.AccountId">
            
            Unique identifier of the customer account generated by the system. Account IDs are generated at account creation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.BrowserLocationCode">
            
            If the customer visit is made online, the location code associated with the website visited.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.Date">
            
            The date and time recording for a customer action including a transaction and storefront visit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.LocationCode">
            
            The unique, user-defined code that identifies a location. This location can be the location where the order was entered, location for newly in-stock products, and where products are returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.Transactions">
            
            Array list of transactions the customer performed during the visit. A customer can perform multiple transactions in a single visit, or the visit can have no associated transactions.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.Type">
            
            The type of customer visit, which is "Website," "Store," "Call," or "Unknown."
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.UserId">
            
            Unique identifier of the customer account (shopper or system user). System-supplied and read-only. If the shopper user is anonymous, the user ID represents a system-generated user ID string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.WebReferrer">
            
            The HTTP_Referrer that initiatied the visit started. If the shopper was not referred from another source, this value is null.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.WebSessionId">
            
            Unique identifier of the web session in which the cart, order, return, or wish list was created or last modified.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.WebSiteId">
            
            Unique identifier of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.WebUserAgent">
            
            The user agent string for the browser.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.VisitCollection">
            
            	Paged collection of customer visits.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.VisitCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.VisitCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.VisitCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.VisitCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.VisitCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.Event">
            
            	Properties of an event the system creates each time a create, read, update, or delete operation is performed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.CatalogId">
            
            The unique identifier of the catalog of products used by a site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.CorrelationId">
            
            The unique identifier of the API request associated with the event action, which might contain multiple actions.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.EntityId">
            
            The unique identifier of the entity that caused the event. For example, if the event is "product.created", the entity ID value represents the product code of the product that was created.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.ExtendedProperties">
            
            Extended properties. Note: This is purposefully not a CollectionBase type wrapper so consumers start to get used to not having counts returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.IsTest">
            
            Indicates if the event is a test request or test entity. If true, the generated and captured event record was generated as a test request for an application.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.MasterCatalogId">
            
            The unique identifier of the master catalog associated with the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.Topic">
            
            The type of event that was performed, such as "product.created" or "category.deleted".
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.EventCollection">
            
            	The paged collection of events.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.EventDeliveryAttempt">
            
            	Properties and information captured for an attempted delivery that failed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliveryAttempt.DeliveryStatus">
            
            Status of the delivery process `EventDeliveryStatusType`. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliveryAttempt.ErrorType">
            
            Type of error that occurred, if the delivery was unsuccessful
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliveryAttempt.ExecutionDate">
            
            The date that the delivery was attempted
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliveryAttempt.HttpStatus">
            
            The HTTP Status (code and name) returned by the remote endpoint
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliveryAttempt.Message">
            
            The text of the change message, such as "This product is no longer available." System-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.EventDeliverySummary">
            
            	Data for event deliveries. Returned content details a summary of actions, events, and results for a delivery event.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliverySummary.CreateDate">
            
            The date time in UTC format set when the object was created. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliverySummary.DeliveryAttempts">
            
            Details about each attempted delivery of the event to the endpoint
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliverySummary.DeliveryStatus">
            
            Status of the delivery process `EventDeliveryStatusType`. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliverySummary.EventSummary">
            
            Event Summary
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliverySummary.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliverySummary.IsRunning">
            
            Indicates whether delivery of the event is currently being attempted at this moment in time
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliverySummary.LastExecutionDate">
            
            The date that the delivery was last attempted (either successfully or not)
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliverySummary.NextExecutionDate">
            
            The date that the delivery will next be attempted, if the event has not been successfully delivered yet and there are still retries remaining
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliverySummary.RetriesRemaining">
            
            Number of delivery attempts remaining
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliverySummary.UpdateDate">
            
            The date and time the object was updated most recently. The date is in UTC format.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.EventDeliverySummaryCollection">
            
            	Collection of data for event deliveries. Returned content details a summary of actions, events, and results for a delivery event.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliverySummaryCollection.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliverySummaryCollection.PageCount">
            
            The total number of pages of the results divided per the `pageSize`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliverySummaryCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliverySummaryCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventDeliverySummaryCollection.TotalCount">
            
            Total number of objects in am item collection. Total counts are calculated for numerous objects in Mozu, including location inventory, products, options, product types, product reservations, categories, addresses, carriers, tax rates, time zones, and much more.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.EventExtendedProperty">
            
            	Key and value data for an extended property event.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventExtendedProperty.Key">
            
            Key used for metadata defined for objects, including extensible attributes, custom attributes associated with a shipping provider, and search synonyms definitions. This content may be user-defined depending on the object and usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventExtendedProperty.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.EventSummary">
            
            	Properties of events as a summary of actions, data, and responses.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventSummary.CatalogId">
            
            The unique identifier for the product catalog. Catalogs are part of a master catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventSummary.CorrelationId">
            
            The unique identifier of the API request associated with the event action, which might contain multiple actions.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventSummary.CreateDate">
            
            The date time in UTC format set when the object was created. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventSummary.EntityId">
            
            The unique identifier of the entity that caused the event. For example, if the event is "product.created", the entity ID value represents the product code of the product that was created.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventSummary.EventId">
            
            Unique identifier for the event. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventSummary.ExtendedProperties">
            
            Extended properties. Note: This is purposefully not a CollectionBase type wrapper so consumers start to get used to not having counts returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventSummary.MasterCatalogId">
            
            Unique identifier for the master catalog. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventSummary.SiteId">
            
            Unique identifier for the site. This ID is used at all levels of a store, catalog, and tenant to associate objects to a site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventSummary.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventSummary.Topic">
            
            The type of event that was performed, such as "product.created" or "category.deleted".
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.HttpStatus">
            
            	Properties for the HTTP status for an event.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.HttpStatus.Code">
            
            The higher-level integer based HTTP Status Code returned by the remote endpoint
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.HttpStatus.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.SubscribingSite">
            
            	Properties for the site associated with a subscription including audit info, if active, and the unique ID for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.SubscribingSite.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.SubscribingSite.IsActive">
            
            Indicates if the object or feature is active. This indicator is used for subscriptions (at the site or tenant level), customer accounts, products and variations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.SubscribingSite.SiteId">
            
            Unique identifier for the site. This ID is used at all levels of a store, catalog, and tenant to associate objects to a site.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.SubscribingTenant">
            
            	This specifies if a tenant is associated with a subscription.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.SubscribingTenant.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.SubscribingTenant.IsActive">
            
            Indicates if the object or feature is active. This indicator is used for subscriptions (at the site or tenant level), customer accounts, products and variations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.SubscribingTenant.SubscribingContextLevelType">
            
            This specifies the type of subscribing context, which is derived from the state of the subscription. If any subscribing sites exist; for example, a subscription that is not at the tenant level, then the value will be 'site'.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.SubscribingTenant.SubscribingSites">
            
            This specifies the subscribing sites.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.SubscribingTenant.TenantId">
            
            Unique identifier for the tenant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.Subscription">
            
            	The subscription entity used to provide event notifications for third-parties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Subscription.ApiVersion">
            
            ApiVersion
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Subscription.AppId">
            
            Unique identifier of an app available in your Mozu tenant or within Mozu Dev Center. This ID is unique across all apps installed, initialized, and enabled in the Mozu Admin and those in development through the Dev Center Console.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Subscription.Confirmed">
            
            A boolean value that indicates if the subscription endpoint has been confirmed
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Subscription.ContentType">
            
            Content type of the payload that will be delivered.  This is utilized in combination with the notification delivery type.  Example:  A HTTP Post (notification delivery type) is performed with a JSON representation of the event data (content type).
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Subscription.CreateBy">
            
            Identifier of the user that created the object. System created and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Subscription.CreateDate">
            
            The date time in UTC format set when the object was created. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Subscription.Endpoint">
            
            The delivery endpoint that will receive notifications when events concerning the specified topics on the subscription occur.  The format of the endpoint may differ depending on the notification type.  For example, the endpoint may be a URL in some cases and an email address in others if multiple notification types are available.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Subscription.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Subscription.IsActive">
            
            Indicates if the object or feature is active. This indicator is used for subscriptions (at the site or tenant level), customer accounts, products and variations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Subscription.NoCallback">
            
            A boolean value that indicates if events should be delivered that resulted from an API call by the application.  If true, any events that occur as a result of a direct API call by the same application will not be delivered. This can prevent an endless loop in certain scenarios.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Subscription.NotificationDeliveryType">
            
            Notification delivery type which is a string representation of an enumeration of values.  Example: Http (this is case insensitive, so http may also be passed in)
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Subscription.SubscribingTenants">
            
            This is a tenant that is associated with a subscription.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Subscription.Topics">
            
            A list of topics that the subscription relates to
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Subscription.UpdateBy">
            
            Identifier of the user that updated the entity most recently.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Subscription.UpdateDate">
            
            The date and time the object was updated most recently. The date is in UTC format.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.SubscriptionCollection">
            
            	Paged collection subscription entities used to provide event notifications for third-parties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.SubscriptionCollection.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.SubscriptionCollection.PageCount">
            
            The total number of pages of the results divided per the `pageSize`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.SubscriptionCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.SubscriptionCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.SubscriptionCollection.TotalCount">
            
            Total number of objects in am item collection. Total counts are calculated for numerous objects in Mozu, including location inventory, products, options, product types, product reservations, categories, addresses, carriers, tax rates, time zones, and much more.
            
        </member>
        <member name="T:Mozu.Api.Contracts.InstalledApplications.Application">
            
            	Properties of an app installed in a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Application.AppId">
            
            Unique identifier of an app available in your Mozu tenant or within Mozu Dev Center. This ID is unique across all apps installed, initialized, and enabled in the Mozu Admin and those in development through the Dev Center Console.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Application.Capabilities">
            
            List of capabilities installed in a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Application.Enabled">
            
            Indicates if the capability or app is enabled for the tenant/site. If true, the capability/application is enabled for the tenant. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Application.Initialized">
            
            Indicates if an app is initialized and capable of being enabled in the tenant and site. Apps will need to be installed and configured to become initialized, such as validating credentials and/or API keys with a third-party service. If true, the app is initialized and can be enabled for usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Application.IsExtension">
            
            Indicates if the installed application is of type extension. If true, the application type is Extension.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Application.UiConfigurationUrl">
            
            The URL defined for the application that represents the configuration website for the capability. This value is used by installed applications or the site.
            
        </member>
        <member name="T:Mozu.Api.Contracts.InstalledApplications.Capability">
            
            	The enablement mode of the capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Capability.ActiveCreditTypes">
            
            Array list of credit types active for the capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Capability.ActiveShippingCountries">
            
            Array list of the countries (by country code) to which this capability can actively ship. The entered shipping country is validated against a list of supported shipping countries. Messages return if the country code is not supported or duplicated. Supported carriers are also checked per country code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Capability.ActiveShoppingCountries">
            
            Array list of the countries (by country code) for which this capability can actively shop. All active shopping countries must be in the supported shopping country list. Validation rules determine the supported validity of the entered country against the list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Capability.CapabilityMode">
            
            The enablement mode of the capability, typically read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Capability.CapabilityType">
            
            The capability type installed in the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Capability.Enabled">
            
            Indicates if the capability or app is enabled for the tenant/site. If true, the capability/application is enabled for the tenant. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Capability.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Capability.Initialized">
            
            Indicates if an app is initialized and capable of being enabled in the tenant and site. Apps will need to be installed and configured to become initialized, such as validating credentials and/or API keys with a third-party service. If true, the app is initialized and can be enabled for usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Capability.OperationUrls">
            
            Array list of URL endpoints for the operations associated with this capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Capability.ScopeId">
            
            The ID of the specific scope for the object. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Capability.ScopeType">
            
            The scope at which the object exists, such as "Tenant", "MasterCatalog", or "Site". Scope delineates the level and area of Mozu the object exists within or affects.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Capability.SupportedCreditTypes">
            
            List of credit types this capability supports.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Capability.SupportedShippingCountries">
            
            Array list of countries this capability supports for shipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.Capability.SupportedShoppingCountries">
            
            List of countries this capability supports for shopping.
            
        </member>
        <member name="T:Mozu.Api.Contracts.InstalledApplications.CustomFunction">
            
            	Mozu.InstalledApplications.Contracts.CustomFunction ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.CustomFunction.ApplicationKey">
            
            Mozu.InstalledApplications.Contracts.CustomFunction applicationKey ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.CustomFunction.Configuration">
            
            Mozu.InstalledApplications.Contracts.CustomFunction configuration ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.CustomFunction.Enabled">
            
            Indicates if the capability or app is enabled for the tenant/site. If true, the capability/application is enabled for the tenant. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.CustomFunction.ExceptionBehavior">
            
            Mozu.InstalledApplications.Contracts.CustomFunction exceptionBehavior ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.CustomFunction.FunctionId">
            
            Mozu.InstalledApplications.Contracts.CustomFunction functionId ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.CustomFunction.LogLevel">
            
            Mozu.InstalledApplications.Contracts.CustomFunction logLevel ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.CustomFunction.TimeoutMilliseconds">
            
            Mozu.InstalledApplications.Contracts.CustomFunction timeoutMilliseconds ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="T:Mozu.Api.Contracts.InstalledApplications.CustomFunctionsForAction">
            
            	Mozu.InstalledApplications.Contracts.CustomFunctionsForAction ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.CustomFunctionsForAction.ActionId">
            
            Mozu.InstalledApplications.Contracts.CustomFunctionsForAction actionId ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.CustomFunctionsForAction.Contexts">
            
            Mozu.InstalledApplications.Contracts.CustomFunctionsForAction contexts ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="T:Mozu.Api.Contracts.InstalledApplications.CustomFunctionsForContext">
            
            	Mozu.InstalledApplications.Contracts.CustomFunctionsForContext ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.CustomFunctionsForContext.Context">
            
            Mozu.InstalledApplications.Contracts.CustomFunctionsForContext context ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.CustomFunctionsForContext.CustomFunctions">
            
            Mozu.InstalledApplications.Contracts.CustomFunctionsForContext customFunctions ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="T:Mozu.Api.Contracts.InstalledApplications.ExtensionConfiguration">
            
            	Mozu.InstalledApplications.Contracts.ExtensionConfiguration ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.ExtensionConfiguration.ApplicationKey">
            
            Mozu.InstalledApplications.Contracts.ExtensionConfiguration applicationKey ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.ExtensionConfiguration.Configuration">
            
            Mozu.InstalledApplications.Contracts.ExtensionConfiguration configuration ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="T:Mozu.Api.Contracts.InstalledApplications.TenantExtensions">
            
            	Mozu.InstalledApplications.Contracts.TenantExtensions ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.TenantExtensions.Actions">
            
            Mozu.InstalledApplications.Contracts.TenantExtensions actions ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.TenantExtensions.Configurations">
            
            Mozu.InstalledApplications.Contracts.TenantExtensions configurations ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.InstalledApplications.TenantExtensions.DefaultLogLevel">
            
            Mozu.InstalledApplications.Contracts.TenantExtensions defaultLogLevel ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.Coordinates">
            
            	Properties of the geographical coordinates associated with a specific location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Coordinates.Lat">
            
            The latitude coordinate of the location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Coordinates.Lng">
            
            The longitude coordinate of the location.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.FulfillmentType">
            
            	Properties of a method used to fulfill items for an order. Fulfillment types are system-supplied, and include direct ship (DS) or in-store pickup (SP) at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.FulfillmentType.Code">
            
            The system-supplied code that identifies the fulfillment type, which is "DS" for direct ship or "SP" for in-store pickup.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.FulfillmentType.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.Hours">
            
            	Container for the label that describes the range of operating hours for a location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Hours.Label">
            
            Descriptive text used as a label for objects, such as field names, facets, date ranges, contact information, and package information.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.Location">
            
            	Properties of a physical location a tenant uses to manage inventory and fulfills orders, provide store finder functionality, or both.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Address">
            
            All address information for the contact. This data is used to validate the address for the customer account and includes the full address.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.AllowFulfillmentWithNoStock">
            
            Allow fullfillment with no (or less) stock
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Code">
            
            User-defined code to assign to this location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Description">
            
            The localized description in text for the object, displayed per the locale code. For example, descriptions are used for product descriptions, attributes, and pre-authorization transaction types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Fax">
            
            The fax number associated with this location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.FulfillmentTypes">
            
            List of order fulfillment types associated with this location. The location can have fulfillment types of direct ship (DS), in-store pickup (SP), or both.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Geo">
            
            The geographical coordinates associated with this location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.IsDisabled">
            
            Locations is disabled (soft delete)
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.LocationTypes">
            
            List of location types associated with this location. You can associate individual locations with any number of location types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Note">
            
            User-entered notation content for an object, used to save information such as payment, return, account, and order notes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Phone">
            
            The phone number associated with this location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.RegularHours">
            
            List of standard operating hours for each day of the week this location is open for shopper business.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.ShippingOriginContact">
            
            Properties of a fulfillment contact for the shipping origin address associated with a location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.SupportsInventory">
            
            If true, this location maintains its own product inventory. If the location uses the direct ship fulfillment type, it must also support inventory.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Tags">
            
            List of tenant-defined tags associated with this location.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.LocationCollection">
            
            	A list of physical locations defined for a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.LocationType">
            
            	Properties of a type of physical location, such as warehouse or kiosk. Location types enable tenants to group similar locations for filtering and location usage type definition.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationType.Code">
            
            User-defined identifying code for the location type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationType.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.LocationUsage">
            
            	Configuration properties of a location usage type for a specified site. The direct ship location usage type consists of a single location that represents location that supports direct ship (DS) fulfillment. The in-store pickup location usage type consists of a list of location types that represent locations that support in-store pickup (SP) fulfillment. The store finder location usage type consists of a list of location codes, location types, or both.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationUsage.LocationCodes">
            
            List of location codes to associate with the location usage. At this time, you can only specify one location code in the request for the direct ship location usage type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationUsage.LocationTypeCodes">
            
            List of location type codes associated with the location usage. The location service identifies the locations of the designated type. The in-store pickup (SP) and store finder (storeFinder) location usage types allow specification or multiple location type codes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationUsage.LocationUsageTypeCode">
            
            The system-defined code used to identify the location usage type, which is "DS" for direct ship, "SP" for in-store pickup, or "storeFinder".
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.LocationUsageCollection">
            
            	Properties of the location usage for direct ship, in-store pickup, or the store finder.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationUsageCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationUsageCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.RegularHours">
            
            	Array list of standard operating hours for each day of the week this location is open for shopper business.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.RegularHours.Friday">
            
            The Friday label array describes the range of hours this location is normally open on Fridays. For example: {"Label": "10:00 AM - 6:00 PM"}.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.RegularHours.Monday">
            
            The Monday label array describes the range of hours this location is normally open on Mondays. For example: {"Label": "10:00 AM - 6:00 PM"}.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.RegularHours.Saturday">
            
            The Saturday label array describes the range of hours this location is normally open on Saturdays. For example: {"Label": "10:00 AM - 6:00 PM"}.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.RegularHours.Sunday">
            
            The Sunday label array describes the range of hours this location is normally open on Sundays. For example: {"Label": "10:00 AM - 6:00 PM"}.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.RegularHours.Thursday">
            
            The Thursday label array describes the range of hours this location is normally open on Thursdays. For example: {"Label": "10:00 AM - 6:00 PM"}.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.RegularHours.Tuesday">
            
            The Tuesday label array describes the range of hours this location is normally open on Tuesdays. For example: {"Label": "10:00 AM - 6:00 PM"}.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.RegularHours.Wednesday">
            
            The Wednesday label array describes the range of hours this location is normally open on Wednesdays. For example: {"Label": "10:00 AM - 6:00 PM"}.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.ShippingOriginContact">
            
            	Properties of a fulfillment contact for the shipping origin address associated with a location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.ShippingOriginContact.CompanyOrOrganization">
            
            The legal or doing business as (DBA) or tradestyle name of the business or organization. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.ShippingOriginContact.Email">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.ShippingOriginContact.FirstName">
            
            The full first name of a customer or contact name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.ShippingOriginContact.LastNameOrSurname">
            
            The full last name or surname of a customer or contact name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.ShippingOriginContact.MiddleNameOrInitial">
            
            Character string of the middle name or initial for the customer.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.ShippingOriginContact.PhoneNumber">
            
            Collection of phone numbers associated with the shipping origin contact.
            
        </member>
        <member name="T:Mozu.Api.Contracts.MZDB.EntityCollection">
            
            	Paged collection of entities.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityCollection.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityCollection.PageCount">
            
            The total number of pages of the results divided per the `pageSize`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityCollection.TotalCount">
            
            Total number of objects in am item collection. Total counts are calculated for numerous objects in Mozu, including location inventory, products, options, product types, product reservations, categories, addresses, carriers, tax rates, time zones, and much more.
            
        </member>
        <member name="T:Mozu.Api.Contracts.MZDB.EntityContainer">
            
            	Properties of the EntityContainer within a specific tenant and site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainer.CatalogId">
            
            The unique identifier for the product catalog. Catalogs are part of a master catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainer.CreateBy">
            
            Identifier of the user that created the object. System created and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainer.CreateDate">
            
            The date time in UTC format set when the object was created. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainer.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainer.Item">
            
            The entity in JSON format.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainer.ListFullName">
            
            The nameSpace and name for the EntityList in the format name@nameSpace.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainer.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainer.MasterCatalogId">
            
            Unique identifier for the master catalog. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainer.SiteId">
            
            Unique identifier for the site. This ID is used at all levels of a store, catalog, and tenant to associate objects to a site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainer.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainer.UpdateBy">
            
            Identifier of the user that updated the entity most recently.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainer.UpdateDate">
            
            The date and time the object was updated most recently. The date is in UTC format.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainer.UserId">
            
            Unique identifier of the customer account (shopper or system user). System-supplied and read-only. If the shopper user is anonymous, the user ID represents a system-generated user ID string.
            
        </member>
        <member name="T:Mozu.Api.Contracts.MZDB.EntityContainerCollection">
            
            	Paged collection of EntityContainers within a specific tenant and site. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainerCollection.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainerCollection.PageCount">
            
            The total number of pages of the results divided per the `pageSize`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainerCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainerCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityContainerCollection.TotalCount">
            
            Total number of objects in am item collection. Total counts are calculated for numerous objects in Mozu, including location inventory, products, options, product types, product reservations, categories, addresses, carriers, tax rates, time zones, and much more.
            
        </member>
        <member name="T:Mozu.Api.Contracts.MZDB.EntityList">
            
            	The definition of an MZDB EntityList which describes the characteristics of the EntityList on a per tenant basis. EntityLists are created at the tenant level, but instances of the EntityLists are implicitly created at the appropriate context level as entities are added or removed from the EntityList.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.ContextLevel">
            
            At which context level are entities stored in the list. Possible values are "tenant", "site", "masterCatalog" or "catalog".  Each list instance will exist at this context level for the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.CreateDate">
            
            The date time in UTC format set when the object was created. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.IdProperty">
            
            An IndexedProperty defintion which indicates the property on every entity provided should be used as the unique identifier for the document. Within an EntityList instance each entity must have a unique identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.IndexA">
            
            An IndexedProperty defintion which indicates a property on every entity provided that should be indexed to enable querying and sorting.  Non-indexed properties may be used in queries as long as at least one indexed property is also provided in the query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.IndexB">
            
            An IndexedProperty defintion which indicates a property on every entity provided that should be indexed to enable querying and sorting.  Non-indexed properties may be used in queries as long as at least one indexed property is also provided in the query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.IndexC">
            
            An IndexedProperty defintion which indicates a property on every entity provided that should be indexed to enable querying and sorting.  Non-indexed properties may be used in queries as long as at least one indexed property is also provided in the query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.IndexD">
            
            An IndexedProperty defintion which indicates a property on every entity provided that should be indexed to enable querying and sorting.  Non-indexed properties may be used in queries as long as at least one indexed property is also provided in the query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.IsLocaleSpecific">
            
            Indicates whether MZDB should store entities in the EntityList instance specific to the localeCode provided.  If true, all operations on the EntityList will be filtered by the provided localeCode on the request or using the defautLocaleCode for the context.  All entities created in the EntityList will be stored with the localeCode provided on the request or the defautLocaleCode for the context as an additional implicit key. The default value is false.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.IsSandboxDataCloningSupported">
            
            Indicates whether MZDB should clone all of the Entities in the EntityList when cloning an existing sandbox for which this list is already defined.  The default value is false.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.IsShopperSpecific">
            
            Indicates whether MZDB should store entities in the EntityList instance specific to the current shopper on the request.  If true, all operations on the EntityList will be filtered by the id of the shopper from the shopper claims provided on the request.  All entities created in the EntityList will be stored with the id of the shopper from the shopper claims provided on the request as an additional implicit key. The default value is false.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.IsVisibleInStorefront">
            
            Indicates whether Enitities in the EntityList are allowed to be accessed from a Mozu storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.Metadata">
            
            Metadata content for entities, used by document lists, document type lists, document type, views, entity lists, and list views.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.NameSpace">
            
            If applicable, the registered namespace associated with objects, used to generate the fully qualified name. If no namespace is defined, the namespace associated with the tenant is automatically assigned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.UpdateDate">
            
            The date and time the object was updated most recently. The date is in UTC format.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.Usages">
            
            List description of usages for content within a view and scope.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.UseSystemAssignedId">
            
            Indicates whether or not Mozu should assign a generated identifier for each entity in the list or whether a unique identifier will be provided for each identity. If set to false, then a value must be provided for the IdProperty for the list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityList.Views">
            
            The view in the site used by associated entities or document lists/list types.
            
        </member>
        <member name="T:Mozu.Api.Contracts.MZDB.EntityListCollection">
            
            	Paged collection of EntityLists.  EntityLists are created at the tenant level, but instances of the EntityLists are implicitly created at the appropriate context level as entities are added or removed from the EntityList.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityListCollection.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityListCollection.PageCount">
            
            The total number of pages of the results divided per the `pageSize`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityListCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityListCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.EntityListCollection.TotalCount">
            
            Total number of objects in am item collection. Total counts are calculated for numerous objects in Mozu, including location inventory, products, options, product types, product reservations, categories, addresses, carriers, tax rates, time zones, and much more.
            
        </member>
        <member name="T:Mozu.Api.Contracts.MZDB.IndexedProperty">
            
            	Data for indexed properties within the database.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.IndexedProperty.DataType">
            
            The data type of the source product property, typically of type Bool, DateTime, Number, or String.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.IndexedProperty.PropertyName">
            
            A JPath query indicating the property that should be indexed to enable querying and sorting.  Non-indexed properties may be used in queries as long as at least one indexed property is also provided in the query.
            
        </member>
        <member name="T:Mozu.Api.Contracts.MZDB.ListView">
            
            	Properties for the list view that specifies what fields and content display per page load. All associated fields in the list view correspond with object data.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.ListView.DefaultSort">
            
            Sets the default sorting for content. Sort does not use AND in determining the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.ListView.Fields">
            
            The list of fields to display for a view or an associated schema. For example, the address schema would display fields for postal addresses.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.ListView.Filter">
            
            A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.ListView.MetaData">
            
            Metadata content for entities, used by document lists, document type lists, document type, views, entity lists, and list views.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.ListView.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.ListView.Security">
            
            Indicates the security level for the document content as public, administrator, or owner.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.ListView.Usages">
            
            List description of usages for content within a view and scope.
            
        </member>
        <member name="T:Mozu.Api.Contracts.MZDB.ListViewCollection">
            
            	Paged collection of ListViews. Properties for the list view specify what fields and content display per page load. All associated fields in the list view correspond with object data.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.ListViewCollection.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.ListViewCollection.PageCount">
            
            The total number of pages of the results divided per the `pageSize`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.ListViewCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.ListViewCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.ListViewCollection.TotalCount">
            
            Total number of objects in am item collection. Total counts are calculated for numerous objects in Mozu, including location inventory, products, options, product types, product reservations, categories, addresses, carriers, tax rates, time zones, and much more.
            
        </member>
        <member name="T:Mozu.Api.Contracts.MZDB.ListViewField">
            
            	Properties for the field associated to a view.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.ListViewField.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.ListViewField.Target">
            
            Targets represent the object, such as an item to apply discounts (products or orders) or a view field for content. When accessing MZDB APIs for Mongo interactions, targets are the dot notation that links to the source document property. For example, firstitem for the direc level or firstitem.seconditem.thirditem for a deeper property.              
            
        </member>
        <member name="P:Mozu.Api.Contracts.MZDB.ListViewField.Type">
            
            The datatype of the field. Valid values are "string", "integer", "decimal", "date", "bool".
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.GatewayAccount">
            
            	Account information for the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayAccount.CountryCode">
            
            The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayAccount.CredentialFields">
            
            List of credential fields for the payment gateway account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayAccount.GatewayDefinitionId">
            
            Identifier of the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayAccount.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayAccount.IsActive">
            
            Indicates if the object or feature is active. This indicator is used for subscriptions (at the site or tenant level), customer accounts, products and variations.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldDefinition">
            
            	Properties of the credential fields associated with the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldDefinition.AdminDisplayOrder">
            
            The sequential display order of the gateway in Mozu Admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldDefinition.DisplayName">
            
            The name that displays for the payment gateway or third-party credentials field. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldDefinition.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldDefinition.VolusionStoreName">
            
            The name of the Volusion store.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldValue">
            
            	Field value information for the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldValue.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldValue.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.GatewayDefinition">
            
            	Properties of the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.CountryCode">
            
            The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.CredentialDefinitions">
            
            Credential fields for the payment gateway. For security purposes, Mozu does not return these credential fields.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.IntegrationImplTypeName">
            
            The implementing type name of the integration with the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.PreAuthorizeDefinition">
            
            Definition of the preauthorization gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.ProdServiceURL">
            
            URL of the production payment service.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.SupportedCards">
            
            The types of credit cards supported by the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.TestServiceURL">
            
            URL of the test payment service environment.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.PreAuthorizeDefinition">
            
            	Definition of the preauthorization gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeDefinition.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeDefinition.PreAuthorizeProdUrl">
            
            The product environment URL associated with the preauthorization gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeDefinition.PreAuthorizeTestUrl">
            
            The test environment URL associated with the preauthorization gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeDefinition.Type">
            
            The type of preauthorization gateway.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.PreAuthorizeTransactionTypeDataContract">
            
            	The type of preauthorization gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeTransactionTypeDataContract.Description">
            
            The localized description in text for the object, displayed per the locale code. For example, descriptions are used for product descriptions, attributes, and pre-authorization transaction types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeTransactionTypeDataContract.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeTransactionTypeDataContract.Type">
            
            The type of preauthorization transaction.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.PublicCard">
            
            	Mozu.PaymentService.Contracts.PublicCard ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PublicCard.CardHolderName">
            
            Mozu.PaymentService.Contracts.PublicCard cardHolderName ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PublicCard.CardIssueMonth">
            
            Mozu.PaymentService.Contracts.PublicCard cardIssueMonth ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PublicCard.CardIssueNumber">
            
            For Amex Cards, this is an additional field for verification that is used in conjunction with a CVV
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PublicCard.CardIssueYear">
            
            Mozu.PaymentService.Contracts.PublicCard cardIssueYear ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PublicCard.CardNumber">
            
            This is the full number of the card.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PublicCard.CardType">
            
            Mozu.PaymentService.Contracts.PublicCard cardType ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PublicCard.Cvv">
            
            Mozu.PaymentService.Contracts.PublicCard cvv ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PublicCard.ExpireMonth">
            
            The two-digit month a credit card expires for a payment method.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PublicCard.ExpireYear">
            
            The four-digit year the credit card expires for a payment method.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.Response.SyncResponse">
            
            	Mozu.PaymentService.Contracts.Response.SyncResponse ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.Response.SyncResponse.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.Response.SyncResponse.IsSuccessful">
            
            Mozu.PaymentService.Contracts.Response.SyncResponse isSuccessful ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.Response.SyncResponse.NumberPart">
            
            Credit card Number Part
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.SupportedCard">
            
            	Properties of a supported credit card for the site's payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.SupportedCard.FriendlyName">
            
            Company-defined friendly name that identifies the supported card.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.SupportedCard.Type">
            
            The card type of the supported payment card, such as Visa or Amex.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ProductAttribute">
            
            	Details of the product attribute, such its name and description.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductAttribute.DataType">
            
            The data type of the source product property, typically of type Bool, DateTime, Number, or String.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductAttribute.Description">
            
            The localized description in text for the object, displayed per the locale code. For example, descriptions are used for product descriptions, attributes, and pre-authorization transaction types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductAttribute.InputType">
            
            The type of input selection used to define a value for the attribute, including Yes/No, Date, DateTime, List, TextBox, or TextArea.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductAttribute.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductAttribute.ValueType">
            
            An attribute value type is either predefined vocabulary by the admin during attribute set up or user-defined with an appropriate type (AdminEntered or ShopperEntered depending on the user). These types are used by products and attributes. The difference between predefined values versus manually entered values is such that the first choice is a set of options to choose from. AdminEntered and ShopperEntered are values that are entered rather than system-supplied and are not stored in the database, but captured during a live commerce operations such as during an order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ProductProperty">
            
            	Details of a property defined for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductProperty.AttributeDetail">
            
            Detail data for a product or product options attribute. This acts as a wrapper for the properties to configure or generate from the system in the product Admin. Properties may include namespace, attribute code, attribute sequence, site group ID, input type, and value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductProperty.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductProperty.IsHidden">
            
            Indicates if the object is hidden or breaks inheritance, primarily used by facets, products, and attribute vocabulary values. For example, if true, the attribute vocabulary value does not appear in the list when defining a value for an attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductProperty.IsMultiValue">
            
            Indicates if the object has or can have multiple properties or values. If true, the object can have more than one value, selectable by shoppers through the storefront or configurable through the catalogs. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductProperty.Values">
            
            List of value data for objects.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ProductPropertyValue">
            
            	Properties of a value for a product property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductPropertyValue.StringValue">
            
            If the object value is a String, this value provides that string value, used by vocabulary property values, products, and options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductPropertyValue.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem">
            
            	Properties of a line item in an order that is subject to tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.IsTaxable">
            
            Indicates if the item is subject to taxation, used by products, options, extras, cart and order items, line items, and wish lists. If true, the entity is subject to tax based on the relevant tax rate and rules.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.LineItemPrice">
            
            The sale price of the line item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.ProductName">
            
            The name of the product that represents a line item in a taxable order or product bundle.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.ProductProperties">
            
            Properties of the product that represents the line item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.Reason">
            
            The reason description for an action, including item return, coupon not valid, and item is taxed. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.ShippingAmount">
            
            The calculated monetary amount of shipping for a line items within and an entire order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.TaxableOrder">
            
            	Properties of an order to calculate tax against. When a tax capability is enabled for a tenant, Mozu sends the `TaxableOrder `properties to the capability as read-only, system-supplied information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.HandlingFee">
            
            The combined price for all handling costs calculated together for shipped orders, not for digital or in-store pickup. This includes all handling costs per the product line items and options, excluding taxes and discounts. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.LineItems">
            
            List of line items associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.OrderDate">
            
            The date and time the order was submitted for purchase. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.OriginalDocumentCode">
            
            The unique identifier of the original order, used to track order changes for tax purposes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.OriginalOrderDate">
            
            The date and time the original order was placed. This date is set when the order is submitted with payment. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.ShippingAmount">
            
            The calculated monetary amount of shipping for a line items within and an entire order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.TaxContext">
            
            The tax properties associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.TaxRequestType">
            
            The type of request for which to tax this entity, which is Order or Return.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.TaxContext">
            
            	The tax properties associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxContext.CustomerId">
            
            Unique identifier of the customer in Mozu, used to associate customers with data, orders, returns, and in-store credit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxContext.DestinationAddress">
            
            The physical address orders are sent to as a shipping destination. This address may contain multiple lines, city, state/province, country, and zip/postal code. The destination is used to calculate shipping costs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxContext.OriginAddress">
            
            The physical address from which the order or shipment will ship.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxContext.TaxContextId">
            
            Unique identifier of the tax context.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxContext.TaxExemptId">
            
            If the order is exempt from sales tax, the unique identifier of the tax exempt entity.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ThirdParty.ItemTaxContext">
            
            	Properties of the tax context applicable for line items in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.ItemTaxContext.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.ItemTaxContext.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.ItemTaxContext.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.ItemTaxContext.ShippingTax">
            
            Amount of tax applied to shipping costs for line items in and entire orders.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.ItemTaxContext.Tax">
            
            The total tax amount applied to the line item in the order, minus any shipping taxes.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ThirdParty.OrderTaxContext">
            
            	Properties of the tax context applicable for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.OrderTaxContext.HandlingFeeTax">
            
            Tax amount applied to the handling fee defined for orders on this site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.OrderTaxContext.ItemTaxContexts">
            
            Properties of the tax context applicable for line items in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.OrderTaxContext.OrderTax">
            
            Tax amount applied to the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.OrderTaxContext.ShippingTax">
            
            Amount of tax applied to shipping costs for line items in and entire orders.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder">
            
            	Properties of an order for which to calculate tax. When a tax capability is enabled for a tenant, Mozu sends the `TaxableOrder `properties to the capability as read-only, system-supplied information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.HandlingFee">
            
            The combined price for all handling costs calculated together for shipped orders, not for digital or in-store pickup. This includes all handling costs per the product line items and options, excluding taxes and discounts. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.LineItems">
            
            List of line items associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.OrderDate">
            
            The date and time the order was submitted for purchase. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.OriginalDocumentCode">
            
            The unique identifier of the original order, used to track order changes for tax purposes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.OriginalOrderDate">
            
            The date and time the original order was placed. This date is set when the order is submitted with payment. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.ShippingAmount">
            
            The calculated monetary amount of shipping for a line items within and an entire order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.TaxContext">
            
            The tax properties associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.TaxRequestType">
            
            The type of request for which to tax this entity, which is Order or Return.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxContext">
            
            	Properties of the taxable context associated with the order or return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxContext.CustomerId">
            
            Unique identifier of the customer in Mozu, used to associate customers with data, orders, returns, and in-store credit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxContext.DestinationAddress">
            
            The physical address orders are sent to as a shipping destination. This address may contain multiple lines, city, state/province, country, and zip/postal code. The destination is used to calculate shipping costs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxContext.OriginAddress">
            
            The physical address from which the order or shipment will ship.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxContext.TaxContextId">
            
            Unique identifier of the tax context.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxContext.TaxExemptId">
            
            If the order is exempt from sales tax, the unique identifier of the tax exempt entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxContext.TaxShipping">
            
            The taxable amount that can be levied against shipping charges.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Attribute">
            
            	Properties of an attribute used to describe customers or orders.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AdminName">
            
            The administrator name associated with the object/data.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AttributeCode">
            
            Merchant-defined code for an extensible attribute. This code may be used to generate an object's fully qualified name, such as for products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AttributeDataTypeSequence">
            
            Generated sequence that increments for each attribute and data type combination created. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AttributeMetadata">
            
            List of metadata key-value pairs defined for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AttributeSequence">
            
            Generated sequence that increments for each product attribute created. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.DataType">
            
            The data type of the source product property, typically of type Bool, DateTime, Number, or String.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.InputType">
            
            The type of input selection used to define a value for the attribute, including Yes/No, Date, DateTime, List, TextBox, or TextArea.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.IsExtra">
            
            If true, the product attribute is an add-on configuration made by the shopper that does not represent a product variation, such as a monogram.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.IsOption">
            
            If true, the product attribute is a merchant- or shopper-configurable option, such as size or color, that represents a product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.IsProperty">
            
            If true, the product attribute describes aspects of the product that do not represent an option configurable by the shopper, such as screen resolution or brand.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.LocalizedContent">
            
            The localized content of an attribute determined by the `localeCode`. This content is always in the default language of the MasterCatalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.MasterCatalogId">
            
            The unique identifier of the master catalog associated with the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.Namespace">
            
            If applicable, the registered namespace associated with objects, used to generate the fully qualified name. If no namespace is defined, the namespace associated with the tenant is automatically assigned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.SearchSettings">
            
            This API type provides the search and indexing settings for the attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.Validation">
            
            Properties used when validating a value entered for an object, including extensible attributes, products attributes, and database entries.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.ValueType">
            
            An attribute value type is either predefined vocabulary by the admin during attribute set up or user-defined with an appropriate type (AdminEntered or ShopperEntered depending on the user). These types are used by products and attributes. The difference between predefined values versus manually entered values is such that the first choice is a set of options to choose from. AdminEntered and ShopperEntered are values that are entered rather than system-supplied and are not stored in the database, but captured during a live commerce operations such as during an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.VocabularyValues">
            
            List of valid vocabulary values defined for an attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeCollection">
            
            	Array list of customer or order attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType">
            
            	Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.AttributeDetail">
            
            Detail data for a product or product options attribute. This acts as a wrapper for the properties to configure or generate from the system in the product Admin. Properties may include namespace, attribute code, attribute sequence, site group ID, input type, and value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.DisplayInfo">
            
            Defines the intended display of this attribute in the storefront. Options include Drop Down, Image Picker, and Radio Buttons.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.IsAdminOnlyProperty">
            
            If true, this property is not available on the storefront. If false, this property will be available on storefront. The IsHiddenProperty hides the property from the customer, but is still available from the API.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.IsHiddenProperty">
            
            If true, this property is hidden on the storefront. If false, this property is not hidden from the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.IsInheritedFromBaseType">
            
            If true, this entity is inherited from the base type. If false, this entity is not inherited from the base type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.IsMultiValueProperty">
            
            If true, this attribute has more than one possible value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.IsRequiredByAdmin">
            
            If true, the entity is required by the admin. If false, the entity is not required by the admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.Order">
            
            Integer that represents the sequence order of the attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.VocabularyValues">
            
            List of valid vocabulary values defined for an attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductTypeDisplayInfo">
            
            	Properties for the intended view of the product attribute in the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductTypeDisplayInfo.DisplayIntention">
            
            Defines the intended display of this attribute in the storefront. Options include Drop Down, Image Picker, and Radio Buttons.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent">
            
            	The localized name and description of the attribute, displayed in the locale defined for the master catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent.Description">
            
            The localized description in text for the object, displayed per the locale code. For example, descriptions are used for product descriptions, attributes, and pre-authorization transaction types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeMetadataItem">
            
            	Properties of a metadata item defined for an attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeMetadataItem.Key">
            
            Key used for metadata defined for objects, including extensible attributes, custom attributes associated with a shipping provider, and search synonyms definitions. This content may be user-defined depending on the object and usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeMetadataItem.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeSearchSettings">
            
            	Attribute search settings are a container for all of the search and indexing settings of an attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeSearchSettings.SearchableInAdmin">
            
            Indicates whether the attribute value is searchable in the merchant catalog admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeSearchSettings.SearchableInStorefront">
            
            Indicates if the attribute value is searchable on the public storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeSearchSettings.SearchDisplayValue">
            
            Indicates what kind of values search queries and returns. If true, the system indexes the display value of string attributes instead of the canonical value for searching. Always use the canonical value for filtering. This does not apply for non-string attributes.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRule">
            
            	Properties of the attribute type rule.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRule.AttributeDataType">
            
            The data type of the attribute. There are four valid data types: "Bool", "DateTime", "Number", "String"
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRule.AttributeInputType">
            
            An attribute's data type would be either "NotSpecified", "Textbox", "Textarea", "Date", "DateTime", "Dropdown", "Listbox", "Radio", "Currency", or "Checkbox" and will be a valid value defined in the type rules resource.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRule.AttributeUsageType">
            
            Describes how an attribute will be used. Valid types are "Extra", "Option", and "Property".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRule.AttributeValueType">
            
            An attribute value type is either predefined vocabulary by the admin during product attribute set up or it can be "AdminEntered" or "ShopperEntered". The difference between predefined values versus manually entered values is such that the first choice is a set of options to choose from. AdminEntered and ShopperEntered are values that are entered rather than system-supplied and are not stored in the database, but captured during a live commerce operations such as during an order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection">
            
            	Collection of attribute type rules.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeValidation">
            
            	Validates the attribute configured for the customer in the storefront against the attribute configured in Mozu admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MaxDateValue">
            
            The maximum date allowed including month, day, and year. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MaxNumericValue">
            
            The maximum number that can be entered as a value for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MaxStringLength">
            
            The maximum character length possible for a string value entered for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MinDateValue">
            
            The minimum date allowed including month, day, and year. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MinNumericValue">
            
            The minimum numeric value required to validate an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MinStringLength">
            
            The minimum character length possible for a string value entered for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.RegularExpression">
            
            Regular expression used to process and validate an extensible attribute value that require special formatting, such as phone numbers.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue">
            
            	Properties of a vocabulary value defined for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue.LocalizedContent">
            
            The localized content of an attribute determined by the `localeCode`. This content is always in the default language of the MasterCatalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue.ValueSequence">
            
            The number that denotes the order of the entity value within a list of entity values.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueDisplayInfo">
            
            	Provides the display information for attribute vocabulary values. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueDisplayInfo.CmsId">
            
            The identifier of the image in the Mozu CMS. Supply a value for either the CMS ID or Image URL parameter.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueDisplayInfo.ColorValue">
            
            Hex value for a color to display in a color picker. This is an HTML supported code for color.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueDisplayInfo.ImageUrl">
            
            The URL link for the image file associated with a product or category.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueInProductType">
            
            	The actual vocabulary value of the attribute that exists as a part of the product type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueInProductType.DisplayInfo">
            
            Defines the intended display of this attribute in the storefront. Options include Drop Down, Image Picker, and Radio Buttons.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueInProductType.Order">
            
            Integer that represents the sequence order of the attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueInProductType.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueInProductType.VocabularyValueDetail">
            
            Navigates vocabulary value details for an attribute defined for a product type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent">
            
            	The localized text for the string value of a product attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent.StringValue">
            
            If the object value is a String, this value provides that string value, used by vocabulary property values, products, and options.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.BundledProduct">
            
            	Properties of a component product in a product bundle. A product bundle can represent either a collection of multiple products sold as a single entity, or a collection of the same product sold as a package. For example, a 10-pack of socks.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.FulfillmentTypesSupported">
            
            List of supported types of fulfillment  for the product or variation. The types include direct ship, in-store pickup, or both. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.PackageHeight">
            
            Height of a package or bundle package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.PackageLength">
            
            Length of a package or bundle package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.PackageWeight">
            
            Weight of a package or bundle package in imperial units of pounds and ounces.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.PackageWidth">
            
            Width of a package or bundle package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.Price">
            
            The price of the bundled product set for the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.ProductName">
            
            The name of the product that represents a line item in a taxable order or product bundle.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Category">
            
            	A descriptive container that groups products. A category is merchant defined with associated products and discounts as configured. GThe storefront displays products in a hierarchy of categories. As such, categories can include a nesting of sub-categories to organize products and product options per set guidelines such as color, brand, material, and size.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.CategoryCode">
            
            External unique identifier of the category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.ChildCount">
            
            The number of children (subcategories, for example) that stem from a parent (top-level category).
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.IsDisplayed">
            
            Indicates if the object is displayed on the storefront. If true, the admin product category is displayed in the store. If true, the category is not displayed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.ParentCategoryId">
            
            Identifier of the parent or top-level category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.ProductCount">
            
            The total number of products. This total may indicate the total products associate with a product type or number of products in a list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.Sequence">
            
            The numeric order of objects, used by a vocabulary value defined for an extensible attribute, images, and categories.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.CategoryCollection">
            
            	The container for a non-paged list of related site-specific product category properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.CategoryDiscountCondition">
            
            	Properties of the conditions that must be met for a discount to apply to a product category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryDiscountCondition.CategoryId">
            
            Unique identifier of a category. 
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent">
            
            	The container for category properties that are shown in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.CategoryImages">
            
            Array list of media images associated to a product category. These images may be localized in the language specified by the LocaleCode. Images display with the category on the storefront according to the code and formatting of your site theme. Each image includes the name, alt text, and URL location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.Description">
            
            The localized description in text for the object, displayed per the locale code. For example, descriptions are used for product descriptions, attributes, and pre-authorization transaction types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.MetaTagDescription">
            
            Description defined for metadata, used to interally manage data, in the language specified by the `localeCode`. This content is used by categories, products, localized content, and SEO content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.MetaTagKeywords">
            
            Keywords defined for  metadata, used to internally manage data, in the language specified by the `localeCode`. Keywords are used by content for categories, products, localized content, and SEO content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.MetaTagTitle">
            
            Title defined for  metadata, used to internally manage data, in the language specified by the `localeCode`. Titles are used by content for categories, products, localized content, and SEO content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.PageTitle">
            
            Title that appears on new product category pages, in the language specified by the `localeCode`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.Slug">
            
            Slug is used in place of a name, code, or ID to give an SEO, human-friendly URL link for an object, used by categories.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage">
            
            	The localized product category image in the language specified by the LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.AltText">
            
            Descriptive text associated with the image or video that appears on the web storefront. This text displays on a hover-over in the browser, providing further information on the content displayed. The alternate text should be plain alphanumeric text without special characters or HTML coding.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.CmsId">
            
            The identifier of the image in the Mozu CMS. Supply a value for either the CMS ID or Image URL parameter.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.ImageLabel">
            
            The localized title for an image that displays on the storefront. If localized, the displayed content is set per the locale code for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.ImageUrl">
            
            The URL link for the image file associated with a product or category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.MediaType">
            
            Type of media specification required to successfully render the image, video, or other media content for products and categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.Sequence">
            
            The numeric order of objects, used by a vocabulary value defined for an extensible attribute, images, and categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.VideoUrl">
            
            The URL of a video files for a product or category. The path name is set in the language specified by the LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection">
            
            	The container for paged lists of related site-specific product category properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.CustomerSegment">
            
            	The Customer Segment object includes properties of a defined customer segment used to group customer accounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CustomerSegment.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Discount">
            
            	Name of the discount added and applied to a shopping cart and order for a shopper's purchase. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Amount">
            
            The integer amount of the discount. For example, an entry of "10" could represent a discount of $10.00 or a discount of 10%, depending on the type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.AmountType">
            
            The type of discount amount, such as an amount or a percentage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.CanBeDeleted">
            
            Signifies that the discount is not referenced and can be hard deleted
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Conditions">
            
            List of conditions that must be met for the discount to apply.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.CurrentRedemptionCount">
            
            The number of times this discount has been redeemed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.DoesNotApplyToProductsWithSalePrice">
            
            Determines whether or not a discount applies to a items with a sale price. Applicable on order and line item discounts. For line items, when this is true, the discount will be disqualified. For order level discounts, when true, the discount will not be applied to those items have a sale price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.DoesNotApplyToSalePrice">
            
            If true, this discount does not apply to a line item product with a defined sale price. The default is false, which applies the discount to products with and without defined sale prices.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.MaximumDiscountImpactPerOrder">
            
            Maximum impact this discount can apply on a single order. Must be either null or greater than zero.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.MaximumDiscountImpactPerRedemption">
            
            Maximum impact this discount can apply on a single line item. Must be either null or greater than zero.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.MaximumRedemptionsPerOrder">
            
            Maximum number of redemptions allowed per order. If null, defaults to unlimited.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.MaximumUsesPerUser">
            
            The maximum number of times an individual shopper can redeem the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Scope">
            
            The scope to which the discount applies, which is "Order" for order discounts or "LineItem" for individual product discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Status">
            
            The current status of an object. This status is specific to the object including payment (New, Authorized, Captured, Declined, Failed, Voided, Credited, CheckRequested, or RolledBack), discount (Active, Scheduled, or Expired), returns (ReturnAuthorized), tenant, package (Fulfilled or NotFulfilled), application, master and product catalogs, orders (Pending, Submitted, Processing, Pending Review, Closed, or Canceled), and order validation results (Pass, Fail, Error, or Review).
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Target">
            
            Targets represent the object, such as an item to apply discounts (products or orders) or a view field for content. When accessing MZDB APIs for Mongo interactions, targets are the dot notation that links to the source document property. For example, firstitem for the direc level or firstitem.seconditem.thirditem for a deeper property.              
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.DiscountCollection">
            
            	The container for a list of discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.DiscountCondition">
            
            	Properties of the conditions that must be met for a discount to apply to an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.CouponCode">
            
            Code of a discount coupon. This code can be used by a shopper when a coupon code is required to earn the associated discount on a purchase.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.CustomerSegments">
            
            List of customer segments associated with the discount. Shoppers who are members of an associated customer segment can redeem this discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.ExcludedCategories">
            
            List of the product categories that are not eligible for the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.ExcludedProducts">
            
            List of products that are not eligible for the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.ExpirationDate">
            
            Date and time in UTC format when a discount, credit, wish list, or cart expires. An expired discount no longer can be redeemed. An expired wish list is no longer available. An expired credit can no longer be redeemed for a purchase. Acart becomes inactive and expired based on a system-calculated interval. For example, if an anonymous shopper has 14 days of inactivity, the cart is considered abandoned after that period of inactivity. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.IncludedCategories">
            
            List of product categories that are eligible for the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.IncludedProducts">
            
            List of products that are eligible for the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.MaxRedemptionCount">
            
            The maximum number of times the discount can be redeemed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.MinimumCategorySubtotalBeforeDiscounts">
            
            This pecifies the minimum amount that must be purchased in the combined categories defined in IncludedCategories. This amount is calculated before discounting and it is not used if IncludedCategories is empty.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.MinimumLifetimeValueAmount">
            
            The minimum customer lifetime value amount required to redeem this discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.MinimumOrderAmount">
            
            The minimum order amount required to redeem this discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.MinimumQuantityProductsRequiredInCategories">
            
            This specifies the minimum quantity of products in the categories specified in IncludedCategories, which must be purchased to qualify for the associated discount. This defaults to 1 if  null, and IncludedCategories has values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.MinimumQuantityRequiredProducts">
            
            This specifies the minimum quantity of products in the specified IncludedProducts that must be purchased to qualify for the associated discount. This defaults to 1 if  null, and IncludedProducts has values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.RequiresAuthenticatedUser">
            
            If true, only authenticated users can redeem the discount. If false, anonymous users can redeem the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.RequiresCoupon">
            
            If true, redemption of this discount requires entry of a coupon code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.StartDate">
            
            The earliest date and time this discount can be redeemed.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent">
            
            	The container for the language-specific name of the discount. A container exists for each supported language (LocaleCode). This parameter enables you to display the discount name in multiple languages yet manage it as a single discount internally.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent.FriendlyDescription">
            
            The localizable, shopper-facing description defined for a discount or a storefront message. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget">
            
            	Properties of the target to which the discount applies, such as the type of discount and which products, categories, or shipping methods are eligible for the discount and the properties of this discount target.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.Categories">
            
            The list of all categories associated with the product. These categories contain products, can have discounts associated, and define the grouping of products to display on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.ExcludedCategories">
            
            List of the product categories that are not eligible for the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.ExcludedProducts">
            
            List of products that are not eligible for the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.ExcludeItemsWithExistingProductDiscounts">
            
            Prevents order scoped discounts from layering over items that already have a product discount with the same type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.ExcludeItemsWithExistingShippingDiscounts">
            
            Prevents order scoped discounts from layering over items that already have a shipping discount with the same type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.IncludeAllProducts">
            
            If true, the target discount applies to all products sold on the site, regardless of product category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.MaximumQuantityPerRedemption">
            
            When a condition is specified, this property limits the number of items that are targeted for each discount redemption with an order. If multiple redemptions are allowed for each order then multiples of this value are allowed in multiples of the associated condition. If no condition is specified, then this value is not used. If null and condition exists, then defaults to 1.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.Products">
            
            List of  product codes that represent the products to which the discount can apply.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.ShippingMethods">
            
            The list of shipping method codes that represents the shipping service types to which the discount can apply.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.ShippingZones">
            
            Shipping Zones that are applicable for this discount
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.Type">
            
            Properties of the object to which this discount is targeted, which can be Product or Shipping. If the discount type is Product, the target properties describe the product or product categories to which the discount applies. If the discount type is Shipping, the target properties describe the shipping methods eligible for the discount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Facet">
            
            	Properties of the facet used to retrieve documents.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.CategoryId">
            
            Unique identifier for the storefront container used to organize products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.FacetId">
            
            Unique identifier of the facet.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.FacetType">
            
            The type of facet. Valid values are "range" (enables creation of a range of values) or "value" (populates the facet values based on the associated attribute or category).
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.IsHidden">
            
            Indicates if the object is hidden or breaks inheritance, primarily used by facets, products, and attribute vocabulary values. For example, if true, the attribute vocabulary value does not appear in the list when defining a value for an attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.Order">
            
            Integer that represents the sequence order of the attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.OverrideFacetId">
            
            Indicates the specific facet inherited from a parent category that is overridden by this facet. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.RangeQueries">
            
            For range type facets, an array of ranges to use for the facet values. For example, a price facet might have range queries for $0-$25, $25-$50, and $50-$100.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.Source">
            
            Source for an action or container for originating content. Source is used as an origin for validation and notification messages based on successful or failed actions. For originating content, source is used for the facet source information, including the category, price, or attribute properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.Validity">
            
            System-supplied and read only indicator of whether a facet is currently valid and if not indicates the reason why. A facet may become invalid if the source data is changed in some ways (for example if the category tree structure is changed).
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.ValueSortType">
            
            Determines how the facet values will be sorted in the store. Must be a valid value for DataType defined in FacetValueSortTypeConst. Allowable values are: CountAscending, CountDescending, ValuesAscending, ValuesDescending. The default if no value is specified will be CountDescending.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.FacetRangeQuery">
            
            	For range type facets, a single range of facet values. For example, a price facet might have a $0-$25 range query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetRangeQuery.RangeValueEnd">
            
            The maximum value to use for the facet range query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetRangeQuery.RangeValueStart">
            
            The minimum value to use for the facet range query.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.FacetSet">
            
            	The list of category, price, and attribute facets defined or available for definition for the category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSet.Available">
            
            The list of subcategories and attributes that have not been defined as facets for the category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSet.Configured">
            
            The list of category, price, and attribute facets defined for the category.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.FacetSource">
            
            	Describes the source of the facet data. It can be a product field (such as price and category) or a product attribute. 			All fields are System-supplied and read only.		
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSource.AllowsRangeQuery">
            
            If true, the facet allows for values that consist of one or more ranges, such as 0-100, 100-200, and 200-300. This is only allowed for numeric and date fields. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSource.DataType">
            
            The data type of the source product property, typically of type Bool, DateTime, Number, or String.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSource.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSource.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSource.Type">
            
            The source type for the facet, either "Attribute" or "Element".  Elements are direct properties of the product and include category and price.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.FacetValidity">
            
            	Describes whether a facet is currently valid and the reason. 			A facet may become invalid if the source data is changed in some ways (for example if the category tree structure is changed).		
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetValidity.IsValid">
            
            Indicates if the facet is currently valid.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetValidity.ReasonCode">
            
            A code indicating the reason why a facet is invalid.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory">
            
            	Properties of an inventory definition that defines the level of inventory for a specific product at a given location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventory.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventory.BaseProductCode">
            
            Mozu.ProductAdmin.Contracts.LocationInventory baseProductCode ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventory.LocationCode">
            
            The unique, user-defined code that identifies a location. This location can be the location where the order was entered, location for newly in-stock products, and where products are returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventory.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventory.ProductName">
            
            The name of the product that represents a line item in a taxable order or product bundle.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventory.StockAvailable">
            
            The stock level for the associated product currently available, at specified locations, and based on the number of pending product reservations as applicable. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventory.StockOnBackOrder">
            
            The stock level for the associated product currently on back order for this location, based on the number of pending product reservations. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventory.StockOnHand">
            
            The current physical stock level for the associated product, which does not account for pending product reservations.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment">
            
            	Properties of an adjustment to the active product inventory of a specific location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment.LocationCode">
            
            The unique, user-defined code that identifies a location. This location can be the location where the order was entered, location for newly in-stock products, and where products are returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment.Type">
            
            The type of inventory adjustment to perform, which is "Absolute" or "Delta". If adjusting by an absolute value, enter the integer in the Value parameter. If adjusting by a delta value, enter the delta in the Value parameter.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection">
            
            	Array list of inventory definitions that manage the stock level of products at a given location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalog">
            
            	Properties of a master product catalog defined for a tenant. All catalogs and sites associated with a master catalog share product definitions.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.MasterCatalog.Id">
            
            The unique identifier of the master catalog associated with the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.MasterCatalog.IsDeleted">
            
            Indicates if the object is deleted. If true, the object has been deleted. This may affect associated child members and objects. For example, a deleted master catalog affects all associated catalogs. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.MasterCatalog.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.MasterCatalog.ProductPublishingMode">
            
            The mode this master catalog uses for product updates. Possible values are "Pending" which saves product updates as a draft until they are published, and "Live" which publishes all product updates immediately.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalogCollection">
            
            	Collection of master catalogs associated with a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.MasterCatalogCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.MasterCatalogCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Product">
            
            	The properties of a product, referenced and used by carts, orders, wish lists, and returns.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ApplicableDiscounts">
            
            List of discounts available per configured conditions and criteria. These discounts are associated with products, orders, and shipping costs. Shoppers can view these discounts per order, per product in an order, or for their shipping depending on the configuration.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.BaseProductCode">
            
            Product code defined by the tenant administrator to use as a base prefix when generating product codes for any variations of this product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.BundledProducts">
            
            Properties of a collection of component products that make up a single product bundle with its own product code. Tenants can define product bundles for any product type that supports the Bundle product usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.Extras">
            
            List of extra product attributes defined for this product. For example, monogram could be a possible extra for a shirt product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.FulfillmentTypesSupported">
            
            List of supported types of fulfillment  for the product or variation. The types include direct ship, in-store pickup, or both. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.HasConfigurableOptions">
            
            If true, the product has configurable options. This option means that a product is not purchasable until the shopper selects options that resolve into a product variation. Configurable options for a product are the choices a shopper makes when ordering a product. Size and color are configurable options. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.HasStandAloneOptions">
            
            If true, this product has standalone options that a shopper can select without configuring a defined product variations. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.InventoryInfo">
            
            Properties and data of inventory information for configured and bundled products. If product stock is managed, the data specifies out of stock behavior.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsPackagedStandAlone">
            
            Indicates if the product must be shipped alone in a container. This is used for products and products within a bundle. If true, this product cannot be shipped in a package with other items and must ship in a package by itself.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsRecurring">
            
            Indicates if the product in a cart, order, or wish list is purchased on a recurring schedule. If true, the item can be purchased or fulfilled at regular intervals, such as a monthly billing cycle. For example, digital or physical product subscriptions are recurring cart items. This property is not used at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsTaxable">
            
            Indicates if the item is subject to taxation, used by products, options, extras, cart and order items, line items, and wish lists. If true, the entity is subject to tax based on the relevant tax rate and rules.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsValidForProductType">
            
            If true, this product is valid for the assigned product type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsVariation">
            
            If true, this configured product represents a product variation defined with configurable options. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.MasterCatalogId">
            
            The unique identifier of the master catalog associated with the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.Options">
            
            List of option attributes configured for an object. These values are associated and used by products, product bundles, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PackageHeight">
            
            Height of a package or bundle package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PackageLength">
            
            Length of a package or bundle package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PackageWeight">
            
            Weight of a package or bundle package in imperial units of pounds and ounces.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PackageWidth">
            
            Width of a package or bundle package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.Price">
            
            Unit price that the client intends to sell the product if no sale price is set.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PricingBehavior">
            
            Properties that describe the behavior the system uses when determining the price of products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ProductInCatalogs">
            
            Properties defined for a product as they appear in its associated catalogs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ProductSequence">
            
            Integer that represents the sequential order of the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ProductTypeId">
            
            Unique identifier of the product type assigned for this product. Tenant administrators can only define one product type per product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ProductUsage">
            
            The usage type that applies to this product, which is Standard (a single product without configurable options), Configurable (a product that includes configurable option attributes), Bundle (a collection of products sold as a single entity), or Component (an invididual product that represents a component in a bundle).
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.Properties">
            
            Collection of property attributes defined for the object. Properties are associated to all objects within Mozu, including documents, products, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PublishingInfo">
            
            Properties of the product publishing settings for the associated product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.SeoContent">
            
            The search engine optimized content defined for products or products associated with a catalog. If no SEO content is specified in the request for products associated with a catalog, this catalog uses the SEO content defined in the master catalog. To override the SEO content for this catalog, the `IsSEOContentOverridden `flag must be set to "true".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ShippingClassId">
            
            Identifier of the shipping class.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.StandAlonePackageType">
            
            If the product must be packaged separately, the type of standalone package to use.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.SupplierInfo">
            
            Supplier-defined properties assigned for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.Upc">
            
            The universal product code (UPC) is the barcode defined for the product. The UPC is unique across all sales channels. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.VariationKey">
            
            System-generated key that represents the attribute values that uniquely identify a specific product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.VariationOptions">
            
            The list of product variation configurations defined for this product based on its available product option attributes.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductCategory">
            
            	The site category to which a product belongs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCategory.CategoryId">
            
            Unique identifier for the storefront container used to organize products.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductCodeRename">
            
            	Properties for a product code current and changed content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCodeRename.ExistingProductCode">
            
            The existing product code to be changed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCodeRename.NewProductCode">
            
            The new product code for the product. This code must be unique across all catalogs.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductCollection">
            
            	The container for a set of products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductCost">
            
            	The cost a client pays the supplier to stock the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCost.Cost">
            
            The amount paid by the client to stock the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCost.IsoCurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductDiscountCondition">
            
            	Properties of the conditions that must be met for a discount to apply to a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductDiscountCondition.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra">
            
            	Properties of an extra attribute to defined for a product that is associated with a product type that uses the extra. Setting up extras for a product enables shopper-entered information, such as initials for a monogram.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtra.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtra.IsMultiSelect">
            
            If true, the shopper can select more than one value from a predefined list for this extra.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtra.IsRequired">
            
            Indicates if the property, attribute, product option, or product extra is required. If true, the object must have a defined value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtra.Values">
            
            List of value data for objects.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue">
            
            	Properties of a defined value for a product extra attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.AttributeVocabularyValueDetail">
            
            Properties of an individual vocabulary value for an attribute. For example, a "color" attribute might have the following vocabulary values: Red, Blue, Green.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.DeltaPrice">
            
            The difference between associated prices for a product, variation option, or extra. The difference is calculated by subtracting the base price from the associated price with this product, option, and/or extra. For example, if a product with a defined monogram extra costs an additional $10, the `deltaPrice `value is "10". Between options, a price for a medium may be $10 and a large $12 giving a `deltaPrice `value of "2".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.DeltaWeight">
            
            The difference between the weight associated with this product, variation option, or extra and the base product. For example, if a product with a monogram weighs an extra 1/4 lb, the DeltaWeight value is "0.25". The amount of the delta is set by the weight type for the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.IsDefaulted">
            
            If true, the value for the product extra is selected by default. Shopper entered extras cannot be defaulted.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.LocalizedDeltaPrice">
            
            The difference between associated prices for a product, variation option, or extra that is localized per the `localeCode`. The difference is calculated by subtracting the base price from the associated price with this product, option, and/or extra. Depending on the localeCode, the price may be converted such as from USD (US Dollar) to EUR (euro).
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice">
            
            	The properties of the price difference between the product extra and the base product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice.DeltaPrice">
            
            The difference between associated prices for a product, variation option, or extra. The difference is calculated by subtracting the base price from the associated price with this product, option, and/or extra. For example, if a product with a defined monogram extra costs an additional $10, the `deltaPrice `value is "10". Between options, a price for a medium may be $10 and a large $12 giving a `deltaPrice `value of "2".
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo">
            
            	Properties of a product associated with a specific catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.CatalogId">
            
            The unique identifier of the catalog of products used by a site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.Content">
            
            Localizable content (such as a name and/or description) for an attribute. The content may be localized when displayed according to the locale code specified by the master catalog. Content can include descriptive text for product extensible attributes, catalog-level descriptions (displayed if isContentOverriden is true), product bundles, and customer account notes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.IsActive">
            
            Indicates if the object or feature is active. This indicator is used for subscriptions (at the site or tenant level), customer accounts, products and variations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.IsContentOverridden">
            
            If true, the content defined for this product in the master catalog in overridden in the catalog with the content specified in the request body. If false, this catalog uses the content defined in the master catalog for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.IsPriceOverridden">
            
            If true, the price defined for this product in the master catalog in overridden in the catalog with the price specified in the request body. If false, this catalog uses the price defined in the master catalog for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.IsseoContentOverridden">
            
            If true, the SEO content defined for this product in the master catalog in overridden in the catalog with the SEO content specified in the request body. If false, this catalog uses the SEO content defined in the master catalog for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.Price">
            
            The price of the product associated with the specified catalog. If no price is specified in the request, this catalog uses the price defined in the master catalog. To override the product price for this catalog, the IsPriceOverridden flag must be set to "true".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.ProductCategories">
            
            The product categories to define for the product associated with the specified catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.SeoContent">
            
            The search engine optimized content defined for products or products associated with a catalog. If no SEO content is specified in the request for products associated with a catalog, this catalog uses the SEO content defined in the master catalog. To override the SEO content for this catalog, the `IsSEOContentOverridden `flag must be set to "true".
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductInventoryInfo">
            
            	Properties of the inventory behavior associated with a product definition.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInventoryInfo.ManageStock">
            
            Indicates is the item's stock is managed. If true, Mozu manages inventory levels for this product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInventoryInfo.OutOfStockBehavior">
            
            Determines the method this product uses when active stock is depeleted. Options include "DisplayMessage" to display an out of stock message to the shopper, "HideProduct" to disable the product on the storefront, or "AllowBackOrder" to allow the shopper to back order the product. This property is required only if Mozu manages inventory for this product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent">
            
            	The localized product content in the language specified by the LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent.ProductFullDescription">
            
            Lengthy full description for a product description, displayed on product detail pages within the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent.ProductImages">
            
            List of image files associated with a product. This content may include the image file URL, name, and other information as available.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent.ProductName">
            
            The name of the product that represents a line item in a taxable order or product bundle.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent.ProductShortDescription">
            
            Brief text description of the product or component in a product bundle, typically used when the product is displayed in a list or in search results.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage">
            
            	The localized product image in the language specified by the LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.AltText">
            
            Descriptive text associated with the image or video that appears on the web storefront. This text displays on a hover-over in the browser, providing further information on the content displayed. The alternate text should be plain alphanumeric text without special characters or HTML coding.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.CmsId">
            
            The identifier of the image in the Mozu CMS. Supply a value for either the CMS ID or Image URL parameter.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.ImageLabel">
            
            The localized title for an image that displays on the storefront. If localized, the displayed content is set per the locale code for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.ImageUrl">
            
            The URL link for the image file associated with a product or category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.MediaType">
            
            Type of media specification required to successfully render the image, video, or other media content for products and categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.Sequence">
            
            The numeric order of objects, used by a vocabulary value defined for an extensible attribute, images, and categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.VideoUrl">
            
            The URL of a video files for a product or category. The path name is set in the language specified by the LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent">
            
            	The localized product search engine optimized content in the language specified by the LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.MetaTagDescription">
            
            Description defined for metadata, used to interally manage data, in the language specified by the `localeCode`. This content is used by categories, products, localized content, and SEO content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.MetaTagKeywords">
            
            Keywords defined for  metadata, used to internally manage data, in the language specified by the `localeCode`. Keywords are used by content for categories, products, localized content, and SEO content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.MetaTagTitle">
            
            Title defined for  metadata, used to internally manage data, in the language specified by the `localeCode`. Titles are used by content for categories, products, localized content, and SEO content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.SeoFriendlyUrl">
            
            The search engine optimized, human-readable portion of the URL. The content is localized according to the product's `localeCode`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.TitleTagTitle">
            
            Customizes the HTML title tag within the header section of the product details page for the specified product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductOption">
            
            	Properties of the product option to create such as attribute detail, fully qualified name, and list of product option values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductOption.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductOption.Values">
            
            List of value data for objects.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductOptionValue">
            
            	Properties of a value associated with a product option attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductOptionValue.AttributeVocabularyValueDetail">
            
            Properties of an individual vocabulary value for an attribute. For example, a "color" attribute might have the following vocabulary values: Red, Blue, Green.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductOptionValue.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductPrice">
            
            	The price of the product in the specified currency code (USD). This price can either be the sale price or the price for which the merchang intends to sell the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.CreditValue">
            
            The credit value of the product or bundled product. When the `goodsType `is `DigitalCredit`, this value is populated to indicate the value of the credit. This is used to create store credit in the fulfillment of gift cards.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.IsoCurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.Map">
            
            The minimum advertised price a client can charge for the associated product, as determined by the supplier. Client administrators can override the minimum advertised price at the catalog level.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.MapEndDate">
            
            If the product has a supplier-defined minimum advertised price, the date and time after which the client can sell the product for less than the minimum advertised price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.MapStartDate">
            
            If the product has a supplier-defined minimum advertised price, the date and time after which the client cannot sell the product for less than the minimum advertised price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.Msrp">
            
            The manufacturer's suggested retail price for the product. This content may be defined by the supplier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.Price">
            
            Price that the merchant intends to sell the product which is not necessarily the list price. This is the price the merchant intends to sell the product if no sale price is present.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.SalePrice">
            
            The set sale price for a product consisting of a price with a discount already applied.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductPricingBehaviorInfo">
            
            	Properties that describe the behavior the system uses when determining the price of the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPricingBehaviorInfo.DiscountsRestricted">
            
            Indicates if the discount is restricted. If true, the system cannot apply any discounts to this product. Discount restrictions are defined at the master catalog level. Client administrators cannot override discount restrictions at the catalog level, but they can limit the restriction to a defined time interval.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPricingBehaviorInfo.DiscountsRestrictedEndDate">
            
            The date and time on which the discount restriction period ends.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPricingBehaviorInfo.DiscountsRestrictedStartDate">
            
            The date and time on which the discount restriction period starts.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty">
            
            	Details of a property defined for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductProperty.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductProperty.Values">
            
            List of value data for objects.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValue">
            
            	Properties of a value for a product property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValue.AttributeVocabularyValueDetail">
            
            Properties of an individual vocabulary value for an attribute. For example, a "color" attribute might have the following vocabulary values: Red, Blue, Green.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValue.Content">
            
            Localizable content (such as a name and/or description) for an attribute. The content may be localized when displayed according to the locale code specified by the master catalog. Content can include descriptive text for product extensible attributes, catalog-level descriptions (displayed if isContentOverriden is true), product bundles, and customer account notes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValue.LocalizedContent">
            
            The localized content of an attribute determined by the `localeCode`. This content is always in the default language of the MasterCatalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValue.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent">
            
            	Content of the product property value in the language defined for the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent.StringValue">
            
            If the object value is a String, this value provides that string value, used by vocabulary property values, products, and options.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductPublishingInfo">
            
            	Properties of the publishing status of the product, including its current state and the details of the last product change published to the catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPublishingInfo.LastPublishedBy">
            
            The user ID of the user who last published changes for this product in the catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPublishingInfo.LastPublishedDate">
            
            The date and time a draft change for this product was published to the catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPublishingInfo.PublishedState">
            
            The current publishing state of this product in the catalog, which is Live, New, or Draft. Live products appear on the storefront and have no pending changes. New products have been created but do not yet appear on the storefront. Draft products appear on the storefront but have pending changes that have not yet been published.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation">
            
            	A hold placed on product inventory for a particular product so that the quantity specified is set aside and available for purchase during the ordering process.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.LocationCode">
            
            The unique, user-defined code that identifies a location. This location can be the location where the order was entered, location for newly in-stock products, and where products are returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.OrderId">
            
            Unique identifier of the order associated with the payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.OrderItemId">
            
            Unique identifier of the order item associated with a validation message, order, or return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection">
            
            	A collection of holds placed on product inventory so that the quantities specified are made available for the ordering process.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductSupplierInfo">
            
            	Supplier-defined properties assigned for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductSupplierInfo.Cost">
            
            The amount the client pays the supplier to stock this product in its catalogs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductSupplierInfo.DistPartNumber">
            
            The distributor part number associated with this product, defined by the product distributor.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductSupplierInfo.MfgPartNumber">
            
            The manufacturer's part number for the product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductType">
            
            	A product type is like a product template.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.Extras">
            
            List of extra product attributes defined for this product. For example, monogram could be a possible extra for a shirt product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.GoodsType">
            
            The type of goods in a bundled product. A bundled product is composed of products associated to sell together. Possible values include “Physical” and “DigitalCredit”. This comes from the `productType `of the product. Products are defaulted to a Physical `goodsType`. Gift cards have a `goodsType `of DigitalCredit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.IsBaseProductType">
            
            If true, this product is associated with the overall product type. There is only one BaseProductType per site group. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.MasterCatalogId">
            
            The unique identifier of the master catalog associated with the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.Options">
            
            List of option attributes configured for an object. These values are associated and used by products, product bundles, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.ProductCount">
            
            The total number of products. This total may indicate the total products associate with a product type or number of products in a list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.ProductUsages">
            
            List of product usages that describe how products of this type are used. Products of this type can be Standard (a single product without configurable options), Configurable (a product that includes configurable option attributes), Bundle (a collection of products sold as a single entity), or Component (an invididual product that represents a component in a bundle). Product type usages cannot be both Bundle and Configurable.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.Properties">
            
            Collection of property attributes defined for the object. Properties are associated to all objects within Mozu, including documents, products, and product types.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection">
            
            	A group of product type lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation">
            
            	Properties of a specific product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.DeltaPrice">
            
            The difference between associated prices for a product, variation option, or extra. The difference is calculated by subtracting the base price from the associated price with this product, option, and/or extra. For example, if a product with a defined monogram extra costs an additional $10, the `deltaPrice `value is "10". Between options, a price for a medium may be $10 and a large $12 giving a `deltaPrice `value of "2".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.DeltaWeight">
            
            The difference between the weight associated with this product, variation option, or extra and the base product. For example, if a product with a monogram weighs an extra 1/4 lb, the DeltaWeight value is "0.25". The amount of the delta is set by the weight type for the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.FulfillmentTypesSupported">
            
            List of supported types of fulfillment  for the product or variation. The types include direct ship, in-store pickup, or both. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.IsActive">
            
            Indicates if the object or feature is active. This indicator is used for subscriptions (at the site or tenant level), customer accounts, products and variations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.IsOrphan">
            
            If true, the production variation is no longer available for sale. For example, if a client stops selling all "small" shirts, all product variations with the "small" option are set to IsOrphan. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.LocalizedDeltaPrice">
            
            The difference between associated prices for a product, variation option, or extra that is localized per the `localeCode`. The difference is calculated by subtracting the base price from the associated price with this product, option, and/or extra. Depending on the localeCode, the price may be converted such as from USD (US Dollar) to EUR (euro).
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.Options">
            
            List of option attributes configured for an object. These values are associated and used by products, product bundles, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.SupplierInfo">
            
            Supplier-defined properties assigned for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.Upc">
            
            The universal product code (UPC) is the barcode defined for the product. The UPC is unique across all sales channels. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.VariationExists">
            
            If true, one or more product variations are configured for the specified product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.Variationkey">
            
            System-generated key that represents the attribute values that uniquely identify a specific product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.VariationProductCode">
            
            Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection">
            
            	Collection of variations configured for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice">
            
            	The difference between the base price for the product and this variation of the product, which can be a positive or negative decimal value. For example, if the base price for a t-shirt product is $10, but the XL variation should cost $12, the DeltaPrice value should be "2". However, if the XS variation should only cost $8, the DeltaPrice value should be "-2".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice.CreditValue">
            
            The credit value of the product or bundled product. When the `goodsType `is `DigitalCredit`, this value is populated to indicate the value of the credit. This is used to create store credit in the fulfillment of gift cards.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice.Msrp">
            
            The manufacturer's suggested retail price for the product. This content may be defined by the supplier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationOption">
            
            	Details of a product variation option.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationOption.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationOption.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationOption.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection">
            
            	Paged list of collections of variations for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.PublishingScope">
            
            	Describes the scope of the product publishing update, which can include individual product codes or all pending changes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.PublishingScope.AllPending">
            
            If true, publish or discard all pending product changes in the master catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.PublishingScope.ProductCodes">
            
            List of product codes of associated products, used for pending product changes to publish or delete and returned in a product inventory location query.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Search.SearchSynonymSettings">
            
            	Settings for search synonyms for search results.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Search.SearchSynonymSettings.ExpandSynonyms">
            
            Indicates if synonyms should be expanded.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Search.SearchSynonymSettings.MainPartBoost">
            
            Sets the boost for the words actually sent in the query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Search.SearchSynonymSettings.SynonymPartBoost">
            
            Boosts the synonyms to affect rankings for search results.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.SearchSettings">
            
            	The settings to control product search and indexing behavior.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SearchSettings.SearchSynonymSettings">
            
            Settings of keys and values for synonyms in search results.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SearchSettings.SiteSearchSettings">
            
            Settings for searches performed at the site level.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.SiteSearchKeywordRelevancySettings">
            
            	Properties for the site search keyword relevancy settings. Relevancy determines the calculated matched of entered search strings against keywords. The relevancy weight can determine the order of importance for matching a search term such as categories before or after product names.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchKeywordRelevancySettings.AttributesWeight">
            
            The considered relevancy weight for the attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchKeywordRelevancySettings.CategoryNamesWeight">
            
            The considered relevancy weight for category names.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchKeywordRelevancySettings.DescriptionWeight">
            
            The considered relevancy weight for descriptions.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchKeywordRelevancySettings.KeywordsWeight">
            
            The considered relevancy weight for keywords.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchKeywordRelevancySettings.MpnWeight">
            
            The considered relevancy weight for mpn provider.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchKeywordRelevancySettings.NameWeight">
            
            The weight for the name used in ranking search results.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchKeywordRelevancySettings.ProductCodeLooseWeight">
            
            The considered relevancy weight for product code, as loose.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchKeywordRelevancySettings.ProductCodeWeight">
            
            The considered relevancy weight for product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchKeywordRelevancySettings.UpcWeight">
            
            The considered relevancy weight for UPCs.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.SiteSearchPhraseRelevancySettings">
            
            	Properties for the site search phrase relevancy settings. Relevancy determines the calculated matched of entered search phrase strings against keywords. The relevancy weight can determine the order of importance for matching a search term such as categories before or after product names.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchPhraseRelevancySettings.AttributeWeight">
            
            The considered relevancy weight for the attributes phrase.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchPhraseRelevancySettings.DescriptionWeight">
            
            The considered relevancy weight for descriptions.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchPhraseRelevancySettings.NameWeight">
            
            The weight for the name used in ranking search results.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.SiteSearchRelevancyCustomField">
            
            	Properties for setting custom field site search keyword relevancy settings. Relevancy determines the calculated matched of entered search strings against keywords. The relevancy weight can determine the order of importance for matching a search term such as categories before or after product names.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchRelevancyCustomField.FieldName">
            
            Name of the field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchRelevancyCustomField.FieldWeight">
            
            Relative weight of the field for relevancy purposes.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.SiteSearchSettings">
            
            	Properties for the site search settings.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchSettings.CustomBoosts">
            
            Custom boost value for searches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchSettings.CustomFields">
            
            Custom field for searches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchSettings.IsDefault">
            
            Indicates if the object is default. This indicator is used for product variations and site search settings. If true, the value/object is the default option. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchSettings.MinimumMatchPercent">
            
            Mozu.ProductAdmin.Contracts.SiteSearchSettings minimumMatchPercent ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchSettings.SettingsName">
            
            The name for the search settings.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchSettings.SiteKeywordRelevancy">
            
            The site keyword relevancy settings.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SiteSearchSettings.SitePhraseRelevancy">
            
            The site phrase relevancy settings.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocation">
            
            	Mozu.ProductAdmin.Contracts.SoftAllocation ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SoftAllocation.AuditInfo">
            
            Basic audit info about the object, including date, time, and user account. Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SoftAllocation.ExpiresAt">
            
            The UTC DateTime this allocation will expire
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SoftAllocation.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SoftAllocation.LocationCode">
            
            The unique, user-defined code that identifies a location. This location can be the location where the order was entered, location for newly in-stock products, and where products are returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SoftAllocation.ProductCode">
            
            The unique, user-defined  product code of a product, used throughout Mozu to reference and associate to a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SoftAllocation.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SoftAllocation.ReferenceId">
            
            Entity RefrenceID this allocation is linked to.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SoftAllocation.ReferenceItemId">
            
            item Id of the RefrenceID.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocationCollection">
            
            	Mozu.ProductAdmin.Contracts.SoftAllocationCollection ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SoftAllocationCollection.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SoftAllocationCollection.PageCount">
            
            The total number of pages of the results divided per the `pageSize`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SoftAllocationCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SoftAllocationCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SoftAllocationCollection.TotalCount">
            
            Total number of objects in am item collection. Total counts are calculated for numerous objects in Mozu, including location inventory, products, options, product types, product reservations, categories, addresses, carriers, tax rates, time zones, and much more.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocationRenew">
            
            	Mozu.ProductAdmin.Contracts.SoftAllocationRenew ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SoftAllocationRenew.ExpiresAt">
            
            The UTC DateTime these allocations will expire
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.SoftAllocationRenew.Ids">
            
            The allocation IDs to renew
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.TargetedCategory">
            
            	Properties of a product category targeted for a defined discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.TargetedCategory.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.TargetedProduct">
            
            	Product definition targeted for a defined discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.TargetedProduct.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.TargetedShippingMethod">
            
            	Shipping method service type, such as UPS Ground or USPS Priority Mail, targeted for a defined discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.TargetedShippingMethod.Code">
            
            The code associated with the carrier's shipping method service type. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.TargetedShippingMethod.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.TargetedShippingZone">
            
            	The targeted shipping zone for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.TargetedShippingZone.Zone">
            
            The zone string for the tenant domain.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.AppliedDiscount">
            
            	The discount currently applied to the cart or order, represented as a negative currency amount to be subtracted from the final price. If multiple discounts are applied to the same order, the Applied Discount displays the most valuable discount for the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AppliedDiscount.CouponCode">
            
            Alphanumeric code associated with the coupon or promotion that results in a discounted price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AppliedDiscount.Discount">
            
            Name of the discount added and applied to a shopping cart and order for a shopper's purchase. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AppliedDiscount.Impact">
            
            The value of the discount applied to the cart or order, represented as a negative currency amount to apply to the original price.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.AttributeDetail">
            
            	The product attribute details common between all attribute types - properties, options, and extras.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.DataType">
            
            The data type of the source product property, typically of type Bool, DateTime, Number, or String.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.DataTypeSequence">
            
            Unique sequence of the attribute for its data type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.Description">
            
            The localized description in text for the object, displayed per the locale code. For example, descriptions are used for product descriptions, attributes, and pre-authorization transaction types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.DisplayIntention">
            
            Defines the intended display of this attribute in the storefront. Options include Drop Down, Image Picker, and Radio Buttons.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.InputType">
            
            The type of input selection used to define a value for the attribute, including Yes/No, Date, DateTime, List, TextBox, or TextArea.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.SearchableInStorefront">
            
            Indicates if the attribute value is searchable on the public storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.SearchDisplayValue">
            
            Indicates what kind of values search queries and returns. If true, the system indexes the display value of string attributes instead of the canonical value for searching. Always use the canonical value for filtering. This does not apply for non-string attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.UsageType">
            
            The usage type of the product attribute, which is property, option, or extra.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.Validation">
            
            Properties used when validating a value entered for an object, including extensible attributes, products attributes, and database entries.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.ValueType">
            
            An attribute value type is either predefined vocabulary by the admin during attribute set up or user-defined with an appropriate type (AdminEntered or ShopperEntered depending on the user). These types are used by products and attributes. The difference between predefined values versus manually entered values is such that the first choice is a set of options to choose from. AdminEntered and ShopperEntered are values that are entered rather than system-supplied and are not stored in the database, but captured during a live commerce operations such as during an order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.AttributeValidation">
            
            	Validates the attribute configured for the customer in the storefront against the attribute configured in Mozu admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MaxDateValue">
            
            The maximum date allowed including month, day, and year. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MaxNumericValue">
            
            The maximum number that can be entered as a value for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MaxStringLength">
            
            The maximum character length possible for a string value entered for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MinDateValue">
            
            The minimum date allowed including month, day, and year. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MinNumericValue">
            
            The minimum numeric value required to validate an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MinStringLength">
            
            The minimum character length possible for a string value entered for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.RegularExpression">
            
            Regular expression used to process and validate an extensible attribute value that require special formatting, such as phone numbers.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.AttributeVocabularyValueDisplayInfo">
            
            	Provides the display information for attribute vocabulary values. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeVocabularyValueDisplayInfo.CmsId">
            
            The identifier of the image in the Mozu CMS. Supply a value for either the CMS ID or Image URL parameter.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeVocabularyValueDisplayInfo.ColorValue">
            
            Hex value for a color to display in a color picker. This is an HTML supported code for color.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeVocabularyValueDisplayInfo.ImageUrl">
            
            The URL link for the image file associated with a product or category.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.BundledProduct">
            
            	Properties of a component product in a product bundle. A product bundle can represent either a collection of multiple products sold as a single entity, or a collection of the same product sold as a package. For example, a 10-pack of socks.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.Content">
            
            Localizable content (such as a name and/or description) for an attribute. The content may be localized when displayed according to the locale code specified by the master catalog. Content can include descriptive text for product extensible attributes, catalog-level descriptions (displayed if isContentOverriden is true), product bundles, and customer account notes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.CreditValue">
            
            The credit value of the product or bundled product. When the `goodsType `is `DigitalCredit`, this value is populated to indicate the value of the credit. This is used to create store credit in the fulfillment of gift cards.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.GoodsType">
            
            The type of goods in a bundled product. A bundled product is composed of products associated to sell together. Possible values include “Physical” and “DigitalCredit”. This comes from the `productType `of the product. Products are defaulted to a Physical `goodsType`. Gift cards have a `goodsType `of DigitalCredit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.InventoryInfo">
            
            Properties and data of inventory information for configured and bundled products. If product stock is managed, the data specifies out of stock behavior.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.IsPackagedStandAlone">
            
            Indicates if the product must be shipped alone in a container. This is used for products and products within a bundle. If true, this product cannot be shipped in a package with other items and must ship in a package by itself.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.OptionAttributeFQN">
            
            Fully qualified name of the selected option's attribute. Bundledproducts result from a static bundle or are dynamically added as a result of the shopper selecting products as extras. When the bundled item is dynamic, it includes the attribute's fully qualified name of the extra that it came from. When `optionAttributeFQN `is null, the bundled item was statically defined. When not null, the item came from an extra selection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.OptionValue">
            
            The value of the option attribute. These values are associated and used by product bundles and options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.ProductType">
            
            The product type template associated with the product on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary">
            
            	System-supplied and read only information for component products in a product bundle.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.CreditValue">
            
            The credit value of the product or bundled product. When the `goodsType `is `DigitalCredit`, this value is populated to indicate the value of the credit. This is used to create store credit in the fulfillment of gift cards.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.GoodsType">
            
            The type of goods in a bundled product. A bundled product is composed of products associated to sell together. Possible values include “Physical” and “DigitalCredit”. This comes from the `productType `of the product. Products are defaulted to a Physical `goodsType`. Gift cards have a `goodsType `of DigitalCredit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.InventoryInfo">
            
            Properties and data of inventory information for configured and bundled products. If product stock is managed, the data specifies out of stock behavior.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.IsPackagedStandAlone">
            
            Indicates if the product must be shipped alone in a container. This is used for products and products within a bundle. If true, this product cannot be shipped in a package with other items and must ship in a package by itself.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.OptionAttributeFQN">
            
            Fully qualified name of the selected option's attribute. Bundledproducts result from a static bundle or are dynamically added as a result of the shopper selecting products as extras. When the bundled item is dynamic, it includes the attribute's fully qualified name of the extra that it came from. When `optionAttributeFQN `is null, the bundled item was statically defined. When not null, the item came from an extra selection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.OptionValue">
            
            The value of the option attribute. These values are associated and used by product bundles and options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.ProductName">
            
            The name of the product that represents a line item in a taxable order or product bundle.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.ProductShortDescription">
            
            Brief text description of the product or component in a product bundle, typically used when the product is displayed in a list or in search results.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.ProductType">
            
            The product type template associated with the product on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.Category">
            
            	A descriptive container that groups products. A category is merchant defined with associated products and discounts as configured. GThe storefront displays products in a hierarchy of categories. As such, categories can include a nesting of sub-categories to organize products and product options per set guidelines such as color, brand, material, and size.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.CategoryCode">
            
            External unique identifier of the category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.CategoryId">
            
            Unique identifier for the storefront container used to organize products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.ChildrenCategories">
            
            List of the subcategories in the hierarchy for the specified categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.Count">
            
            The number of facet results for a product search.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.IsDisplayed">
            
            Indicates if the object is displayed on the storefront. If true, the admin product category is displayed in the store. If true, the category is not displayed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.ParentCategory">
            
            If applicable, the parent category in the hierarchy for the specified category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.Sequence">
            
            The numeric order of objects, used by a vocabulary value defined for an extensible attribute, images, and categories.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.CategoryCollection">
            
            	The container for a non-paged list of related site-specific product category properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.CategoryContent">
            
            	Localized page content for a product category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.CategoryImages">
            
            Array list of media images associated to a product category. These images may be localized in the language specified by the LocaleCode. Images display with the category on the storefront according to the code and formatting of your site theme. Each image includes the name, alt text, and URL location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.Description">
            
            The localized description in text for the object, displayed per the locale code. For example, descriptions are used for product descriptions, attributes, and pre-authorization transaction types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.MetaTagDescription">
            
            Description defined for metadata, used to interally manage data, in the language specified by the `localeCode`. This content is used by categories, products, localized content, and SEO content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.MetaTagKeywords">
            
            Keywords defined for  metadata, used to internally manage data, in the language specified by the `localeCode`. Keywords are used by content for categories, products, localized content, and SEO content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.MetaTagTitle">
            
            Title defined for  metadata, used to internally manage data, in the language specified by the `localeCode`. Titles are used by content for categories, products, localized content, and SEO content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.PageTitle">
            
            Title that appears on new product category pages, in the language specified by the `localeCode`.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.Slug">
            
            Slug is used in place of a name, code, or ID to give an SEO, human-friendly URL link for an object, used by categories.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.CategoryImage">
            
            	Properties of an image or other media file associated with a product category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryImage.AltText">
            
            Descriptive text associated with the image or video that appears on the web storefront. This text displays on a hover-over in the browser, providing further information on the content displayed. The alternate text should be plain alphanumeric text without special characters or HTML coding.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryImage.CmsId">
            
            The identifier of the image in the Mozu CMS. Supply a value for either the CMS ID or Image URL parameter.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryImage.ImageLabel">
            
            The localized title for an image that displays on the storefront. If localized, the displayed content is set per the locale code for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryImage.ImageUrl">
            
            The URL link for the image file associated with a product or category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryImage.MediaType">
            
            Type of media specification required to successfully render the image, video, or other media content for products and categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryImage.Sequence">
            
            The numeric order of objects, used by a vocabulary value defined for an extensible attribute, images, and categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryImage.VideoUrl">
            
            The URL of a video files for a product or category. The path name is set in the language specified by the LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection">
            
            	The container for paged lists of related site-specific product category properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct">
            
            	Properties of a product configuration with shopper-selected options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.AvailableShippingDiscounts">
            
            List of shipping discounts that can be applied to the configured product. These discounts are calculated and updated as shoppers add content to their cart and continue checkout steps to order submission.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.FulfillmentTypesSupported">
            
            List of supported types of fulfillment  for the product or variation. The types include direct ship, in-store pickup, or both. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.InventoryInfo">
            
            Properties and data of inventory information for configured and bundled products. If product stock is managed, the data specifies out of stock behavior.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.MfgPartNumber">
            
            The manufacturer's part number for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.Options">
            
            List of option attributes configured for an object. These values are associated and used by products, product bundles, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.Price">
            
            Unit price that the tenant intends to sell the product if no sale price is set.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.PriceRange">
            
            For products with options that vary the cost of the product, the range between lowest and highest possible price of the product based on the current selection of options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.PurchasableState">
            
            The current state of the configured product determines whether or not the product is eligible for purchase. Products with options are only purchasable if the shopper has selected all required options. If the product is not ready for purchase, a message lists missing options that are required.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.Upc">
            
            The universal product code (UPC) is the barcode defined for the product. The UPC is unique across all sales channels. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.VariationProductCode">
            
            Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.Discount">
            
            	Name of the discount added and applied to a shopping cart and order for a shopper's purchase. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Discount.DiscountId">
            
            Unique identifier for the discount in the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Discount.ExpirationDate">
            
            Date and time in UTC format when a discount, credit, wish list, or cart expires. An expired discount no longer can be redeemed. An expired wish list is no longer available. An expired credit can no longer be redeemed for a purchase. Acart becomes inactive and expired based on a system-calculated interval. For example, if an anonymous shopper has 14 days of inactivity, the cart is considered abandoned after that period of inactivity. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Discount.FriendlyDescription">
            
            The localizable, shopper-facing description defined for a discount or a storefront message. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Discount.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.DiscountSelections">
            
            	The discounts to evaluate for a specified product code at the time of purchase.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.DiscountSelections.DiscountIds">
            
            List of discount IDs to evaluate for a product code.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.DiscountValidationSummary">
            
            	List of discounts the shopper can redeem for a product in its current state.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.DiscountValidationSummary.ApplicableDiscounts">
            
            List of discounts available per configured conditions and criteria. These discounts are associated with products, orders, and shipping costs. Shoppers can view these discounts per order, per product in an order, or for their shipping depending on the configuration.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.Facet">
            
            	Properties of the facet used to retrieve documents.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Facet.FacetType">
            
            The type of facet. Valid values are "range" (enables creation of a range of values) or "value" (populates the facet values based on the associated attribute or category).
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Facet.Field">
            
            The field name associated with the facet.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Facet.Label">
            
            Descriptive text used as a label for objects, such as field names, facets, date ranges, contact information, and package information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Facet.Values">
            
            List of value data for objects.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.FacetValue">
            
            	The value selected for a facet when indexing a product search.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.ChildrenFacetValues">
            
            If applicable, the values of any subcategory facets in a hierarchy. Hierarchical facets only apply for product categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.Count">
            
            The number of facet results for a product search.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.FilterValue">
            
            Submits the selected facet value as a facet value filter.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.IsApplied">
            
            If true, the facet value is applied as a filter in the storefront product search.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.IsDisplayed">
            
            Indicates if the object is displayed on the storefront. If true, the admin product category is displayed in the store. If true, the category is not displayed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.Label">
            
            Descriptive text used as a label for objects, such as field names, facets, date ranges, contact information, and package information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.ParentFacetValue">
            
            If applicable, the values of any parent category facets in a hierarchy. Hierarchical facets only apply for product categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.RangeQueryValueEnd">
            
            The maximum value selected or entered for the facet range query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.RangeQueryValueStart">
            
            The minimum value selected or entered for the facet range query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.LocationInventory">
            
            	Properties of an inventory definition that defines the level of inventory for a specific product at a given location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.LocationInventory.LocationCode">
            
            The unique, user-defined code that identifies a location. This location can be the location where the order was entered, location for newly in-stock products, and where products are returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.LocationInventory.ProductCode">
            
            The unique, user-defined  product code of a product, used throughout Mozu to reference and associate to a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.LocationInventory.SoftStockAvailable">
            
            Mozu.ProductRuntime.Contracts.LocationInventory softStockAvailable ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.LocationInventory.StockAvailable">
            
            The stock level for the associated product currently available, at specified locations, and based on the number of pending product reservations as applicable. System-supplied and read only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection">
            
            	Array list of inventory definitions that manage the stock level of products at a given location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.LocationInventoryQuery">
            
            	Properties for the product location inventory provided for queries to locate products by their location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.LocationInventoryQuery.LocationCodes">
            
            List of location codes to associate with the location usage. At this time, you can only specify one location code in the request for the direct ship location usage type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.LocationInventoryQuery.ProductCodes">
            
            List of product codes of associated products, used for pending product changes to publish or delete and returned in a product inventory location query.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.PackageMeasurements">
            
            	Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.PackageMeasurements.PackageHeight">
            
            Height of a package or bundle package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.PackageMeasurements.PackageLength">
            
            Length of a package or bundle package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.PackageMeasurements.PackageWeight">
            
            Weight of a package or bundle package in imperial units of pounds and ounces.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.PackageMeasurements.PackageWidth">
            
            Width of a package or bundle package in imperial units of feet and inches.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.Product">
            
            	The properties of a product, referenced and used by carts, orders, wish lists, and returns.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.AvailableShippingDiscounts">
            
            List of shipping discounts that can be applied to the configured product. These discounts are calculated and updated as shoppers add content to their cart and continue checkout steps to order submission.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.BundledProducts">
            
            Properties of a collection of component products that make up a single product bundle with its own product code. Tenants can define product bundles for any product type that supports the Bundle product usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Categories">
            
            The list of all categories associated with the product. These categories contain products, can have discounts associated, and define the grouping of products to display on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.CreateDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.FulfillmentTypesSupported">
            
            List of supported types of fulfillment  for the product or variation. The types include direct ship, in-store pickup, or both. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.GoodsType">
            
            The type of goods in a bundled product. A bundled product is composed of products associated to sell together. Possible values include “Physical” and “DigitalCredit”. This comes from the `productType `of the product. Products are defaulted to a Physical `goodsType`. Gift cards have a `goodsType `of DigitalCredit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.InventoryInfo">
            
            Properties and data of inventory information for configured and bundled products. If product stock is managed, the data specifies out of stock behavior.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.IsActive">
            
            Indicates if the object or feature is active. This indicator is used for subscriptions (at the site or tenant level), customer accounts, products and variations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.IsPackagedStandAlone">
            
            Indicates if the product must be shipped alone in a container. This is used for products and products within a bundle. If true, this product cannot be shipped in a package with other items and must ship in a package by itself.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.IsRecurring">
            
            Indicates if the product in a cart, order, or wish list is purchased on a recurring schedule. If true, the item can be purchased or fulfilled at regular intervals, such as a monthly billing cycle. For example, digital or physical product subscriptions are recurring cart items. This property is not used at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.IsTaxable">
            
            Indicates if the item is subject to taxation, used by products, options, extras, cart and order items, line items, and wish lists. If true, the entity is subject to tax based on the relevant tax rate and rules.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.MfgPartNumber">
            
            The manufacturer's part number for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.MfgPartNumbers">
            
            The list of manufacturer part numbers defined for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Options">
            
            List of option attributes configured for an object. These values are associated and used by products, product bundles, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Price">
            
            Unit price that the tenant intends to sell the product if no sale price is set.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.PriceRange">
            
            For products with options that vary the cost of the product, the range between lowest and highest possible price of the product based on the current selection of options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.PricingBehavior">
            
            Properties that describe the behavior the system uses when determining the price of products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.ProductSequence">
            
            Integer that represents the sequential order of the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.ProductType">
            
            The product type template associated with the product on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.ProductUsage">
            
            The usage type that applies to this product, which is Standard (a single product without configurable options), Configurable (a product that includes configurable option attributes), Bundle (a collection of products sold as a single entity), or Component (an invididual product that represents a component in a bundle).
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Properties">
            
            Collection of property attributes defined for the object. Properties are associated to all objects within Mozu, including documents, products, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.PublishState">
            
            The current state of the document or product definition. States for documents include Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft. States for product include New, Draft, or Live.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.PurchasableState">
            
            The current state of the configured product determines whether or not the product is eligible for purchase. Products with options are only purchasable if the shopper has selected all required options. If the product is not ready for purchase, a message lists missing options that are required.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Upc">
            
            The universal product code (UPC) is the barcode defined for the product. The UPC is unique across all sales channels. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.UpCs">
            
            The list of universal product codes defined for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.VariationProductCode">
            
            Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Variations">
            
            Mozu.ProductRuntime.Contracts.Product variations ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductCollection">
            
            	The container for a set of products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductContent">
            
            	Content associated with a product definition that can be localized.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.MetaTagDescription">
            
            Description defined for metadata, used to interally manage data, in the language specified by the `localeCode`. This content is used by categories, products, localized content, and SEO content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.MetaTagKeywords">
            
            Keywords defined for  metadata, used to internally manage data, in the language specified by the `localeCode`. Keywords are used by content for categories, products, localized content, and SEO content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.MetaTagTitle">
            
            Title defined for  metadata, used to internally manage data, in the language specified by the `localeCode`. Titles are used by content for categories, products, localized content, and SEO content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.ProductFullDescription">
            
            Lengthy full description for a product description, displayed on product detail pages within the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.ProductImages">
            
            List of image files associated with a product. This content may include the image file URL, name, and other information as available.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.ProductName">
            
            The name of the product that represents a line item in a taxable order or product bundle.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.ProductShortDescription">
            
            Brief text description of the product or component in a product bundle, typically used when the product is displayed in a list or in search results.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.SeoFriendlyUrl">
            
            The search engine optimized, human-readable portion of the URL. The content is localized according to the product's `localeCode`.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductImage">
            
            	Properties of an image defined for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.AltText">
            
            Descriptive text associated with the image or video that appears on the web storefront. This text displays on a hover-over in the browser, providing further information on the content displayed. The alternate text should be plain alphanumeric text without special characters or HTML coding.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.CmsId">
            
            The identifier of the image in the Mozu CMS. Supply a value for either the CMS ID or Image URL parameter.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.ImageLabel">
            
            The localized title for an image that displays on the storefront. If localized, the displayed content is set per the locale code for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.ImageUrl">
            
            The URL link for the image file associated with a product or category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.MediaType">
            
            Type of media specification required to successfully render the image, video, or other media content for products and categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.Sequence">
            
            The numeric order of objects, used by a vocabulary value defined for an extensible attribute, images, and categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.VideoUrl">
            
            The URL of a video files for a product or category. The path name is set in the language specified by the LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductInventoryInfo">
            
            	Properties of the inventory behavior associated with a product definition.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductInventoryInfo.ManageStock">
            
            Indicates is the item's stock is managed. If true, Mozu manages inventory levels for this product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductInventoryInfo.OnlineLocationCode">
            
            The location code for the direct ship location associated with the available online stock.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductInventoryInfo.OnlineSoftStockAvailable">
            
            Number of product items currently available for purchase.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductInventoryInfo.OnlineStockAvailable">
            
            The current number of products that are available for purchase.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductInventoryInfo.OutOfStockBehavior">
            
            Determines the method this product uses when active stock is depeleted. Options include "DisplayMessage" to display an out of stock message to the shopper, "HideProduct" to disable the product on the storefront, or "AllowBackOrder" to allow the shopper to back order the product. This property is required only if Mozu manages inventory for this product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductOption">
            
            	Properties of the product option to create such as attribute detail, fully qualified name, and list of product option values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOption.AttributeDetail">
            
            Detail data for a product or product options attribute. This acts as a wrapper for the properties to configure or generate from the system in the product Admin. Properties may include namespace, attribute code, attribute sequence, site group ID, input type, and value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOption.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOption.IsMultiValue">
            
            Indicates if the object has or can have multiple properties or values. If true, the object can have more than one value, selectable by shoppers through the storefront or configurable through the catalogs. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOption.IsRequired">
            
            Indicates if the property, attribute, product option, or product extra is required. If true, the object must have a defined value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOption.Values">
            
            List of value data for objects.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelection">
            
            	The selection the shopper made from a list of options set up in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelection.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelection.AttributeValueId">
            
            Unique identifier of the attribute's value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelection.ShopperEnteredValue">
            
            The value a shopper entered for an attribute that requires additional input for the product on a storefront. This entered value is a selected option or entered content for an extra, such as selecting a color or entering content for a monogram.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelection.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections">
            
            	For a product with shopper-configurable options, the properties of the product options selected by the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections.Options">
            
            List of option attributes configured for an object. These values are associated and used by products, product bundles, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections.VariationProductCode">
            
            Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue">
            
            	Properties of a value associated with a product option attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.AttributeValueId">
            
            Unique identifier of the attribute's value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.BundledProduct">
            
            The bundled product of a product as extra
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.DeltaPrice">
            
            The difference between associated prices for a product, variation option, or extra. The difference is calculated by subtracting the base price from the associated price with this product, option, and/or extra. For example, if a product with a defined monogram extra costs an additional $10, the `deltaPrice `value is "10". Between options, a price for a medium may be $10 and a large $12 giving a `deltaPrice `value of "2".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.DeltaWeight">
            
            The difference between the weight associated with this product, variation option, or extra and the base product. For example, if a product with a monogram weighs an extra 1/4 lb, the DeltaWeight value is "0.25". The amount of the delta is set by the weight type for the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.DisplayInfo">
            
            Defines the intended display of this attribute in the storefront. Options include Drop Down, Image Picker, and Radio Buttons.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.IsDefault">
            
            Indicates if the object is default. This indicator is used for product variations and site search settings. If true, the value/object is the default option. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.IsEnabled">
            
            Indicates if the object or process is enabled. This indicator is used on external payment workflows and product option values. For product options, if true, the product option value is available for a shopper to choose. During configuration, this property will be false if the option value is invalid with other selected options. For external payment workflows, if true, the workflow is enabled and available for routing payments for the submitted order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.IsSelected">
            
            If true, the entity is selected. If false, the entity is not selected.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.ShopperEnteredValue">
            
            The value a shopper entered for an attribute that requires additional input for the product on a storefront. This entered value is a selected option or entered content for an extra, such as selecting a color or entering content for a monogram.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.StringValue">
            
            If the object value is a String, this value provides that string value, used by vocabulary property values, products, and options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductPrice">
            
            	The price of the product in the specified currency code (USD). This price can either be the sale price or the price for which the merchang intends to sell the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPrice.CatalogListPrice">
            
            The list price of the product in the catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPrice.CatalogSalePrice">
            
            The sale price defined for the product in the catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPrice.CreditValue">
            
            The credit value of the product or bundled product. When the `goodsType `is `DigitalCredit`, this value is populated to indicate the value of the credit. This is used to create store credit in the fulfillment of gift cards.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPrice.Discount">
            
            Name of the discount added and applied to a shopping cart and order for a shopper's purchase. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPrice.Msrp">
            
            The manufacturer's suggested retail price for the product. This content may be defined by the supplier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPrice.Price">
            
            The price the merchant intends to charge for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPrice.PriceType">
            
            The price type that displays on the storefront website for the Price field, which is List, MAP, or CatalogSalePrice
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPrice.SalePrice">
            
            The set sale price for a product consisting of a price with a discount already applied.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPrice.SalePriceType">
            
            The price type that displays on the storefront website for the Sale Price field, which is CatalogSalePrice, DiscountedList, or DiscountedCatalogSalePrice
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductPriceRange">
            
            	For products with options that vary the cost of the product, the range between lowest and highest possible price of the product based on the current selection of options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPriceRange.Lower">
            
            The lowest possible price value for a product with options that vary the cost of the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPriceRange.Upper">
            
            Thw highest possible price value for a product with options that vary the cost of the product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductPricingBehaviorInfo">
            
            	Properties that describe the behavior the system uses when determining the price of the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPricingBehaviorInfo.DiscountsRestricted">
            
            Indicates if the discount is restricted. If true, the system cannot apply any discounts to this product. Discount restrictions are defined at the master catalog level. Client administrators cannot override discount restrictions at the catalog level, but they can limit the restriction to a defined time interval.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPricingBehaviorInfo.DiscountsRestrictedEndDate">
            
            The date and time on which the discount restriction period ends.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPricingBehaviorInfo.DiscountsRestrictedStartDate">
            
            The date and time on which the discount restriction period starts.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductProperty">
            
            	Details of a property defined for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductProperty.AttributeDetail">
            
            Detail data for a product or product options attribute. This acts as a wrapper for the properties to configure or generate from the system in the product Admin. Properties may include namespace, attribute code, attribute sequence, site group ID, input type, and value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductProperty.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductProperty.IsHidden">
            
            Indicates if the object is hidden or breaks inheritance, primarily used by facets, products, and attribute vocabulary values. For example, if true, the attribute vocabulary value does not appear in the list when defining a value for an attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductProperty.IsMultiValue">
            
            Indicates if the object has or can have multiple properties or values. If true, the object can have more than one value, selectable by shoppers through the storefront or configurable through the catalogs. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductProperty.Values">
            
            List of value data for objects.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductPropertyValue">
            
            	Properties of a value for a product property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPropertyValue.DisplayInfo">
            
            Defines the intended display of this attribute in the storefront. Options include Drop Down, Image Picker, and Radio Buttons.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPropertyValue.StringValue">
            
            If the object value is a String, this value provides that string value, used by vocabulary property values, products, and options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPropertyValue.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductPurchasableState">
            
            	The current state of the product purchase determines whether or not the product is eligible for purchase. Products with options are only purchasable if the shopper has selected all required options. If the product is not ready for purchase, a message lists missing options that are required.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPurchasableState.IsPurchasable">
            
            If true, the entity has met all requirements and considered a purchasable entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPurchasableState.Messages">
            
            Array list of validation and status messages associated with shipping rates, orders, and product purchasable state.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult">
            
            	The result of a product search.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult.Facets">
            
            The facets applied to index products in the product search result.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary">
            
            	Summary list of the product validation in a storefront, including options selected by the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.BundledProducts">
            
            Properties of a collection of component products that make up a single product bundle with its own product code. Tenants can define product bundles for any product type that supports the Bundle product usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Categories">
            
            The list of all categories associated with the product. These categories contain products, can have discounts associated, and define the grouping of products to display on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.FulfillmentTypesSupported">
            
            List of supported types of fulfillment  for the product or variation. The types include direct ship, in-store pickup, or both. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.GoodsType">
            
            The type of goods in a bundled product. A bundled product is composed of products associated to sell together. Possible values include “Physical” and “DigitalCredit”. This comes from the `productType `of the product. Products are defaulted to a Physical `goodsType`. Gift cards have a `goodsType `of DigitalCredit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Image">
            
            The image configured for the product on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.InventoryInfo">
            
            Properties and data of inventory information for configured and bundled products. If product stock is managed, the data specifies out of stock behavior.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.IsPackagedStandAlone">
            
            Indicates if the product must be shipped alone in a container. This is used for products and products within a bundle. If true, this product cannot be shipped in a package with other items and must ship in a package by itself.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.IsTaxable">
            
            Indicates if the item is subject to taxation, used by products, options, extras, cart and order items, line items, and wish lists. If true, the entity is subject to tax based on the relevant tax rate and rules.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.MfgPartNumber">
            
            The manufacturer's part number for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Price">
            
            Price that the merchant intends to sell the product which is not necessarily the list price. This is the price the merchant intends to sell the product if no sale price is present.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.PricingBehavior">
            
            Properties that describe the behavior the system uses when determining the price of products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.ProductName">
            
            The name of the product that represents a line item in a taxable order or product bundle.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.ProductShortDescription">
            
            Brief text description of the product or component in a product bundle, typically used when the product is displayed in a list or in search results.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.ProductType">
            
            The product type template associated with the product on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.ProductUsage">
            
            The usage type that applies to this product, which is Standard (a single product without configurable options), Configurable (a product that includes configurable option attributes), Bundle (a collection of products sold as a single entity), or Component (an invididual product that represents a component in a bundle).
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Properties">
            
            Collection of property attributes defined for the object. Properties are associated to all objects within Mozu, including documents, products, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.PurchasableState">
            
            The current state of the configured product determines whether or not the product is eligible for purchase. Products with options are only purchasable if the shopper has selected all required options. If the product is not ready for purchase, a message lists missing options that are required.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Upc">
            
            The universal product code (UPC) is the barcode defined for the product. The UPC is unique across all sales channels. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.VariationProductCode">
            
            Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.SearchSuggestion">
            
            	Suggest product search terms to a customer based on defined queries.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.SearchSuggestion.Suggestion">
            
            A suggested entity based on the search query. Use the SuggestionType to determine the type of entity. Could be a SearchTerm, Product, or Category
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.SearchSuggestion.SuggestionType">
            
            The type of Suggestion (e.g. Term, Product, Category). Will be one of the values of the SuggestionTypeConst type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.SearchSuggestionGroup">
            
            	A group of product search terms to suggest to a customer based on defined queries.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.SearchSuggestionGroup.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.SearchSuggestionGroup.Suggestions">
            
            List of related SearchSuggestions
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.SearchSuggestionResult">
            
            	The results of the suggested search terms made to the customer based on queries.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.SearchSuggestionResult.Query">
            
            Text that the shopper types in a search query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.SearchSuggestionResult.SuggestionGroups">
            
            List of SearchSuggestionGroups
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ValidationMessage">
            
            	Properties of a message displayed when a product validation failure occurs for a shopper in a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ValidationMessage.Message">
            
            The text of the change message, such as "This product is no longer available." System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ValidationMessage.Severity">
            
            The severity level of validation failures for shipping rates and products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ValidationMessage.Source">
            
            Source for an action or container for originating content. Source is used as an origin for validation and notification messages based on successful or failed actions. For originating content, source is used for the facet source information, including the category, price, or attribute properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ValidationMessage.SourceId">
            
            Unique identifier of the entity that triggered the validation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ValidationMessage.ValidationType">
            
            Type of validation error that occurred. This can be checked programatically.              Must be one of the values in ValidationTypeConst.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.VariationOption">
            
            	Mozu.ProductRuntime.Contracts.VariationOption ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.VariationOption.AttributeFQN">
            
            The fully qualified name of the attribute. The attributeDefiniteId may be used to generate this name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.VariationOption.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.VariationOption.ValueSequence">
            
            Mozu.ProductRuntime.Contracts.VariationOption valueSequence ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.VariationSummary">
            
            	Mozu.ProductRuntime.Contracts.VariationSummary ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.VariationSummary.InventoryInfo">
            
            Properties and data of inventory information for configured and bundled products. If product stock is managed, the data specifies out of stock behavior.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.VariationSummary.Options">
            
            List of option attributes configured for an object. These values are associated and used by products, product bundles, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.VariationSummary.ProductCode">
            
            The unique, user-defined  product code of a product, used throughout Mozu to reference and associate to a product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.AddressSchema">
            
            	Describes the structure of postal addresses based on the country specified. Because addresses vary from country to country, this schema allows a flexible storage structure.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchema.CountryCode">
            
            The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchema.CountryLabel">
            
            The label associated with this country.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchema.Fields">
            
            The list of fields to display for a view or an associated schema. For example, the address schema would display fields for postal addresses.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchema.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.AddressSchemaCollection">
            
            	The paged collection of address schema components.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchemaCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchemaCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.ContentLocale">
            
            	Properties of a content locale that determines the language and format used for a site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.ContentLocale.Code">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.ContentLocale.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.ContentLocaleCollection">
            
            	The paged collection of content locale codes that the system supports.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.ContentLocaleCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.ContentLocaleCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.Country">
            
            	The 2-letter code and corresponding country name that the system supports.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Country.Code">
            
            The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Country.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.CountryCollection">
            
            	The paged collection of country codes and their corresponding names.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CountryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CountryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.CountryWithStates">
            
            	A country and its states. Contrains the 2-letter geographic code representing the country and any states within the country.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CountryWithStates.Code">
            
            The two character country code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CountryWithStates.States">
            
            The state code, name, and tags, if applicable. 
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.CountryWithStatesCollection">
            
            	The paged collection of country codes and their corresponding names. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CountryWithStatesCollection.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CountryWithStatesCollection.TotalCount">
            
            Total number of objects in am item collection. Total counts are calculated for numerous objects in Mozu, including location inventory, products, options, product types, product reservations, categories, addresses, carriers, tax rates, time zones, and much more.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.Currency">
            
            	Three-letter currency code that the system supports, which is derived from the ISO 4217 standard. For example, the code "EUR" for the name "Euro Member Countries" is an entry that returns in a list of items.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Currency.Code">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Currency.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.CurrencyCollection">
            
            	The paged collection of currency codes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CurrencyCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CurrencyCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.Field">
            
            	A property that is a wrapper for additional properties pertaining to the schema such as the type, label, any associated data, an ID, and the order of the response.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Field.Data">
            
            Data for the field property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Field.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Field.Label">
            
            Descriptive text used as a label for objects, such as field names, facets, date ranges, contact information, and package information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Field.Order">
            
            Integer that represents the sequence order of the attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Field.Type">
            
            Type of field.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.FieldData">
            
            	The field property that describes the type of information pertaining to how the field renders and functions.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.FieldData.Code">
            
            Code of the field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.FieldData.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.State">
            
            	The state code, name, and tags, if applicable. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.State.Code">
            
            The two character state code. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.State.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.State.Tags">
            
            Distinguishing information about a state, such as IsArmedForces or IsUSTerritory
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.TimeZone">
            
            	A world date and time standard such as "Dateline Standard Time" or "UTC-12".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TimeZone.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TimeZone.IsDaylightSavingsTime">
            
            If true, the time zone standard observes daylight savings time advancements, for example, twice a year so that evenings have more daylight and mornings have less. If false, the time zone standard does not adhere to daylight savings changes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TimeZone.Offset">
            
            The offset associated with the time zone, such as "-12".
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.TimeZoneCollection">
            
            	The paged collection of time zone properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TimeZoneCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TimeZoneCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.TopLevelDomainCollection">
            
            	The paged collection of all top level internet domains that the system supports including general, USA-specific, infrastructure, and country codes. The Internet Assigned Numbers Authority (IANA) maintains this list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TopLevelDomainCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TopLevelDomainCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.UnitOfMeasure">
            
            	Properties to describe the unit of measure.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasure.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasure.PluralName">
            
            The plural name of the unit of measure, such as "feet".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasure.Symbol">
            
            The abbreviated symbol for the unit of measure, such as "ft".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasure.UnitOfMeasureType">
            
            The type of measurement, such as length or volume.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection">
            
            	The paged collection of all units of measure that the system currently supports.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.CarrierRatesResponse">
            
            	Arrayed list of calculated shipping rates for the specified carrier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.CarrierRatesResponse.CarrierId">
            
            Unique identifier of the shipping carrier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.CarrierRatesResponse.CustomAttributes">
            
            Collection of carrier-specific key-value attribute pairs associated with a shipping carrier. These are required to retrieve a shipping rate request and are returned for the generated shipping label.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.CarrierRatesResponse.ShippingRates">
            
            Array list of calculated shipping rates for the specified carrier.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.Category">
            
            	A descriptive container that groups products. A category is merchant defined with associated products and discounts as configured. GThe storefront displays products in a hierarchy of categories. As such, categories can include a nesting of sub-categories to organize products and product options per set guidelines such as color, brand, material, and size.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.Category.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.Category.Parent">
            
            If applicable, the parent category in the category tree. This can be associated to a product as the parent category.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.CustomAttribute">
            
            	Properties of a custom attribute used to integrate with a shipping provider, which consists of an array of necessary key-value pairs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.CustomAttribute.ChildAttributes">
            
            Collection of child attributes associated with a shipping provider integration.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.CustomAttribute.Key">
            
            Key used for metadata defined for objects, including extensible attributes, custom attributes associated with a shipping provider, and search synonyms definitions. This content may be user-defined depending on the object and usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.CustomAttribute.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.ItemMeasurements">
            
            	Measured weight and dimensions of the packaged item to be shipped.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ItemMeasurements.Girth">
            
            Girth of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ItemMeasurements.Height">
            
            Height of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ItemMeasurements.Length">
            
            Length of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ItemMeasurements.Weight">
            
            Weight of the package in imperial units of pounds and ounces.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ItemMeasurements.Width">
            
            Width of the package in imperial units of feet and inches.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.ProductOption">
            
            	Properties of the product option to create such as attribute detail, fully qualified name, and list of product option values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ProductOption.AttributeFQN">
            
            The fully qualified name of the attribute. The attributeDefiniteId may be used to generate this name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ProductOption.DataType">
            
            The data type of the source product property, typically of type Bool, DateTime, Number, or String.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ProductOption.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.ProductProperty">
            
            	Details of a property defined for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ProductProperty.AttributeFQN">
            
            The fully qualified name of the attribute. The attributeDefiniteId may be used to generate this name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ProductProperty.DataType">
            
            The data type of the source product property, typically of type Bool, DateTime, Number, or String.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ProductProperty.Values">
            
            List of value data for objects.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.ProductSummary">
            
            	Properties of summary data for a product, including all data for name, code, categories, options, types, measurements, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ProductSummary.Categories">
            
            The list of all categories associated with the product. These categories contain products, can have discounts associated, and define the grouping of products to display on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ProductSummary.Options">
            
            List of option attributes configured for an object. These values are associated and used by products, product bundles, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ProductSummary.ProductCode">
            
            The unique, user-defined  product code of a product, used throughout Mozu to reference and associate to a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ProductSummary.ProductType">
            
            The product type template associated with the product on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ProductSummary.Properties">
            
            Collection of property attributes defined for the object. Properties are associated to all objects within Mozu, including documents, products, and product types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ProductSummary.UnitMeasurements">
            
            Product specific dimensions used for shipping, used by product summary and rate request items.  The dimensions can differ between the two uses as a `RateRequestItem `package may contain one or more products.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.RateRequest">
            
            	Properties required to request a shipping rate calculation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequest.CarrierIds">
            
            List of shipping carriers for which to retrieve shipping rate information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequest.CustomAttributes">
            
            Collection of carrier-specific key-value attribute pairs associated with a shipping carrier. These are required to retrieve a shipping rate request and are returned for the generated shipping label.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequest.Data">
            
            Mozu.ShippingRuntime.Contracts.RateRequest data ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequest.DestinationAddress">
            
            The physical address orders are sent to as a shipping destination. This address may contain multiple lines, city, state/province, country, and zip/postal code. The destination is used to calculate shipping costs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequest.EstimatedShipmentDate">
            
            The estimated date and time the shipment will be shipped to the shopper. This calculation is based on product stock, availability, date of order entry, and location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequest.IsDestinationAddressCommercial">
            
            If true, the destination address associated with the shipping rate request is a commercial address.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequest.IsoCurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequest.Items">
            
            Collection list of items. All returned data is provided in an items array. For a failed request, the returned response may be success with an empty item collection. Items are used throughout APIs for carts, wish lists, documents, payments, returns, properties, and more.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequest.OrderTotal">
            
            The total monetary amount of the order. This amount is used to calculate the shipping rate estimate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequest.OriginAddress">
            
            The physical address from which the order or shipment will ship.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequest.ShippingServiceTypes">
            
            The shipping methods associated with this request.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.RateRequestItem">
            
            	Properties of an item for which to calculate a shipping rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequestItem.Data">
            
            Mozu.ShippingRuntime.Contracts.RateRequestItem data ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequestItem.ItemId">
            
            Unique identifier of an item used to calculate or request a shipping rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequestItem.ProductSummaries">
            
            If Product Summaries are populated, this information will be utilized in Product Rules (e.g. ProductCode eq "ABC" or (Weight.Unit eq "lbs" and Weight.Value ge 50)
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequestItem.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequestItem.ShipsByItself">
            
            If true, this item must ship separately from other items in a shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequestItem.UnitMeasurements">
            
            Product specific dimensions used for shipping, used by product summary and rate request items.  The dimensions can differ between the two uses as a `RateRequestItem `package may contain one or more products.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.RatesResponse">
            
            	Properties of the calculated shipping rate based on the information supplied in the request.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RatesResponse.Rates">
            
            Arrayed list of calculated shipping rates for each assocuated carrier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RatesResponse.ResolvedShippingZoneCode">
            
            Resolved Shipping Zone Code. This value can be null if the tenant/site does not have shipping zones defined or there are no matching shipping zones for the request (e.g. the only zone defined is "UNITED-STATES" and the destination address of the rate request is in Canada)
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RatesResponse.ShippingZoneCodes">
            
            A code denoting a zone for shipping rates. Zip and postal codes are associated to these zones, determining set rates and costs for shipping origin and destination points.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.ShippingItemRate">
            
            	Properties of a shipping rate calculated for a line item in a shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingItemRate.Amount">
            
            The calculated shipping amount for an item in a shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingItemRate.ItemId">
            
            Unique identifier of an item used to calculate or request a shipping rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingItemRate.Quantity">
            
            The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.ShippingRate">
            
            	Properties of a shipping rate calculated for a specified carrier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRate.Amount">
            
            The total calculated shipping amount requested for the package or shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRate.Code">
            
            The carrier-defined alphanumeric code associated with this shipping rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRate.Content">
            
            Localizable content (such as a name and/or description) for an attribute. The content may be localized when displayed according to the locale code specified by the master catalog. Content can include descriptive text for product extensible attributes, catalog-level descriptions (displayed if isContentOverriden is true), product bundles, and customer account notes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRate.CustomAttributes">
            
            Collection of carrier-specific key-value attribute pairs associated with a shipping carrier. These are required to retrieve a shipping rate request and are returned for the generated shipping label.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRate.Data">
            
            Mozu.ShippingRuntime.Contracts.ShippingRate data ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRate.DaysInTransit">
            
            The number of days the shipment will spend between the origin address and the destination address.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRate.Messages">
            
            Array list of validation and status messages associated with shipping rates, orders, and product purchasable state.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRate.ShippingItemRates">
            
            Properties of a calculated shipping rate for individual line items in a shipment.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.ShippingRateLocalizedContent">
            
            	The name of the shipping rate in the language specified by the defined locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRateLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRateLocalizedContent.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.ShippingRateValidationMessage">
            
            	Properties of a success/failure message notification associated with validating a shipping rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRateValidationMessage.HelpLink">
            
            URL displayed with the shipping validation message that links to help information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRateValidationMessage.Message">
            
            The text of the change message, such as "This product is no longer available." System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRateValidationMessage.Severity">
            
            The severity level of validation failures for shipping rates and products.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Application.Application">
            
            	Properties of an application installed in a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.AppId">
            
            Unique identifier of an app available in your Mozu tenant or within Mozu Dev Center. This ID is unique across all apps installed, initialized, and enabled in the Mozu Admin and those in development through the Dev Center Console.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.AppKey">
            
            denotes the Application Key for the app.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.Capabilities">
            
            List of capabilities installed in a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.Enabled">
            
            Indicates if the capability or app is enabled for the tenant/site. If true, the capability/application is enabled for the tenant. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.Initialized">
            
            Indicates if an app is initialized and capable of being enabled in the tenant and site. Apps will need to be installed and configured to become initialized, such as validating credentials and/or API keys with a third-party service. If true, the app is initialized and can be enabled for usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.IsExtension">
            
            Indicates if the installed application is of type extension. If true, the application type is Extension.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.UiConfigurationUrl">
            
            The URL defined for the application that represents the configuration website for the capability. This value is used by installed applications or the site.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Application.Capability">
            
            	Properties of a capability application installed in a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.ActiveCreditTypes">
            
            Array list of credit types active for the capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.ActiveShippingCountries">
            
            Array list of the countries (by country code) to which this capability can actively ship. The entered shipping country is validated against a list of supported shipping countries. Messages return if the country code is not supported or duplicated. Supported carriers are also checked per country code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.ActiveShoppingCountries">
            
            Array list of the countries (by country code) for which this capability can actively shop. All active shopping countries must be in the supported shopping country list. Validation rules determine the supported validity of the entered country against the list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.CapabilityMode">
            
            The enablement mode of the capability, typically read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.CapabilityType">
            
            The capability type installed in the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.Enabled">
            
            Indicates if the capability or app is enabled for the tenant/site. If true, the capability/application is enabled for the tenant. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.Initialized">
            
            Indicates if an app is initialized and capable of being enabled in the tenant and site. Apps will need to be installed and configured to become initialized, such as validating credentials and/or API keys with a third-party service. If true, the app is initialized and can be enabled for usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.OperationUrls">
            
            Array list of URL endpoints for the operations associated with this capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.ScopeId">
            
            The ID of the specific scope for the object. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.ScopeType">
            
            The scope at which the object exists, such as "Tenant", "MasterCatalog", or "Site". Scope delineates the level and area of Mozu the object exists within or affects.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.SupportedCreditTypes">
            
            List of credit types this capability supports.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.SupportedShippingCountries">
            
            Array list of countries this capability supports for shipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.SupportedShoppingCountries">
            
            List of countries this capability supports for shopping.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings">
            
            	Mozu.SiteSettings.General.Contracts.EmailTransactionSettings ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.BackInStock">
            
            Mozu.SiteSettings.General.Contracts.EmailTransactionSettings backInStock ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.GiftCardCreated">
            
            Mozu.SiteSettings.General.Contracts.EmailTransactionSettings giftCardCreated ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.OrderChanged">
            
            Mozu.SiteSettings.General.Contracts.EmailTransactionSettings orderChanged ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.OrderFulfillmentDetailsChanged">
            
            Mozu.SiteSettings.General.Contracts.EmailTransactionSettings orderFulfillmentDetailsChanged ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.OrderShipped">
            
            Mozu.SiteSettings.General.Contracts.EmailTransactionSettings orderShipped ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.RefundCreated">
            
            Mozu.SiteSettings.General.Contracts.EmailTransactionSettings refundCreated ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.ReturnAuthorized">
            
            Mozu.SiteSettings.General.Contracts.EmailTransactionSettings returnAuthorized ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.ReturnCancelled">
            
            There is no corresponding template for this in the Core theme.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.ReturnClosed">
            
            This controls "email/product-return-received" in the Core theme.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.ReturnCreated">
            
            Mozu.SiteSettings.General.Contracts.EmailTransactionSettings returnCreated ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.ReturnRejected">
            
            Mozu.SiteSettings.General.Contracts.EmailTransactionSettings returnRejected ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.ReturnUpdated">
            
            Mozu.SiteSettings.General.Contracts.EmailTransactionSettings returnUpdated ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.ShopperLoginCreated">
            
            Mozu.SiteSettings.General.Contracts.EmailTransactionSettings shopperLoginCreated ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.ShopperPasswordReset">
            
            Mozu.SiteSettings.General.Contracts.EmailTransactionSettings shopperPasswordReset ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.StoreCreditCreated">
            
            Mozu.SiteSettings.General.Contracts.EmailTransactionSettings storeCreditCreated ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.EmailTransactionSettings.StoreCreditUpdated">
            
            The corresponding topic is not currently used by Mozu.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.General.General.ViewAuthorizations">
            
            	Mozu.SiteSettings.General.Contracts.General.ViewAuthorizations ApiType DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.General.ViewAuthorizations.RequireAuthForLive">
            
            Mozu.SiteSettings.General.Contracts.General.ViewAuthorizations requireAuthForLive ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.General.ViewAuthorizations.RequireAuthForPending">
            
            Mozu.SiteSettings.General.Contracts.General.ViewAuthorizations requireAuthForPending ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings">
            
            	General settings used on the storefront site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.AllowInvalidAddresses">
            
            If true, the site allows entry of addresses not verified by an address validation service.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.FavIconMobilePath">
            
            The physical directory path or URL where the mobile favicon image file is stored. The favicon icon is generally 57x57 pixels. The icon appears on a mobile website or on the mobile device's OS Home.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.FavIconPath">
            
            The physical directory path or URL where the mobile favicon image file is stored. The favicon icon is generally 16x16 pixels. The icon appears on a a browser tab as the website's mini logo or on a browser address bar, or next to the page name in a list of bookmarks.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.GoogleAnalyticsCode">
            
            The Google Analytics code associated with a particular store. This could be the web tracking code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.IsAddressValidationEnabled">
            
            If true, a service to verify addresses as valid is enabled for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.IsGoogleAnalyticsEcommerceEnabled">
            
            If true, the Google analytics for eCommerce is enabled for this site. If false, the analytics are not enabled.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.IsGoogleAnalyticsEnabled">
            
            If true, enable Google analytics for this site. If false, analytics are not enabled.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.IsMozuWebSite">
            
            If true, this site represents a Mozu-hosted web storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.IsWishlistCreationEnabled">
            
            If true, shoppers on this site can create customer wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.LogoPath">
            
            The physical directory path or URL where the website logo is stored.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.LogoText">
            
            The tagline or text that appears when hovering over the site logo.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.MobileTheme">
            
            The name of the theme to use when viewing this website on a mobile device.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.ReplyToEmailAddress">
            
            Email address to display on email messages sent from the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.SenderEmailAddress">
            
            Email address to set up so that shoppers and users browsing the site can use to contact the merchant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.SenderEmailAlias">
            
            Email alias used in emails sent to your shoppers.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.SiteTimeFormat">
            
            Choose a format to use on the site: 12-hour (hh:mm:ss tt) or 24-hour format (HH:mm:ss).
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.SiteTimeZone">
            
            Choose the time zone to use for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.SupressedEmailTransactions">
            
            Supressed emails. Setting any of these to 'true' will block Mozu from sending that email and an event will be published instead.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.TabletTheme">
            
            The name of the theme to use when viewing the website on a mobile device.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.TaxableTerritories">
            
            The territories configured for the site that are subject to sales tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.TemplateSiteId">
            
            Unique identifier of the tenant site that site uses to render content for the shopper. For example, if this site represents a third-party sales channel such as Amazon but the company wants to send shopper emails, this value represents the Mozu-hosted web storefront site that maintains this content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.Theme">
            
            The name of the theme used on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.ViewAuthorizations">
            
            Mozu.SiteSettings.General.Contracts.GeneralSettings viewAuthorizations ApiTypeMember DOCUMENT_HERE 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.WebsiteName">
            
            The name of the website to display on the storefront with no spaces.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory">
            
            	Properties of the territory which is subject to sales tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory.CountryCode">
            
            The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory.IsShippingTaxable">
            
            If true, all shipping charges for this territory are subject to sales tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory.StateOrProvinceCode">
            
            The two-letter geographic code representing the state for the physical or mailing address. This is currently limited to the US.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings">
            
            	Settings used when checking out an active order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings.CustomerCheckoutSettings">
            
            Settings for the checkout login. Choose whether or not shoppers must first login before a purchase can be processed. Choose the option for guests to purchase without logging in, prompt guests to login, or require them to login before a purchase can be completed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings.OrderProcessingSettings">
            
            Credit card payment authorization setting defined for the site for order processing.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings.PaymentSettings">
            
            Payment gateway settings defined for the site. A payment gateway is an eCommerce application service provider that authorizes payments for eBusinesses, online retailers, and other stores that have an online commerce component. Currently, only the Authorize.net gateway is supported.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings">
            
            	The properties of the customer checkout settings such as whether shoppers must be logged in.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings.CustomerCheckoutType">
            
            The type of customer checking out in the order such as a guest who has not logged in or a customer who has logged in. Valid strings are either "LoginOptional," where shoppers are prompted to sign in but are not required to do so, or "LoginRequired," where shopppers must login before purchasing.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.ExternalPaymentWorkflowDefinition">
            
            	Properties of an external payment processing workflow defined for the site. At this time, only PayPal Express is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.ExternalPaymentWorkflowDefinition.Credentials">
            
            The credential fields required to communicate with the external payment processor.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.ExternalPaymentWorkflowDefinition.IsEnabled">
            
            Indicates if the object or process is enabled. This indicator is used on external payment workflows and product option values. For product options, if true, the product option value is available for a shopper to choose. During configuration, this property will be false if the option value is invalid with other selected options. For external payment workflows, if true, the workflow is enabled and available for routing payments for the submitted order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.ExternalPaymentWorkflowDefinition.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.Gateway">
            
            	Properties of a payment gateway defined for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.Gateway.AreGatewayCredentialFieldsSet">
            
            If true, the credential fields for the gateway are configured with valid values. For security purposes, Mozu does not return the credential fields for the gateway subresource.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.Gateway.GatewayAccount">
            
            Account information associated with the specified payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.Gateway.GatewayDefinition">
            
            Properties of the payment gateway definition.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.Gateway.SupportedCards">
            
            The types of credit cards supported by the payment gateway.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings">
            
            	Settings that determine how orders are processed and order payments are authorized for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings.AbandonedOrderThresholdInMinutes">
            
            Abandoned order threshold in minutes indicates the number of minutes until a pending order is considered abandoned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings.PaymentProcessingFlowType">
            
            Determines whether payment authorization occurs when the order is placed or when the order is shipped.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings.UseOverridePriceToCalculateDiscounts">
            
            If true, use the override price defined for products in the order to calculate discounts for the order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings">
            
            	Properties of the payment settings used at order checkout time for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings.ExternalPaymentWorkflowDefinitions">
            
            The external payment workflwo definitions configured for the site's payment settings. At this time, only PayPal Express is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings.Gateways">
            
            List of name and account information for a payment gateway. Additional payment gateway providers will be supported in future releases.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings.PayByMail">
            
            Settings that provide for the ability to pay for an order by mail.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.ThirdPartyCredentialField">
            
            	The properties of the credentials required to communicate with the external payment processor.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.ThirdPartyCredentialField.ApiName">
            
            System-supplied API name required to communicate with the external payment processor.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.ThirdPartyCredentialField.DisplayName">
            
            The name that displays for the payment gateway or third-party credentials field. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.ThirdPartyCredentialField.Value">
            
            The value of a property, used by numerous objects within Mozu including facets, attributes, products, localized content, metadata, capabilities (Mozu and third-party), location inventory adjustment, and more. The value may be a string, integer, or double. Validation may be run against the entered and saved values depending on the object type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee">
            
            	Properties of the handling fee to apply to order shipments for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee.Amount">
            
            The amount of the order handling fee.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings">
            
            	Properties of the shipping settings configured for an individual site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings.OrderHandlingFee">
            
            The combined price for all items in the order, including all selected options but excluding any discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings.SignatureRequirement">
            
            Properties of the package signature requirements for the site.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSignatureRequirement">
            
            	Properties of the shipment signature requirements for the specified site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSignatureRequirement.IsSignatureRequired">
            
            If true, this site requires signatures on shipments for orders that exceed the minimum value threshold.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSignatureRequirement.MinimumValueThreshold">
            
            The minimum order amount that requires a signature on shipments. For example, if you want to require customer signatures on all orders over $5,000, the MinimumValueThreshold would be 5001.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.Catalog">
            
            	Properties of an individual product catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.CreateDate">
            
            The date time in UTC format set when the object was created. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.DefaultCurrencyCode">
            
            The default three-letter ISO currency code for monetary amounts. Currently, only "USD" is supported for U.S. Dollar.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.DefaultLocaleCode">
            
            The two-letter default locale code for setting the localized text content. Currently, only "en-US" is supported for U.S. English.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.DeleteDate">
            
            The date and time the object was deleted. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.IsDeleted">
            
            Indicates if the object is deleted. If true, the object has been deleted. This may affect associated child members and objects. For example, a deleted master catalog affects all associated catalogs. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.MasterCatalogId">
            
            Unique identifier for the master catalog. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.Status">
            
            The current status of an object. This status is specific to the object including payment (New, Authorized, Captured, Declined, Failed, Voided, Credited, CheckRequested, or RolledBack), discount (Active, Scheduled, or Expired), returns (ReturnAuthorized), tenant, package (Fulfilled or NotFulfilled), application, master and product catalogs, orders (Pending, Submitted, Processing, Pending Review, Closed, or Canceled), and order validation results (Pass, Fail, Error, or Review).
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.UpdateDate">
            
            The date and time the object was updated most recently. The date is in UTC format.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.MasterCatalog">
            
            	Properties of a master product catalog defined for a tenant. All catalogs and sites associated with a master catalog share product definitions.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.Catalogs">
            
            Collection of product catalogs that use product definitions from the master catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.CreateDate">
            
            The date time in UTC format set when the object was created. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.DefaultCurrencyCode">
            
            The default three-letter ISO currency code for monetary amounts. Currently, only "USD" is supported for U.S. Dollar.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.DefaultLocaleCode">
            
            The two-letter default locale code for setting the localized text content. Currently, only "en-US" is supported for U.S. English.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.DeleteDate">
            
            The date and time the object was deleted. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.Id">
            
            Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.IsDeleted">
            
            Indicates if the object is deleted. If true, the object has been deleted. This may affect associated child members and objects. For example, a deleted master catalog affects all associated catalogs. 
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.Status">
            
            The current status of an object. This status is specific to the object including payment (New, Authorized, Captured, Declined, Failed, Voided, Credited, CheckRequested, or RolledBack), discount (Active, Scheduled, or Expired), returns (ReturnAuthorized), tenant, package (Fulfilled or NotFulfilled), application, master and product catalogs, orders (Pending, Submitted, Processing, Pending Review, Closed, or Canceled), and order validation results (Pass, Fail, Error, or Review).
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.UpdateDate">
            
            The date and time the object was updated most recently. The date is in UTC format.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.Site">
            
            	Properties of a site associated with a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.CatalogId">
            
            The unique identifier of the catalog of products used by a site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.Domain">
            
            The domain associated with the site and/or tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.PrimaryCustomDomain">
            
            The primary custom domain of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.Tenant">
            
            	Properties of a tenant, which the logical grouping of all a company's sites and catalogs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.Domain">
            
            The domain associated with the site and/or tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.Id">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.IsDevTenant">
            
            Indicates if the tenant is a development tenant. If true, the tenant represents a collection of master catalogs and catalogs for a development tenant, used by a developer account to test applications and themes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.MasterCatalogs">
            
            Collection of master catalogs associated with the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.Name">
            
            The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.Sites">
            
            Collection of sites associated with the tenant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.TenantCollection">
            
            	Collection of tenants, which represent the logical grouping for a company's sites and catalogs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.TenantCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.TenantCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.TenantCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.TenantCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.TenantCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Admin.LocationResource">
            <summary>
            Use the Locations resource to manage each physical location associated with a tenant. Locations enable tenants to associate a physical address with product inventory, provide a store finder for in-store pickup, or both. Locations that support inventory can use both direct ship and in-store pickup fulfillment types.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Admin.LocationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationResource.GetLocations(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of all locations associated with a tenant, according to any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationCollection"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var locationCollection = location.GetLocations( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationResource.GetLocationsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of all locations associated with a tenant, according to any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationCollection"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var locationCollection = await location.GetLocationsAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationResource.GetLocation(System.String,System.String)">
            <summary>
            Retrieves the details of the location specified in the request by location code.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.GetLocation( locationCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationResource.GetLocationAsync(System.String,System.String)">
            <summary>
            Retrieves the details of the location specified in the request by location code.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = await location.GetLocationAsync( locationCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationResource.AddLocation(Mozu.Api.Contracts.Location.Location,System.String)">
            <summary>
            Creates a new physical location for the tenant specified in the request header.
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="location">Properties of a physical location a tenant uses to manage inventory and fulfills orders, provide store finder functionality, or both.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.AddLocation( location,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationResource.AddLocationAsync(Mozu.Api.Contracts.Location.Location,System.String)">
            <summary>
            Creates a new physical location for the tenant specified in the request header.
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="location">Properties of a physical location a tenant uses to manage inventory and fulfills orders, provide store finder functionality, or both.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = await location.AddLocationAsync( location,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationResource.UpdateLocation(Mozu.Api.Contracts.Location.Location,System.String,System.String)">
            <summary>
            Updates one or more details of a the location specified in the request by location code.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="location">Properties of a physical location a tenant uses to manage inventory and fulfills orders, provide store finder functionality, or both.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.UpdateLocation( location,  locationCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationResource.UpdateLocationAsync(Mozu.Api.Contracts.Location.Location,System.String,System.String)">
            <summary>
            Updates one or more details of a the location specified in the request by location code.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="location">Properties of a physical location a tenant uses to manage inventory and fulfills orders, provide store finder functionality, or both.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = await location.UpdateLocationAsync( location,  locationCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationResource.DeleteLocation(System.String)">
            <summary>
            Deletes the location specified in the request.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <returns>
            
            </returns>
            <example>
            <code>
              var location = new Location();
              location.DeleteLocation( locationCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationResource.DeleteLocationAsync(System.String)">
            <summary>
            Deletes the location specified in the request.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <returns>
            
            </returns>
            <example>
            <code>
              var location = new Location();
              await location.DeleteLocationAsync( locationCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource">
            <summary>
            Use the Location Types resource to manage the types of locations your tenant maintains, such as warehouses, physical storefronts, and kiosks.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource.GetLocationTypes">
            <summary>
            Retrieve a list of all location types defined for the tenant.
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Location.LocationType"/>}
            </returns>
            <example>
            <code>
              var locationtype = new LocationType();
              var locationType = locationtype.GetLocationTypes();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource.GetLocationTypesAsync">
            <summary>
            Retrieve a list of all location types defined for the tenant.
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Location.LocationType"/>}
            </returns>
            <example>
            <code>
              var locationtype = new LocationType();
              var locationType = await locationtype.GetLocationTypesAsync();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource.GetLocationType(System.String,System.String)">
            <summary>
            Retrieves the details of the location type specified in the request.
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationType"/>
            </returns>
            <example>
            <code>
              var locationtype = new LocationType();
              var locationType = locationtype.GetLocationType( locationTypeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource.GetLocationTypeAsync(System.String,System.String)">
            <summary>
            Retrieves the details of the location type specified in the request.
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationType"/>
            </returns>
            <example>
            <code>
              var locationtype = new LocationType();
              var locationType = await locationtype.GetLocationTypeAsync( locationTypeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource.AddLocationType(Mozu.Api.Contracts.Location.LocationType,System.String)">
            <summary>
            Creates a new location type based on the information specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="locationType">Properties of a type of physical location, such as warehouse or kiosk. Location types enable tenants to group similar locations for filtering and location usage type definition.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationType"/>
            </returns>
            <example>
            <code>
              var locationtype = new LocationType();
              var locationType = locationtype.AddLocationType( locationType,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource.AddLocationTypeAsync(Mozu.Api.Contracts.Location.LocationType,System.String)">
            <summary>
            Creates a new location type based on the information specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="locationType">Properties of a type of physical location, such as warehouse or kiosk. Location types enable tenants to group similar locations for filtering and location usage type definition.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationType"/>
            </returns>
            <example>
            <code>
              var locationtype = new LocationType();
              var locationType = await locationtype.AddLocationTypeAsync( locationType,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource.UpdateLocationType(Mozu.Api.Contracts.Location.LocationType,System.String,System.String)">
            <summary>
            Updates the name of a defined location type.
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="locationType">Properties of a type of physical location, such as warehouse or kiosk. Location types enable tenants to group similar locations for filtering and location usage type definition.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationType"/>
            </returns>
            <example>
            <code>
              var locationtype = new LocationType();
              var locationType = locationtype.UpdateLocationType( locationType,  locationTypeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource.UpdateLocationTypeAsync(Mozu.Api.Contracts.Location.LocationType,System.String,System.String)">
            <summary>
            Updates the name of a defined location type.
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="locationType">Properties of a type of physical location, such as warehouse or kiosk. Location types enable tenants to group similar locations for filtering and location usage type definition.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationType"/>
            </returns>
            <example>
            <code>
              var locationtype = new LocationType();
              var locationType = await locationtype.UpdateLocationTypeAsync( locationType,  locationTypeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource.DeleteLocationType(System.String)">
            <summary>
            Deletes the location type specified in the request.
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var locationtype = new LocationType();
              locationtype.DeleteLocationType( locationTypeCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource.DeleteLocationTypeAsync(System.String)">
            <summary>
            Deletes the location type specified in the request.
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var locationtype = new LocationType();
              await locationtype.DeleteLocationTypeAsync( locationTypeCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.CartResource">
            <summary>
            Use this resource to manage storefront shopping carts as shoppers add and remove items for purchase. Each time a shopper's cart is modified, the Carts resource updates the estimated total with any applicable discounts.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.CartResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetCart(System.String,System.String)">
            <summary>
            Retrieves the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = cart.GetCart( cartId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetCartAsync(System.String,System.String)">
            <summary>
            Retrieves the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = await cart.GetCartAsync( cartId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetOrCreateCart(System.String)">
            <summary>
            Retrieves a cart's contents for the current shopper. If the shopper does not have an active cart on the site, the service creates one.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = cart.GetOrCreateCart( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetOrCreateCartAsync(System.String)">
            <summary>
            Retrieves a cart's contents for the current shopper. If the shopper does not have an active cart on the site, the service creates one.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = await cart.GetOrCreateCartAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetCartSummary(System.String)">
            <summary>
            Retrieves summary information associated with the cart of the current shopper, including the number of items, the current total, and whether the cart has expired. All anonymous idle carts that do not proceed to checkout expire after 14 days.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cartSummary = cart.GetCartSummary( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetCartSummaryAsync(System.String)">
            <summary>
            Retrieves summary information associated with the cart of the current shopper, including the number of items, the current total, and whether the cart has expired. All anonymous idle carts that do not proceed to checkout expire after 14 days.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cartSummary = await cart.GetCartSummaryAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetUserCartSummary(System.String,System.String)">
            <summary>
            Retrieves summary information associated with the cart of user specified in the request, including the number of items in the cart, the current total, and whether the cart has expired. All anonymous idle carts that do not proceed to checkout expire after 14 days.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cartSummary = cart.GetUserCartSummary( userId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetUserCartSummaryAsync(System.String,System.String)">
            <summary>
            Retrieves summary information associated with the cart of user specified in the request, including the number of items in the cart, the current total, and whether the cart has expired. All anonymous idle carts that do not proceed to checkout expire after 14 days.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cartSummary = await cart.GetUserCartSummaryAsync( userId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetUserCart(System.String,System.String)">
            <summary>
            Retrieves the cart of the user specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = cart.GetUserCart( userId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetUserCartAsync(System.String,System.String)">
            <summary>
            Retrieves the cart of the user specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = await cart.GetUserCartAsync( userId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.UpdateCart(Mozu.Api.Contracts.CommerceRuntime.Carts.Cart,System.String)">
            <summary>
            Update the current shopper's cart.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="cart">Properties of a shopping cart.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = cart.UpdateCart( cart,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.UpdateCartAsync(Mozu.Api.Contracts.CommerceRuntime.Carts.Cart,System.String)">
            <summary>
            Update the current shopper's cart.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="cart">Properties of a shopping cart.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = await cart.UpdateCartAsync( cart,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.DeleteCart(System.String)">
            <summary>
            Deletes the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var cart = new Cart();
              cart.DeleteCart( cartId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.DeleteCartAsync(System.String)">
            <summary>
            Deletes the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var cart = new Cart();
              await cart.DeleteCartAsync( cartId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.DeleteCurrentCart">
            <summary>
            Deletes the cart of the currently active shopper.
            </summary>
            <returns>
            
            </returns>
            <example>
            <code>
              var cart = new Cart();
              cart.DeleteCurrentCart();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.DeleteCurrentCartAsync">
            <summary>
            Deletes the cart of the currently active shopper.
            </summary>
            <returns>
            
            </returns>
            <example>
            <code>
              var cart = new Cart();
              await cart.DeleteCurrentCartAsync();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Carts.AppliedDiscountResource">
            <summary>
            Use the Cart Coupons resource to apply a coupon to a defined cart or remove a coupon from a cart. When the shopper proceeds to checkout, the coupons applied to the cart apply to the order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Carts.AppliedDiscountResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.AppliedDiscountResource.ApplyCoupon(System.String,System.String,System.String)">
            <summary>
            Applies a defined coupon to the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="couponCode">Code associated with the coupon to remove from the cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var cart = applieddiscount.ApplyCoupon( cartId,  couponCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.AppliedDiscountResource.ApplyCouponAsync(System.String,System.String,System.String)">
            <summary>
            Applies a defined coupon to the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="couponCode">Code associated with the coupon to remove from the cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var cart = await applieddiscount.ApplyCouponAsync( cartId,  couponCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.AppliedDiscountResource.RemoveCoupons(System.String)">
            <summary>
            Removes one or more applied coupons from the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var cart = applieddiscount.RemoveCoupons( cartId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.AppliedDiscountResource.RemoveCouponsAsync(System.String)">
            <summary>
            Removes one or more applied coupons from the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var cart = await applieddiscount.RemoveCouponsAsync( cartId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.AppliedDiscountResource.RemoveCoupon(System.String,System.String)">
            <summary>
            Removes an applied coupon from the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="couponCode">Code associated with the coupon to remove from the cart.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var cart = applieddiscount.RemoveCoupon( cartId,  couponCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.AppliedDiscountResource.RemoveCouponAsync(System.String,System.String)">
            <summary>
            Removes an applied coupon from the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="couponCode">Code associated with the coupon to remove from the cart.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var cart = await applieddiscount.RemoveCouponAsync( cartId,  couponCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Carts.CartItemResource">
            <summary>
            Use the Cart Items subresource to manage a collection of items in an active shopping cart.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Carts.CartItemResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.GetCartItem(System.String,System.String)">
            <summary>
            Retrieves a particular cart item by providing the cart item ID.
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = cartitem.GetCartItem( cartItemId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.GetCartItemAsync(System.String,System.String)">
            <summary>
            Retrieves a particular cart item by providing the cart item ID.
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = await cartitem.GetCartItemAsync( cartItemId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.GetCartItems(System.String)">
            <summary>
            Retrieves a list of cart items including the total number of items in the cart.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItemCollection = cartitem.GetCartItems( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.GetCartItemsAsync(System.String)">
            <summary>
            Retrieves a list of cart items including the total number of items in the cart.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItemCollection = await cartitem.GetCartItemsAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.AddItemToCart(Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem,System.String)">
            <summary>
            Adds a product to the current shopper's cart.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="cartItem">Properties of an item added to an active shopping cart.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = cartitem.AddItemToCart( cartItem,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.AddItemToCartAsync(Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem,System.String)">
            <summary>
            Adds a product to the current shopper's cart.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="cartItem">Properties of an item added to an active shopping cart.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = await cartitem.AddItemToCartAsync( cartItem,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.UpdateCartItemQuantity(System.String,System.Int32,System.String)">
            <summary>
            Update the quantity of an individual cart item in the cart of the current shopper.
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = cartitem.UpdateCartItemQuantity( cartItemId,  quantity,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.UpdateCartItemQuantityAsync(System.String,System.Int32,System.String)">
            <summary>
            Update the quantity of an individual cart item in the cart of the current shopper.
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = await cartitem.UpdateCartItemQuantityAsync( cartItemId,  quantity,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.UpdateCartItem(Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem,System.String,System.String)">
            <summary>
            Update the product or product quantity of an item in the current shopper's cart.
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="cartItem">Properties of an item added to an active shopping cart.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = cartitem.UpdateCartItem( cartItem,  cartItemId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.UpdateCartItemAsync(Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem,System.String,System.String)">
            <summary>
            Update the product or product quantity of an item in the current shopper's cart.
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="cartItem">Properties of an item added to an active shopping cart.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = await cartitem.UpdateCartItemAsync( cartItem,  cartItemId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.RemoveAllCartItems">
            <summary>
            Removes all items in the current shopper's active cart.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cart = cartitem.RemoveAllCartItems();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.RemoveAllCartItemsAsync">
            <summary>
            Removes all items in the current shopper's active cart.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cart = await cartitem.RemoveAllCartItemsAsync();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.DeleteCartItem(System.String)">
            <summary>
            Deletes a specific cart item by providing the cart item ID.
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              cartitem.DeleteCartItem( cartItemId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.DeleteCartItemAsync(System.String)">
            <summary>
            Deletes a specific cart item by providing the cart item ID.
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              await cartitem.DeleteCartItemAsync( cartItemId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource">
            <summary>
            Use the Cart Messages resource to retrieve messages for live carts that the system logs when a product's price or inventory level changes.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource.GetMessages(System.String)">
            <summary>
            Retrieves the messages associated with the current shopper's cart.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection"/>
            </returns>
            <example>
            <code>
              var changemessage = new ChangeMessage();
              var cartChangeMessageCollection = changemessage.GetMessages( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource.GetMessagesAsync(System.String)">
            <summary>
            Retrieves the messages associated with the current shopper's cart.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection"/>
            </returns>
            <example>
            <code>
              var changemessage = new ChangeMessage();
              var cartChangeMessageCollection = await changemessage.GetMessagesAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource.RemoveAllMessages">
            <summary>
            Deletes all messages associated with the cart of the current shopper.
            </summary>
            <returns>
            
            </returns>
            <example>
            <code>
              var changemessage = new ChangeMessage();
              changemessage.RemoveAllMessages();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource.RemoveAllMessagesAsync">
            <summary>
            Deletes all messages associated with the cart of the current shopper.
            </summary>
            <returns>
            
            </returns>
            <example>
            <code>
              var changemessage = new ChangeMessage();
              await changemessage.RemoveAllMessagesAsync();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource.RemoveMessage(System.String)">
            <summary>
            Removes a single message associated with the cart of the current shopper.
            </summary>
            <param name="messageId">Identifier of the message to remove from the cart.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var changemessage = new ChangeMessage();
              changemessage.RemoveMessage( messageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource.RemoveMessageAsync(System.String)">
            <summary>
            Removes a single message associated with the cart of the current shopper.
            </summary>
            <param name="messageId">Identifier of the message to remove from the cart.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var changemessage = new ChangeMessage();
              await changemessage.RemoveMessageAsync( messageId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Carts.ExtendedPropertyResource">
            <summary>
            commerce/carts/cartextendedproperties related resources. DOCUMENT_HERE 
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Carts.ExtendedPropertyResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ExtendedPropertyResource.GetExtendedProperties">
            <summary>
            carts-cartextendedproperties Get GetExtendedProperties description DOCUMENT_HERE 
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = extendedproperty.GetExtendedProperties();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ExtendedPropertyResource.GetExtendedPropertiesAsync">
            <summary>
            carts-cartextendedproperties Get GetExtendedProperties description DOCUMENT_HERE 
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = await extendedproperty.GetExtendedPropertiesAsync();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ExtendedPropertyResource.AddExtendedProperties(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty})">
            <summary>
            carts-cartextendedproperties Post AddExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="extendedProperties">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = extendedproperty.AddExtendedProperties( extendedProperties);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ExtendedPropertyResource.AddExtendedPropertiesAsync(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty})">
            <summary>
            carts-cartextendedproperties Post AddExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="extendedProperties">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = await extendedproperty.AddExtendedPropertiesAsync( extendedProperties);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ExtendedPropertyResource.UpdateExtendedProperty(Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            carts-cartextendedproperties Put UpdateExtendedProperty description DOCUMENT_HERE 
            </summary>
            <param name="key"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="upsert"></param>
            <param name="extendedProperty">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = extendedproperty.UpdateExtendedProperty( extendedProperty,  key,  upsert,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ExtendedPropertyResource.UpdateExtendedPropertyAsync(Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            carts-cartextendedproperties Put UpdateExtendedProperty description DOCUMENT_HERE 
            </summary>
            <param name="key"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="upsert"></param>
            <param name="extendedProperty">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = await extendedproperty.UpdateExtendedPropertyAsync( extendedProperty,  key,  upsert,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ExtendedPropertyResource.UpdateExtendedProperties(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty},System.Nullable{System.Boolean})">
            <summary>
            carts-cartextendedproperties Put UpdateExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="upsert"></param>
            <param name="extendedProperties">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = extendedproperty.UpdateExtendedProperties( extendedProperties,  upsert);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ExtendedPropertyResource.UpdateExtendedPropertiesAsync(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty},System.Nullable{System.Boolean})">
            <summary>
            carts-cartextendedproperties Put UpdateExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="upsert"></param>
            <param name="extendedProperties">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = await extendedproperty.UpdateExtendedPropertiesAsync( extendedProperties,  upsert);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ExtendedPropertyResource.DeleteExtendedProperties(System.Collections.Generic.List{System.String})">
            <summary>
            carts-cartextendedproperties Delete DeleteExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="keys"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              extendedproperty.DeleteExtendedProperties( keys);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ExtendedPropertyResource.DeleteExtendedPropertiesAsync(System.Collections.Generic.List{System.String})">
            <summary>
            carts-cartextendedproperties Delete DeleteExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="keys"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              await extendedproperty.DeleteExtendedPropertiesAsync( keys);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ExtendedPropertyResource.DeleteExtendedProperty(System.String)">
            <summary>
            carts-cartextendedproperties Delete DeleteExtendedProperty description DOCUMENT_HERE 
            </summary>
            <param name="key"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              extendedproperty.DeleteExtendedProperty( key);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ExtendedPropertyResource.DeleteExtendedPropertyAsync(System.String)">
            <summary>
            carts-cartextendedproperties Delete DeleteExtendedProperty description DOCUMENT_HERE 
            </summary>
            <param name="key"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              await extendedproperty.DeleteExtendedPropertyAsync( key);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource">
            <summary>
            Use the Attribute Definition resource to manage the properties, options, and extras that uniquely describe products of a specific type. Attributes can be associated with a product type, assigned values by a client or shopper, and added as faceted search filters for a product category. Options are product attributes that describe unique configurations made by the shopper, such as size or color, and generate a new product variation (or unique SKU). Properties are product attributes that describe aspects of the product that do not represent an option configurable by the shopper, such as screen resolution or brand. Extras are product attributes that describe add-on configurations made by the shopper that do not represent a product variation, such as a monogram.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.GetAttributes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a paged list of attributes according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeCollection"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeCollection = attribute.GetAttributes( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.GetAttributesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a paged list of attributes according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeCollection"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeCollection = await attribute.GetAttributesAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.GetAttribute(System.String,System.String)">
            <summary>
            Retrieves the details of the specified product attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.GetAttribute( attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.GetAttributeAsync(System.String,System.String)">
            <summary>
            Retrieves the details of the specified product attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = await attribute.GetAttributeAsync( attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.AddAttribute(Mozu.Api.Contracts.ProductAdmin.Attribute,System.String)">
            <summary>
            Creates a new attribute to describe one aspect of a product such as color or size, based on its defined product type. The attribute name, attribute type, input type, and data type are required.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attribute">Properties of an attribute used to describe customers or orders.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.AddAttribute( attribute,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.AddAttributeAsync(Mozu.Api.Contracts.ProductAdmin.Attribute,System.String)">
            <summary>
            Creates a new attribute to describe one aspect of a product such as color or size, based on its defined product type. The attribute name, attribute type, input type, and data type are required.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attribute">Properties of an attribute used to describe customers or orders.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = await attribute.AddAttributeAsync( attribute,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.UpdateAttribute(Mozu.Api.Contracts.ProductAdmin.Attribute,System.String,System.String)">
            <summary>
            Updates an existing attribute with attribute properties to set.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attribute">Properties of an attribute used to describe customers or orders.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.UpdateAttribute( attribute,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.UpdateAttributeAsync(Mozu.Api.Contracts.ProductAdmin.Attribute,System.String,System.String)">
            <summary>
            Updates an existing attribute with attribute properties to set.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attribute">Properties of an attribute used to describe customers or orders.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = await attribute.UpdateAttributeAsync( attribute,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.DeleteAttribute(System.String)">
            <summary>
            Deletes a defined product attribute. You cannot delete an attribute assigned a value for a product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              attribute.DeleteAttribute( attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.DeleteAttributeAsync(System.String)">
            <summary>
            Deletes a defined product attribute. You cannot delete an attribute assigned a value for a product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              await attribute.DeleteAttributeAsync( attributeFQN);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource">
            <summary>
            Properties of localized content for attributes, based on a `localeCode` at a site/tenant level. This content supports translated text for product, product options, and additional objects. 
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.GetAttributeLocalizedContents(System.String)">
            <summary>
            Retrieves a collection of localized content for attributes based on a `localeCode`.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              var attributeLocalizedContent = attributelocalizedcontent.GetAttributeLocalizedContents( attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.GetAttributeLocalizedContentsAsync(System.String)">
            <summary>
            Retrieves a collection of localized content for attributes based on a `localeCode`.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              var attributeLocalizedContent = await attributelocalizedcontent.GetAttributeLocalizedContentsAsync( attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.GetAttributeLocalizedContent(System.String,System.String,System.String)">
            <summary>
            Retrieves the localized content for an attribute  based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              var attributeLocalizedContent = attributelocalizedcontent.GetAttributeLocalizedContent( attributeFQN,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.GetAttributeLocalizedContentAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the localized content for an attribute  based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              var attributeLocalizedContent = await attributelocalizedcontent.GetAttributeLocalizedContentAsync( attributeFQN,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.AddLocalizedContent(Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent,System.String,System.String)">
            <summary>
            Adds new localized content for an attribute  based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized name and description of the attribute, displayed in the locale defined for the master catalog.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              var attributeLocalizedContent = attributelocalizedcontent.AddLocalizedContent( localizedContent,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.AddLocalizedContentAsync(Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent,System.String,System.String)">
            <summary>
            Adds new localized content for an attribute  based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized name and description of the attribute, displayed in the locale defined for the master catalog.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              var attributeLocalizedContent = await attributelocalizedcontent.AddLocalizedContentAsync( localizedContent,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.UpdateLocalizedContents(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent},System.String)">
            <summary>
            Updates the localized content for a collection of existing attributes  based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized name and description of the attribute, displayed in the locale defined for the master catalog.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              var attributeLocalizedContent = attributelocalizedcontent.UpdateLocalizedContents( localizedContent,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.UpdateLocalizedContentsAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent},System.String)">
            <summary>
            Updates the localized content for a collection of existing attributes  based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized name and description of the attribute, displayed in the locale defined for the master catalog.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              var attributeLocalizedContent = await attributelocalizedcontent.UpdateLocalizedContentsAsync( localizedContent,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.UpdateLocalizedContent(Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent,System.String,System.String,System.String)">
            <summary>
            Updates the localized content for an existing attribute  based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized name and description of the attribute, displayed in the locale defined for the master catalog.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              var attributeLocalizedContent = attributelocalizedcontent.UpdateLocalizedContent( localizedContent,  attributeFQN,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.UpdateLocalizedContentAsync(Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent,System.String,System.String,System.String)">
            <summary>
            Updates the localized content for an existing attribute  based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized name and description of the attribute, displayed in the locale defined for the master catalog.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              var attributeLocalizedContent = await attributelocalizedcontent.UpdateLocalizedContentAsync( localizedContent,  attributeFQN,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.DeleteLocalizedContent(System.String,System.String)">
            <summary>
            Removes all localized content. Localized content is translated text information and data based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              attributelocalizedcontent.DeleteLocalizedContent( attributeFQN,  localeCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.DeleteLocalizedContentAsync(System.String,System.String)">
            <summary>
            Removes all localized content. Localized content is translated text information and data based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              await attributelocalizedcontent.DeleteLocalizedContentAsync( attributeFQN,  localeCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleResource">
            <summary>
            Type rules are subresources of product attributes which could be specifications that can be shared across products in a store or assigned to specific products. Attribute type rules provide definitions of how attribute types will appear on the user interface.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleResource.GetAttributeTypeRules(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of attribute type rules according to optional filter criteria and sort options. Attribute type rules help drive the behavior of attributes on a storefront page.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection"/>
            </returns>
            <example>
            <code>
              var attributetyperule = new AttributeTypeRule();
              var attributeTypeRuleCollection = attributetyperule.GetAttributeTypeRules( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleResource.GetAttributeTypeRulesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of attribute type rules according to optional filter criteria and sort options. Attribute type rules help drive the behavior of attributes on a storefront page.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection"/>
            </returns>
            <example>
            <code>
              var attributetyperule = new AttributeTypeRule();
              var attributeTypeRuleCollection = await attributetyperule.GetAttributeTypeRulesAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource">
            <summary>
            Vocabulary values are predefined for an attribute.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.GetAttributeVocabularyValues(System.String)">
            <summary>
            Retrieves a list of vocabulary values defined for the attribute specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = attributevocabularyvalue.GetAttributeVocabularyValues( attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.GetAttributeVocabularyValuesAsync(System.String)">
            <summary>
            Retrieves a list of vocabulary values defined for the attribute specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = await attributevocabularyvalue.GetAttributeVocabularyValuesAsync( attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.GetAttributeVocabularyValueLocalizedContents(System.String,System.String)">
            <summary>
            Retrieves a collection of localized content for vocabulary value attributes based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValueLocalizedContent = attributevocabularyvalue.GetAttributeVocabularyValueLocalizedContents( attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.GetAttributeVocabularyValueLocalizedContentsAsync(System.String,System.String)">
            <summary>
            Retrieves a collection of localized content for vocabulary value attributes based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValueLocalizedContent = await attributevocabularyvalue.GetAttributeVocabularyValueLocalizedContentsAsync( attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.GetAttributeVocabularyValueLocalizedContent(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the localized content for a vocabulary value attribute based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValueLocalizedContent = attributevocabularyvalue.GetAttributeVocabularyValueLocalizedContent( attributeFQN,  value,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.GetAttributeVocabularyValueLocalizedContentAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the localized content for a vocabulary value attribute based on a `localeCode`. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValueLocalizedContent = await attributevocabularyvalue.GetAttributeVocabularyValueLocalizedContentAsync( attributeFQN,  value,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.GetAttributeVocabularyValue(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a vocabulary value defined for an attribute by providing the attribute's fully qualified name and the value to retrieve.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = attributevocabularyvalue.GetAttributeVocabularyValue( attributeFQN,  value,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.GetAttributeVocabularyValueAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a vocabulary value defined for an attribute by providing the attribute's fully qualified name and the value to retrieve.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = await attributevocabularyvalue.GetAttributeVocabularyValueAsync( attributeFQN,  value,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.AddAttributeVocabularyValueLocalizedContent(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent,System.String,System.String,System.String)">
            <summary>
            Creates and saves localized vocabulary value content for an attribute, based on the `localeCode`.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized text for the string value of a product attribute.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValueLocalizedContent = attributevocabularyvalue.AddAttributeVocabularyValueLocalizedContent( localizedContent,  attributeFQN,  value,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.AddAttributeVocabularyValueLocalizedContentAsync(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent,System.String,System.String,System.String)">
            <summary>
            Creates and saves localized vocabulary value content for an attribute, based on the `localeCode`.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized text for the string value of a product attribute.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValueLocalizedContent = await attributevocabularyvalue.AddAttributeVocabularyValueLocalizedContentAsync( localizedContent,  attributeFQN,  value,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.AddAttributeVocabularyValue(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue,System.String,System.String)">
            <summary>
            Creates a vocabulary value for a defined product attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeVocabularyValue">Properties of a vocabulary value defined for an extensible attribute.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = attributevocabularyvalue.AddAttributeVocabularyValue( attributeVocabularyValue,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.AddAttributeVocabularyValueAsync(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue,System.String,System.String)">
            <summary>
            Creates a vocabulary value for a defined product attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeVocabularyValue">Properties of a vocabulary value defined for an extensible attribute.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = await attributevocabularyvalue.AddAttributeVocabularyValueAsync( attributeVocabularyValue,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.UpdateAttributeVocabularyValues(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue},System.String)">
            <summary>
            Update existing vocabulary values for an attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="vocabularyValues">Properties of a vocabulary value defined for an extensible attribute.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = attributevocabularyvalue.UpdateAttributeVocabularyValues( vocabularyValues,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.UpdateAttributeVocabularyValuesAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue},System.String)">
            <summary>
            Update existing vocabulary values for an attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="vocabularyValues">Properties of a vocabulary value defined for an extensible attribute.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = await attributevocabularyvalue.UpdateAttributeVocabularyValuesAsync( vocabularyValues,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.UpdateAttributeVocabularyValueLocalizedContents(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent},System.String,System.String)">
            <summary>
            Updates a collection of localized vocabulary value content for existing attributes, based on the `localeCode`.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized text for the string value of a product attribute.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValueLocalizedContent = attributevocabularyvalue.UpdateAttributeVocabularyValueLocalizedContents( localizedContent,  attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.UpdateAttributeVocabularyValueLocalizedContentsAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent},System.String,System.String)">
            <summary>
            Updates a collection of localized vocabulary value content for existing attributes, based on the `localeCode`.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized text for the string value of a product attribute.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValueLocalizedContent = await attributevocabularyvalue.UpdateAttributeVocabularyValueLocalizedContentsAsync( localizedContent,  attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.UpdateAttributeVocabularyValueLocalizedContent(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent,System.String,System.String,System.String,System.String)">
            <summary>
            Updates localized vocabulary value content for an existing attribute, based on the `localeCode`.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">The two character country code that sets the locale, such as US for United States. Sites, tenants, and catalogs use locale codes for localizing content, such as translated product text per supported country.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized text for the string value of a product attribute.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValueLocalizedContent = attributevocabularyvalue.UpdateAttributeVocabularyValueLocalizedContent( localizedContent,  attributeFQN,  value,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.UpdateAttributeVocabularyValueLocalizedContentAsync(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent,System.String,System.String,System.String,System.String)">
            <summary>
            Updates localized vocabulary value content for an existing attribute, based on the `localeCode`.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">The two character country code that sets the locale, such as US for United States. Sites, tenants, and catalogs use locale codes for localizing content, such as translated product text per supported country.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent">The localized text for the string value of a product attribute.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValueLocalizedContent = await attributevocabularyvalue.UpdateAttributeVocabularyValueLocalizedContentAsync( localizedContent,  attributeFQN,  value,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.UpdateAttributeVocabularyValue(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue,System.String,System.String,System.String)">
            <summary>
            Updates existing attribute vocabulary values.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeVocabularyValue">Properties of a vocabulary value defined for an extensible attribute.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = attributevocabularyvalue.UpdateAttributeVocabularyValue( attributeVocabularyValue,  attributeFQN,  value,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.UpdateAttributeVocabularyValueAsync(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue,System.String,System.String,System.String)">
            <summary>
            Updates existing attribute vocabulary values.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeVocabularyValue">Properties of a vocabulary value defined for an extensible attribute.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = await attributevocabularyvalue.UpdateAttributeVocabularyValueAsync( attributeVocabularyValue,  attributeFQN,  value,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.DeleteAttributeVocabularyValue(System.String,System.String)">
            <summary>
            Deletes an attribute's vocabulary value.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              attributevocabularyvalue.DeleteAttributeVocabularyValue( attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.DeleteAttributeVocabularyValueAsync(System.String,System.String)">
            <summary>
            Deletes an attribute's vocabulary value.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              await attributevocabularyvalue.DeleteAttributeVocabularyValueAsync( attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.DeleteAttributeVocabularyValueLocalizedContent(System.String,System.String,System.String)">
            <summary>
            Removes localized content for a vocabulary value attribute. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              attributevocabularyvalue.DeleteAttributeVocabularyValueLocalizedContent( attributeFQN,  value,  localeCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.DeleteAttributeVocabularyValueLocalizedContentAsync(System.String,System.String,System.String)">
            <summary>
            Removes localized content for a vocabulary value attribute. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="value">The value string to create.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              await attributevocabularyvalue.DeleteAttributeVocabularyValueLocalizedContentAsync( attributeFQN,  value,  localeCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource">
            <summary>
            Use the Product Types resource to manage the types for your product catalog. Product types act as configuration templates, which store a set of attributes common to all products associated with that type. Unlike categories, products can only be associated with a single product type.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.GetProductTypes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of product types according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productTypeCollection = producttype.GetProductTypes(_dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.GetProductTypesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of product types according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productTypeCollection = await producttype.GetProductTypesAsync(_dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.GetProductType(System.Int32,System.String)">
            <summary>
            Retrieves the details of the product type specified in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productType = producttype.GetProductType(_dataViewMode,  productTypeId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.GetProductTypeAsync(System.Int32,System.String)">
            <summary>
            Retrieves the details of the product type specified in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productType = await producttype.GetProductTypeAsync(_dataViewMode,  productTypeId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.AddProductType(Mozu.Api.Contracts.ProductAdmin.ProductType,System.String)">
            <summary>
            Creates a new product type based on the information supplied in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productType">A product type is like a product template.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productType = producttype.AddProductType(_dataViewMode,  productType,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.AddProductTypeAsync(Mozu.Api.Contracts.ProductAdmin.ProductType,System.String)">
            <summary>
            Creates a new product type based on the information supplied in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productType">A product type is like a product template.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productType = await producttype.AddProductTypeAsync(_dataViewMode,  productType,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.UpdateProductType(Mozu.Api.Contracts.ProductAdmin.ProductType,System.Int32,System.String)">
            <summary>
            Updates one or more properties of a product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productType">A product type is like a product template.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productType = producttype.UpdateProductType(_dataViewMode,  productType,  productTypeId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.UpdateProductTypeAsync(Mozu.Api.Contracts.ProductAdmin.ProductType,System.Int32,System.String)">
            <summary>
            Updates one or more properties of a product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productType">A product type is like a product template.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productType = await producttype.UpdateProductTypeAsync(_dataViewMode,  productType,  productTypeId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.DeleteProductType(System.Int32)">
            <summary>
            Deletes the product type by providing the product type ID.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              producttype.DeleteProductType(_dataViewMode,  productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.DeleteProductTypeAsync(System.Int32)">
            <summary>
            Deletes the product type by providing the product type ID.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              await producttype.DeleteProductTypeAsync(_dataViewMode,  productTypeId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource">
            <summary>
            Use the Extras subresource to define how a product attribute classified as an "extra" is used for a specific product type. Product attribute defintions are unique for each associated product type.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.GetExtras(System.Int32)">
            <summary>
            Retrieves a list of extra attributes defined for the specified product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = producttypeextra.GetExtras(_dataViewMode,  productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.GetExtrasAsync(System.Int32)">
            <summary>
            Retrieves a list of extra attributes defined for the specified product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = await producttypeextra.GetExtrasAsync(_dataViewMode,  productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.GetExtra(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of an extra attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = producttypeextra.GetExtra(_dataViewMode,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.GetExtraAsync(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of an extra attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = await producttypeextra.GetExtraAsync(_dataViewMode,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.AddExtra(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String)">
            <summary>
            Assigns a defined extra attribute to the product type based on the information supplied in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = producttypeextra.AddExtra(_dataViewMode,  attributeInProductType,  productTypeId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.AddExtraAsync(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String)">
            <summary>
            Assigns a defined extra attribute to the product type based on the information supplied in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = await producttypeextra.AddExtraAsync(_dataViewMode,  attributeInProductType,  productTypeId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.UpdateExtra(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String,System.String)">
            <summary>
            Update the definition of an extra attribute for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = producttypeextra.UpdateExtra(_dataViewMode,  attributeInProductType,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.UpdateExtraAsync(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String,System.String)">
            <summary>
            Update the definition of an extra attribute for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = await producttypeextra.UpdateExtraAsync(_dataViewMode,  attributeInProductType,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.DeleteExtra(System.Int32,System.String)">
            <summary>
            Removes an extra attribute definition from the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              producttypeextra.DeleteExtra(_dataViewMode,  productTypeId,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.DeleteExtraAsync(System.Int32,System.String)">
            <summary>
            Removes an extra attribute definition from the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              await producttypeextra.DeleteExtraAsync(_dataViewMode,  productTypeId,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource">
            <summary>
            Use the Options subresource to define how an option attribute is used for a specific product type. Product attribute definitions are unique for each associated product type.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.GetOptions(System.Int32)">
            <summary>
            Retrieves a list of option product attributes defined for the specified product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = producttypeoption.GetOptions(_dataViewMode,  productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.GetOptionsAsync(System.Int32)">
            <summary>
            Retrieves a list of option product attributes defined for the specified product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = await producttypeoption.GetOptionsAsync(_dataViewMode,  productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.GetOption(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of an option attribute defined for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = producttypeoption.GetOption(_dataViewMode,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.GetOptionAsync(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of an option attribute defined for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = await producttypeoption.GetOptionAsync(_dataViewMode,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.AddOption(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String)">
            <summary>
            Assigns an option attribute to the product type based on the information supplied in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = producttypeoption.AddOption(_dataViewMode,  attributeInProductType,  productTypeId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.AddOptionAsync(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String)">
            <summary>
            Assigns an option attribute to the product type based on the information supplied in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = await producttypeoption.AddOptionAsync(_dataViewMode,  attributeInProductType,  productTypeId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.UpdateOption(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String,System.String)">
            <summary>
            Updates an option attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = producttypeoption.UpdateOption(_dataViewMode,  attributeInProductType,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.UpdateOptionAsync(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String,System.String)">
            <summary>
            Updates an option attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = await producttypeoption.UpdateOptionAsync(_dataViewMode,  attributeInProductType,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.DeleteOption(System.Int32,System.String)">
            <summary>
            Removes an option attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              producttypeoption.DeleteOption(_dataViewMode,  productTypeId,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.DeleteOptionAsync(System.Int32,System.String)">
            <summary>
            Removes an option attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              await producttypeoption.DeleteOptionAsync(_dataViewMode,  productTypeId,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource">
            <summary>
            Use the Properties subresource to define how property product attributes are used for a specific product type. Product attribute definitions are unique for each associated product type.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.GetProperties(System.Int32)">
            <summary>
            Retrieves a list of product property attributes defined for a product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = producttypeproperty.GetProperties(_dataViewMode,  productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.GetPropertiesAsync(System.Int32)">
            <summary>
            Retrieves a list of product property attributes defined for a product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = await producttypeproperty.GetPropertiesAsync(_dataViewMode,  productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.GetProperty(System.Int32,System.String,System.String)">
            <summary>
            Retrieves a product property attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = producttypeproperty.GetProperty(_dataViewMode,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.GetPropertyAsync(System.Int32,System.String,System.String)">
            <summary>
            Retrieves a product property attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = await producttypeproperty.GetPropertyAsync(_dataViewMode,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.AddProperty(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String)">
            <summary>
            Assigns a property attribute to the specified product type, according to the information defined in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = producttypeproperty.AddProperty(_dataViewMode,  attributeInProductType,  productTypeId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.AddPropertyAsync(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String)">
            <summary>
            Assigns a property attribute to the specified product type, according to the information defined in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = await producttypeproperty.AddPropertyAsync(_dataViewMode,  attributeInProductType,  productTypeId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.UpdateProperty(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String,System.String)">
            <summary>
            Updates the definition of a property attribute for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = producttypeproperty.UpdateProperty(_dataViewMode,  attributeInProductType,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.UpdatePropertyAsync(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String,System.String)">
            <summary>
            Updates the definition of a property attribute for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = await producttypeproperty.UpdatePropertyAsync(_dataViewMode,  attributeInProductType,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.DeleteProperty(System.Int32,System.String)">
            <summary>
            Removes a property attribute previously defined for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              producttypeproperty.DeleteProperty(_dataViewMode,  productTypeId,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.DeletePropertyAsync(System.Int32,System.String)">
            <summary>
            Removes a property attribute previously defined for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              await producttypeproperty.DeletePropertyAsync(_dataViewMode,  productTypeId,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationResource">
            <summary>
            Use the variations resource to preview possible product variations for a specific product type based on the option attributes defined for the product type, such as size or color.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationResource.GenerateProductVariations(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductOption},System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Generates the variations possible for a product associated with the product type based on the option values supplied in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode"></param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productOptionsIn">Properties of the product option to create such as attribute detail, fully qualified name, and list of product option values.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>
            </returns>
            <example>
            <code>
              var producttypevariation = new ProductTypeVariation();
              var productVariationPagedCollection = producttypevariation.GenerateProductVariations( productOptionsIn,  productTypeId,  productCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationResource.GenerateProductVariationsAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductOption},System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Generates the variations possible for a product associated with the product type based on the option values supplied in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode"></param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productOptionsIn">Properties of the product option to create such as attribute detail, fully qualified name, and list of product option values.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>
            </returns>
            <example>
            <code>
              var producttypevariation = new ProductTypeVariation();
              var productVariationPagedCollection = await producttypevariation.GenerateProductVariationsAsync( productOptionsIn,  productTypeId,  productCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource">
            <summary>
            Use the Categories resource to organize products and control where they appear on the storefront. Create and maintain a hierarchy of categories and subcategories where the site will store properties.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.GetCategories(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryPagedCollection = category.GetCategories( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.GetCategoriesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryPagedCollection = await category.GetCategoriesAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.GetChildCategories(System.Int32,System.String)">
            <summary>
            Retrieves the list of subcategories within a category.
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryCollection = category.GetChildCategories( categoryId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.GetChildCategoriesAsync(System.Int32,System.String)">
            <summary>
            Retrieves the list of subcategories within a category.
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryCollection = await category.GetChildCategoriesAsync( categoryId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.GetCategory(System.Int32,System.String)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = category.GetCategory( categoryId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.GetCategoryAsync(System.Int32,System.String)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = await category.GetCategoryAsync( categoryId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.AddCategory(Mozu.Api.Contracts.ProductAdmin.Category,System.Nullable{System.Boolean},System.String)">
            <summary>
            Adds a new category to the site's category hierarchy. Specify a ParentCategoryID to determine where to place the category in the hierarchy. If no ParentCategoryID is specified, the new category is a top-level category.
            </summary>
            <param name="incrementSequence">If true, when adding a new product category, set the sequence number of the new category to an increment of one integer greater than the maximum available sequence number across all product categories. If false, set the sequence number to zero.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="category">A descriptive container that groups products. A category is merchant defined with associated products and discounts as configured. GThe storefront displays products in a hierarchy of categories. As such, categories can include a nesting of sub-categories to organize products and product options per set guidelines such as color, brand, material, and size.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = category.AddCategory( category,  incrementSequence,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.AddCategoryAsync(Mozu.Api.Contracts.ProductAdmin.Category,System.Nullable{System.Boolean},System.String)">
            <summary>
            Adds a new category to the site's category hierarchy. Specify a ParentCategoryID to determine where to place the category in the hierarchy. If no ParentCategoryID is specified, the new category is a top-level category.
            </summary>
            <param name="incrementSequence">If true, when adding a new product category, set the sequence number of the new category to an increment of one integer greater than the maximum available sequence number across all product categories. If false, set the sequence number to zero.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="category">A descriptive container that groups products. A category is merchant defined with associated products and discounts as configured. GThe storefront displays products in a hierarchy of categories. As such, categories can include a nesting of sub-categories to organize products and product options per set guidelines such as color, brand, material, and size.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = await category.AddCategoryAsync( category,  incrementSequence,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.UpdateCategory(Mozu.Api.Contracts.ProductAdmin.Category,System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Update the properties of a defined category or move it to another location in the category hierarchy. Because this operation replaces the defined resource,include all the information to maintain for the category in the request.
            </summary>
            <param name="cascadeVisibility">If true, when changing the display option for the category, change it for all subcategories also. Default: False.</param>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="category">A descriptive container that groups products. A category is merchant defined with associated products and discounts as configured. GThe storefront displays products in a hierarchy of categories. As such, categories can include a nesting of sub-categories to organize products and product options per set guidelines such as color, brand, material, and size.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = category.UpdateCategory( category,  categoryId,  cascadeVisibility,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.UpdateCategoryAsync(Mozu.Api.Contracts.ProductAdmin.Category,System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Update the properties of a defined category or move it to another location in the category hierarchy. Because this operation replaces the defined resource,include all the information to maintain for the category in the request.
            </summary>
            <param name="cascadeVisibility">If true, when changing the display option for the category, change it for all subcategories also. Default: False.</param>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="category">A descriptive container that groups products. A category is merchant defined with associated products and discounts as configured. GThe storefront displays products in a hierarchy of categories. As such, categories can include a nesting of sub-categories to organize products and product options per set guidelines such as color, brand, material, and size.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = await category.UpdateCategoryAsync( category,  categoryId,  cascadeVisibility,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.DeleteCategoryById(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Deletes the category specified by its category ID.
            </summary>
            <param name="cascadeDelete">If true, also delete all subcategories associated with the specified category.</param>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="forceDelete"></param>
            <param name="reassignToParent"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var category = new Category();
              category.DeleteCategoryById( categoryId,  cascadeDelete,  forceDelete,  reassignToParent);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.DeleteCategoryByIdAsync(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Deletes the category specified by its category ID.
            </summary>
            <param name="cascadeDelete">If true, also delete all subcategories associated with the specified category.</param>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="forceDelete"></param>
            <param name="reassignToParent"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var category = new Category();
              await category.DeleteCategoryByIdAsync( categoryId,  cascadeDelete,  forceDelete,  reassignToParent);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource">
            <summary>
            Define and manage discounts to apply to products, product categories, or orders. The discounts can be a specified amount off the price, percentage off the price, or for free shipping. Create a coupon code that shoppers can use to redeem the discount.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GetDiscounts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of discounts according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountCollection"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discountCollection = discount.GetDiscounts(_dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GetDiscountsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of discounts according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountCollection"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discountCollection = await discount.GetDiscountsAsync(_dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GetDiscountContent(System.Int32,System.String)">
            <summary>
            Retrieves the localized content specified for the specified discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discountLocalizedContent = discount.GetDiscountContent(_dataViewMode,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GetDiscountContentAsync(System.Int32,System.String)">
            <summary>
            Retrieves the localized content specified for the specified discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discountLocalizedContent = await discount.GetDiscountContentAsync(_dataViewMode,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GetDiscount(System.Int32,System.String)">
            <summary>
            Retrieves the details of a single discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discount = discount.GetDiscount(_dataViewMode,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GetDiscountAsync(System.Int32,System.String)">
            <summary>
            Retrieves the details of a single discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discount = await discount.GetDiscountAsync(_dataViewMode,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GenerateRandomCoupon(System.String)">
            <summary>
            Generates a random code for a coupon.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            string
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var string = discount.GenerateRandomCoupon( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GenerateRandomCouponAsync(System.String)">
            <summary>
            Generates a random code for a coupon.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            string
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var string = await discount.GenerateRandomCouponAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.CreateDiscount(Mozu.Api.Contracts.ProductAdmin.Discount,System.String)">
            <summary>
            Creates a new discount or coupon to apply to a product, category, order, or shipping.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="discount">Name of the discount added and applied to a shopping cart and order for a shopper's purchase. </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discount = discount.CreateDiscount( discount,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.CreateDiscountAsync(Mozu.Api.Contracts.ProductAdmin.Discount,System.String)">
            <summary>
            Creates a new discount or coupon to apply to a product, category, order, or shipping.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="discount">Name of the discount added and applied to a shopping cart and order for a shopper's purchase. </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discount = await discount.CreateDiscountAsync( discount,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.UpdateDiscountContent(Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent,System.Int32,System.String)">
            <summary>
            Updates the localizable content for the specified discount or rename the discount without modifying its other properties.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="content">The container for the language-specific name of the discount. A container exists for each supported language (LocaleCode). This parameter enables you to display the discount name in multiple languages yet manage it as a single discount internally.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discountLocalizedContent = discount.UpdateDiscountContent( content,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.UpdateDiscountContentAsync(Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent,System.Int32,System.String)">
            <summary>
            Updates the localizable content for the specified discount or rename the discount without modifying its other properties.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="content">The container for the language-specific name of the discount. A container exists for each supported language (LocaleCode). This parameter enables you to display the discount name in multiple languages yet manage it as a single discount internally.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discountLocalizedContent = await discount.UpdateDiscountContentAsync( content,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.UpdateDiscount(Mozu.Api.Contracts.ProductAdmin.Discount,System.Int32,System.String)">
            <summary>
            Updates one or more properties of a defined discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="discount">Name of the discount added and applied to a shopping cart and order for a shopper's purchase. </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discount = discount.UpdateDiscount( discount,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.UpdateDiscountAsync(Mozu.Api.Contracts.ProductAdmin.Discount,System.Int32,System.String)">
            <summary>
            Updates one or more properties of a defined discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="discount">Name of the discount added and applied to a shopping cart and order for a shopper's purchase. </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discount = await discount.UpdateDiscountAsync( discount,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.DeleteDiscount(System.Int32)">
            <summary>
            Deletes a discount specified by its discount ID.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var discount = new Discount();
              discount.DeleteDiscount( discountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.DeleteDiscountAsync(System.Int32)">
            <summary>
            Deletes a discount specified by its discount ID.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var discount = new Discount();
              await discount.DeleteDiscountAsync( discountId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Discounts.DiscountTargetResource">
            <summary>
            Retrieves and modifies the products, categories, and shipping methods eligible for discounts in the form of a fixed dollar amount, percentage off a product price, or free shipping.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Discounts.DiscountTargetResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Discounts.DiscountTargetResource.GetDiscountTarget(System.Int32,System.String)">
            <summary>
            Retrieves the discount target, that is which products, categories, or shipping methods are eligible for the discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget"/>
            </returns>
            <example>
            <code>
              var discounttarget = new DiscountTarget();
              var discountTarget = discounttarget.GetDiscountTarget(_dataViewMode,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Discounts.DiscountTargetResource.GetDiscountTargetAsync(System.Int32,System.String)">
            <summary>
            Retrieves the discount target, that is which products, categories, or shipping methods are eligible for the discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget"/>
            </returns>
            <example>
            <code>
              var discounttarget = new DiscountTarget();
              var discountTarget = await discounttarget.GetDiscountTargetAsync(_dataViewMode,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Discounts.DiscountTargetResource.UpdateDiscountTarget(Mozu.Api.Contracts.ProductAdmin.DiscountTarget,System.Int32,System.String)">
            <summary>
            Modifies properties of the discount target, for example, the dollar amount, or precentage off the price.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="discountTarget">Properties of the target to which the discount applies, such as the type of discount and which products, categories, or shipping methods are eligible for the discount and the properties of this discount target.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget"/>
            </returns>
            <example>
            <code>
              var discounttarget = new DiscountTarget();
              var discountTarget = discounttarget.UpdateDiscountTarget( discountTarget,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Discounts.DiscountTargetResource.UpdateDiscountTargetAsync(Mozu.Api.Contracts.ProductAdmin.DiscountTarget,System.Int32,System.String)">
            <summary>
            Modifies properties of the discount target, for example, the dollar amount, or precentage off the price.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="discountTarget">Properties of the target to which the discount applies, such as the type of discount and which products, categories, or shipping methods are eligible for the discount and the properties of this discount target.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget"/>
            </returns>
            <example>
            <code>
              var discounttarget = new DiscountTarget();
              var discountTarget = await discounttarget.UpdateDiscountTargetAsync( discountTarget,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource">
            <summary>
            Use the Facets resource to manage the facets shoppers use to filter product display results on a storefront. Facets can include categories, product attributes, or prices, and use either a range of values or discrete values.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.GetFacet(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a facet specified by its unique identifier and displays its properties.
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = facet.GetFacet( facetId,  validate,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.GetFacetAsync(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a facet specified by its unique identifier and displays its properties.
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = await facet.GetFacetAsync( facetId,  validate,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.GetFacetCategoryList(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of the facets defined for the specified category.
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="includeAvailable">If true, returns a list of the attributes and categories associated with a product type that have not been defined as a facet for the category.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.FacetSet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facetSet = facet.GetFacetCategoryList( categoryId,  includeAvailable,  validate,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.GetFacetCategoryListAsync(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of the facets defined for the specified category.
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="includeAvailable">If true, returns a list of the attributes and categories associated with a product type that have not been defined as a facet for the category.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.FacetSet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facetSet = await facet.GetFacetCategoryListAsync( categoryId,  includeAvailable,  validate,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.AddFacet(Mozu.Api.Contracts.ProductAdmin.Facet,System.String)">
            <summary>
            Creates a new category, price, or attribute facet. Define the category or attribute source to use for the facet values.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="facet">Properties of the facet used to retrieve documents.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = facet.AddFacet( facet,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.AddFacetAsync(Mozu.Api.Contracts.ProductAdmin.Facet,System.String)">
            <summary>
            Creates a new category, price, or attribute facet. Define the category or attribute source to use for the facet values.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="facet">Properties of the facet used to retrieve documents.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = await facet.AddFacetAsync( facet,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.UpdateFacet(Mozu.Api.Contracts.ProductAdmin.Facet,System.Int32,System.String)">
            <summary>
            Modifies one or more properties of a defined facet.
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="facet">Properties of the facet used to retrieve documents.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = facet.UpdateFacet( facet,  facetId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.UpdateFacetAsync(Mozu.Api.Contracts.ProductAdmin.Facet,System.Int32,System.String)">
            <summary>
            Modifies one or more properties of a defined facet.
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="facet">Properties of the facet used to retrieve documents.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = await facet.UpdateFacetAsync( facet,  facetId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.DeleteFacetById(System.Int32)">
            <summary>
            Deletes the facet specified by its unique identifier.
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var facet = new Facet();
              facet.DeleteFacetById( facetId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.DeleteFacetByIdAsync(System.Int32)">
            <summary>
            Deletes the facet specified by its unique identifier.
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var facet = new Facet();
              await facet.DeleteFacetByIdAsync( facetId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource">
            <summary>
            Use the Location Inventory resource to manage the level of active product inventory maintained at each defined location, at the location level.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource.GetLocationInventory(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a product's active inventory at the location specified in the request.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = locationinventory.GetLocationInventory(_dataViewMode,  locationCode,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource.GetLocationInventoryAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a product's active inventory at the location specified in the request.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = await locationinventory.GetLocationInventoryAsync(_dataViewMode,  locationCode,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource.GetLocationInventories(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of all product inventory definitions for the location code specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection"/>
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventoryCollection = locationinventory.GetLocationInventories(_dataViewMode,  locationCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource.GetLocationInventoriesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of all product inventory definitions for the location code specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection"/>
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventoryCollection = await locationinventory.GetLocationInventoriesAsync(_dataViewMode,  locationCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource.AddLocationInventory(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventory},System.String,System.Nullable{System.Boolean})">
            <summary>
            Creates an array of product inventory definitions for the location specified in the request. When adding a new inventory definition, you must specify the productCode and stockOnHand value in each array you define. All other properties are system-supplied and read only.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="performUpserts">Query string parameter lets the service perform an update for a new or existing record. When run, the update occurs without throwing a conflict exception that the record exists. If true, the updates completes regardless of the record currently existing. By default, if no value is specified, the service assumes this value is false.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="locationInventoryList">Properties of an inventory definition that defines the level of inventory for a specific product at a given location.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = locationinventory.AddLocationInventory(_dataViewMode,  locationInventoryList,  locationCode,  performUpserts);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource.AddLocationInventoryAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventory},System.String,System.Nullable{System.Boolean})">
            <summary>
            Creates an array of product inventory definitions for the location specified in the request. When adding a new inventory definition, you must specify the productCode and stockOnHand value in each array you define. All other properties are system-supplied and read only.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="performUpserts">Query string parameter lets the service perform an update for a new or existing record. When run, the update occurs without throwing a conflict exception that the record exists. If true, the updates completes regardless of the record currently existing. By default, if no value is specified, the service assumes this value is false.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="locationInventoryList">Properties of an inventory definition that defines the level of inventory for a specific product at a given location.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = await locationinventory.AddLocationInventoryAsync(_dataViewMode,  locationInventoryList,  locationCode,  performUpserts);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource.UpdateLocationInventory(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment},System.String)">
            <summary>
            Updates the active stock on hand inventory of products for the location code specified in the request.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="locationInventoryAdjustments">Properties of an adjustment to the active product inventory of a specific location.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = locationinventory.UpdateLocationInventory(_dataViewMode,  locationInventoryAdjustments,  locationCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource.UpdateLocationInventoryAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment},System.String)">
            <summary>
            Updates the active stock on hand inventory of products for the location code specified in the request.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="locationInventoryAdjustments">Properties of an adjustment to the active product inventory of a specific location.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = await locationinventory.UpdateLocationInventoryAsync(_dataViewMode,  locationInventoryAdjustments,  locationCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource.DeleteLocationInventory(System.String,System.String)">
            <summary>
            Deletes the product code inventory definition for the location specified in the request.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              locationinventory.DeleteLocationInventory(_dataViewMode,  locationCode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource.DeleteLocationInventoryAsync(System.String,System.String)">
            <summary>
            Deletes the product code inventory definition for the location specified in the request.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              await locationinventory.DeleteLocationInventoryAsync(_dataViewMode,  locationCode,  productCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.MasterCatalogResource">
            <summary>
            Use the Master Catalog resource to view details of the master catalogs associated with a tenant and to manage the product publishing mode for each master catalog.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.MasterCatalogResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.MasterCatalogResource.GetMasterCatalogs(System.String)">
            <summary>
            Retrieve the details of all master catalog associated with a tenant.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalogCollection"/>
            </returns>
            <example>
            <code>
              var mastercatalog = new MasterCatalog();
              var masterCatalogCollection = mastercatalog.GetMasterCatalogs( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.MasterCatalogResource.GetMasterCatalogsAsync(System.String)">
            <summary>
            Retrieve the details of all master catalog associated with a tenant.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalogCollection"/>
            </returns>
            <example>
            <code>
              var mastercatalog = new MasterCatalog();
              var masterCatalogCollection = await mastercatalog.GetMasterCatalogsAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.MasterCatalogResource.GetMasterCatalog(System.Int32,System.String)">
            <summary>
            Retrieve the details of the master catalog specified in the request.
            </summary>
            <param name="masterCatalogId">The unique identifier of the master catalog associated with the entity.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalog"/>
            </returns>
            <example>
            <code>
              var mastercatalog = new MasterCatalog();
              var masterCatalog = mastercatalog.GetMasterCatalog( masterCatalogId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.MasterCatalogResource.GetMasterCatalogAsync(System.Int32,System.String)">
            <summary>
            Retrieve the details of the master catalog specified in the request.
            </summary>
            <param name="masterCatalogId">The unique identifier of the master catalog associated with the entity.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalog"/>
            </returns>
            <example>
            <code>
              var mastercatalog = new MasterCatalog();
              var masterCatalog = await mastercatalog.GetMasterCatalogAsync( masterCatalogId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.MasterCatalogResource.UpdateMasterCatalog(Mozu.Api.Contracts.ProductAdmin.MasterCatalog,System.Int32,System.String)">
            <summary>
            Updates the product publishing mode for the master catalog specified in the request.
            </summary>
            <param name="masterCatalogId"></param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="masterCatalog">Properties of a master product catalog defined for a tenant. All catalogs and sites associated with a master catalog share product definitions.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalog"/>
            </returns>
            <example>
            <code>
              var mastercatalog = new MasterCatalog();
              var masterCatalog = mastercatalog.UpdateMasterCatalog( masterCatalog,  masterCatalogId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.MasterCatalogResource.UpdateMasterCatalogAsync(Mozu.Api.Contracts.ProductAdmin.MasterCatalog,System.Int32,System.String)">
            <summary>
            Updates the product publishing mode for the master catalog specified in the request.
            </summary>
            <param name="masterCatalogId"></param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="masterCatalog">Properties of a master product catalog defined for a tenant. All catalogs and sites associated with a master catalog share product definitions.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalog"/>
            </returns>
            <example>
            <code>
              var mastercatalog = new MasterCatalog();
              var masterCatalog = await mastercatalog.UpdateMasterCatalogAsync( masterCatalog,  masterCatalogId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource">
            <summary>
            Temporarily hold a product from inventory while a shopper is filling out payment information. Create a product reservation when a shopper proceeds to check out and then release the reservation when the order process is complete.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.GetProductReservations(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of product reservations according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection"/>
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservationCollection = productreservation.GetProductReservations(_dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.GetProductReservationsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of product reservations according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection"/>
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservationCollection = await productreservation.GetProductReservationsAsync(_dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.GetProductReservation(System.Int32,System.String)">
            <summary>
            Retrieves the details of a product reservation.
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservation = productreservation.GetProductReservation(_dataViewMode,  productReservationId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.GetProductReservationAsync(System.Int32,System.String)">
            <summary>
            Retrieves the details of a product reservation.
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservation = await productreservation.GetProductReservationAsync(_dataViewMode,  productReservationId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.AddProductReservations(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductReservation},System.Nullable{System.Boolean})">
            <summary>
            Creates a new product reservation for a product. This action places a hold on the product inventory for the quantity specified during the ordering process.
            </summary>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productReservations">A hold placed on product inventory for a particular product so that the quantity specified is set aside and available for purchase during the ordering process.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservation = productreservation.AddProductReservations(_dataViewMode,  productReservations,  skipInventoryCheck);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.AddProductReservationsAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductReservation},System.Nullable{System.Boolean})">
            <summary>
            Creates a new product reservation for a product. This action places a hold on the product inventory for the quantity specified during the ordering process.
            </summary>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productReservations">A hold placed on product inventory for a particular product so that the quantity specified is set aside and available for purchase during the ordering process.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservation = await productreservation.AddProductReservationsAsync(_dataViewMode,  productReservations,  skipInventoryCheck);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.CommitReservations(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductReservation})">
            <summary>
            Commits a product reservation to decrement the product's inventory by the quantity specified then release the reservation once the order process completed successfully.
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productReservations">A hold placed on product inventory for a particular product so that the quantity specified is set aside and available for purchase during the ordering process.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              productreservation.CommitReservations(_dataViewMode,  productReservations);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.CommitReservationsAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductReservation})">
            <summary>
            Commits a product reservation to decrement the product's inventory by the quantity specified then release the reservation once the order process completed successfully.
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productReservations">A hold placed on product inventory for a particular product so that the quantity specified is set aside and available for purchase during the ordering process.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              await productreservation.CommitReservationsAsync(_dataViewMode,  productReservations);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.UpdateProductReservations(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductReservation},System.Nullable{System.Boolean})">
            <summary>
            Updates an existing product reservation for a product.
            </summary>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productReservations">A hold placed on product inventory for a particular product so that the quantity specified is set aside and available for purchase during the ordering process.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservation = productreservation.UpdateProductReservations(_dataViewMode,  productReservations,  skipInventoryCheck);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.UpdateProductReservationsAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductReservation},System.Nullable{System.Boolean})">
            <summary>
            Updates an existing product reservation for a product.
            </summary>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productReservations">A hold placed on product inventory for a particular product so that the quantity specified is set aside and available for purchase during the ordering process.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservation = await productreservation.UpdateProductReservationsAsync(_dataViewMode,  productReservations,  skipInventoryCheck);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.DeleteProductReservation(System.Int32)">
            <summary>
            Deletes a product reservation. For example, delete a reservation when an order is not processed to return the product quantity back to inventory.
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              productreservation.DeleteProductReservation(_dataViewMode,  productReservationId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.DeleteProductReservationAsync(System.Int32)">
            <summary>
            Deletes a product reservation. For example, delete a reservation when an order is not processed to return the product quantity back to inventory.
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              await productreservation.DeleteProductReservationAsync(_dataViewMode,  productReservationId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource">
            <summary>
            Use the Product Administration resource to create new product definitions in the master catalog and determine which catalogs will feature products. You can also assign attribute values for defined products, manage product-level location inventory, and configure the variations of a product.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProducts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of products according to any specified facets, filter criteria, and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="noCount">If true, the operation does not return the TotalCount number of results.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productCollection = product.GetProducts(_dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  noCount,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProductsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of products according to any specified facets, filter criteria, and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="noCount">If true, the operation does not return the TotalCount number of results.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productCollection = await product.GetProductsAsync(_dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  noCount,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProductInCatalogs(System.String)">
            <summary>
            Retrieves a product that is associated with one or more specific catalogs.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInCatalogInfo = product.GetProductInCatalogs(_dataViewMode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProductInCatalogsAsync(System.String)">
            <summary>
            Retrieves a product that is associated with one or more specific catalogs.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInCatalogInfo = await product.GetProductInCatalogsAsync(_dataViewMode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProductInCatalog(System.String,System.Int32,System.String)">
            <summary>
            Retrieves the details of a product associated with a specific catalog.
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInCatalogInfo = product.GetProductInCatalog(_dataViewMode,  productCode,  catalogId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProductInCatalogAsync(System.String,System.Int32,System.String)">
            <summary>
            Retrieves the details of a product associated with a specific catalog.
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInCatalogInfo = await product.GetProductInCatalogAsync(_dataViewMode,  productCode,  catalogId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProduct(System.String,System.String)">
            <summary>
            Retrieves the details of a product definition.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = product.GetProduct(_dataViewMode,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProductAsync(System.String,System.String)">
            <summary>
            Retrieves the details of a product definition.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = await product.GetProductAsync(_dataViewMode,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.AddProduct(Mozu.Api.Contracts.ProductAdmin.Product,System.String)">
            <summary>
            Creates a new product definition in the specified master catalog.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="product">The properties of a product, referenced and used by carts, orders, wish lists, and returns.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = product.AddProduct(_dataViewMode,  product,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.AddProductAsync(Mozu.Api.Contracts.ProductAdmin.Product,System.String)">
            <summary>
            Creates a new product definition in the specified master catalog.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="product">The properties of a product, referenced and used by carts, orders, wish lists, and returns.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = await product.AddProductAsync(_dataViewMode,  product,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.AddProductInCatalog(Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo,System.String,System.String)">
            <summary>
            Associates a new product defined in the master catalog with a specific catalog.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productInCatalogInfoIn">Properties of a product associated with a specific catalog.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInCatalogInfo = product.AddProductInCatalog(_dataViewMode,  productInCatalogInfoIn,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.AddProductInCatalogAsync(Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo,System.String,System.String)">
            <summary>
            Associates a new product defined in the master catalog with a specific catalog.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productInCatalogInfoIn">Properties of a product associated with a specific catalog.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInCatalogInfo = await product.AddProductInCatalogAsync(_dataViewMode,  productInCatalogInfoIn,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.RenameProductCodes(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductCodeRename})">
            <summary>
            Performs an update to a product code by renaming or replacing the current product code with a new one.
            </summary>
            <param name="productCodeRenames">Properties for a product code current and changed content.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var product = new Product();
              product.RenameProductCodes( productCodeRenames);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.RenameProductCodesAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductCodeRename})">
            <summary>
            Performs an update to a product code by renaming or replacing the current product code with a new one.
            </summary>
            <param name="productCodeRenames">Properties for a product code current and changed content.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var product = new Product();
              await product.RenameProductCodesAsync( productCodeRenames);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.UpdateProductInCatalogs(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo},System.String)">
            <summary>
            Updates the properties of a product specific to each catalog associated with the product.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productInCatalogsIn">Properties of a product associated with a specific catalog.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInCatalogInfo = product.UpdateProductInCatalogs(_dataViewMode,  productInCatalogsIn,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.UpdateProductInCatalogsAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo},System.String)">
            <summary>
            Updates the properties of a product specific to each catalog associated with the product.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productInCatalogsIn">Properties of a product associated with a specific catalog.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInCatalogInfo = await product.UpdateProductInCatalogsAsync(_dataViewMode,  productInCatalogsIn,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.UpdateProductInCatalog(Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo,System.String,System.Int32,System.String)">
            <summary>
            Updates one or more properties of a product associated with a specific catalog.
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productInCatalogInfoIn">Properties of a product associated with a specific catalog.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInCatalogInfo = product.UpdateProductInCatalog(_dataViewMode,  productInCatalogInfoIn,  productCode,  catalogId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.UpdateProductInCatalogAsync(Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo,System.String,System.Int32,System.String)">
            <summary>
            Updates one or more properties of a product associated with a specific catalog.
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productInCatalogInfoIn">Properties of a product associated with a specific catalog.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInCatalogInfo = await product.UpdateProductInCatalogAsync(_dataViewMode,  productInCatalogInfoIn,  productCode,  catalogId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.UpdateProduct(Mozu.Api.Contracts.ProductAdmin.Product,System.String,System.String)">
            <summary>
            Updates one or more properties of a product definition in a master catalog.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="product">The properties of a product, referenced and used by carts, orders, wish lists, and returns.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = product.UpdateProduct(_dataViewMode,  product,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.UpdateProductAsync(Mozu.Api.Contracts.ProductAdmin.Product,System.String,System.String)">
            <summary>
            Updates one or more properties of a product definition in a master catalog.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="product">The properties of a product, referenced and used by carts, orders, wish lists, and returns.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = await product.UpdateProductAsync(_dataViewMode,  product,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.DeleteProduct(System.String)">
            <summary>
            Deletes the specified product from a master catalog.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var product = new Product();
              product.DeleteProduct(_dataViewMode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.DeleteProductAsync(System.String)">
            <summary>
            Deletes the specified product from a master catalog.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var product = new Product();
              await product.DeleteProductAsync(_dataViewMode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.DeleteProductInCatalog(System.String,System.Int32)">
            <summary>
            Removes the product association defined for a specific catalog.
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var product = new Product();
              product.DeleteProductInCatalog(_dataViewMode,  productCode,  catalogId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.DeleteProductInCatalogAsync(System.String,System.Int32)">
            <summary>
            Removes the product association defined for a specific catalog.
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var product = new Product();
              await product.DeleteProductInCatalogAsync(_dataViewMode,  productCode,  catalogId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource">
            <summary>
            Use the Product Location Inventory resource to manage the levels of active product inventory to maintain across defined locations at the product level.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource.GetLocationInventories(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves all locations for which a product has inventory defined and displays the inventory definition properties of each location.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection"/>
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventoryCollection = locationinventory.GetLocationInventories(_dataViewMode,  productCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource.GetLocationInventoriesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves all locations for which a product has inventory defined and displays the inventory definition properties of each location.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection"/>
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventoryCollection = await locationinventory.GetLocationInventoriesAsync(_dataViewMode,  productCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource.GetLocationInventory(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the inventory of the product in the location specified in the request.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = locationinventory.GetLocationInventory(_dataViewMode,  productCode,  locationCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource.GetLocationInventoryAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the inventory of the product in the location specified in the request.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = await locationinventory.GetLocationInventoryAsync(_dataViewMode,  productCode,  locationCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource.AddLocationInventory(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventory},System.String,System.Nullable{System.Boolean})">
            <summary>
            Creates a new location inventory definition for the product code specified in the request.
            </summary>
            <param name="performUpserts">Query string parameter lets the service perform an update for a new or existing record. When run, the update occurs without throwing a conflict exception that the record exists. If true, the updates completes regardless of the record currently existing. By default, if no value is specified, the service assumes this value is false.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="locationInventoryList">Properties of an inventory definition that defines the level of inventory for a specific product at a given location.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = locationinventory.AddLocationInventory(_dataViewMode,  locationInventoryList,  productCode,  performUpserts);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource.AddLocationInventoryAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventory},System.String,System.Nullable{System.Boolean})">
            <summary>
            Creates a new location inventory definition for the product code specified in the request.
            </summary>
            <param name="performUpserts">Query string parameter lets the service perform an update for a new or existing record. When run, the update occurs without throwing a conflict exception that the record exists. If true, the updates completes regardless of the record currently existing. By default, if no value is specified, the service assumes this value is false.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="locationInventoryList">Properties of an inventory definition that defines the level of inventory for a specific product at a given location.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = await locationinventory.AddLocationInventoryAsync(_dataViewMode,  locationInventoryList,  productCode,  performUpserts);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource.UpdateLocationInventory(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment},System.String)">
            <summary>
            Updates the current level of stock at each location associated with the product code specified in the request.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="locationInventoryAdjustments">Properties of an adjustment to the active product inventory of a specific location.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = locationinventory.UpdateLocationInventory(_dataViewMode,  locationInventoryAdjustments,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource.UpdateLocationInventoryAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment},System.String)">
            <summary>
            Updates the current level of stock at each location associated with the product code specified in the request.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="locationInventoryAdjustments">Properties of an adjustment to the active product inventory of a specific location.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = await locationinventory.UpdateLocationInventoryAsync(_dataViewMode,  locationInventoryAdjustments,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource.DeleteLocationInventory(System.String,System.String)">
            <summary>
            Deletes the location inventory definition for the product code specified in the request.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              locationinventory.DeleteLocationInventory(_dataViewMode,  productCode,  locationCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource.DeleteLocationInventoryAsync(System.String,System.String)">
            <summary>
            Deletes the location inventory definition for the product code specified in the request.
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              await locationinventory.DeleteLocationInventoryAsync(_dataViewMode,  productCode,  locationCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource">
            <summary>
            Use the Extras resource to configure an extra product attribute for products associated with the product type that uses the extra attribute.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.GetExtras(System.String)">
            <summary>
            Retrieves a list of extras configured for the product according to any defined filter and sort criteria.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = productextra.GetExtras(_dataViewMode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.GetExtrasAsync(System.String)">
            <summary>
            Retrieves a list of extras configured for the product according to any defined filter and sort criteria.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = await productextra.GetExtrasAsync(_dataViewMode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.GetExtraValueLocalizedDeltaPrices(System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of all localized delta price values for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtraValueDeltaPrice = productextra.GetExtraValueLocalizedDeltaPrices(_dataViewMode,  productCode,  attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.GetExtraValueLocalizedDeltaPricesAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of all localized delta price values for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtraValueDeltaPrice = await productextra.GetExtraValueLocalizedDeltaPricesAsync(_dataViewMode,  productCode,  attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.GetExtraValueLocalizedDeltaPrice(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the localized delta price value for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtraValueDeltaPrice = productextra.GetExtraValueLocalizedDeltaPrice(_dataViewMode,  productCode,  attributeFQN,  value,  currencyCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.GetExtraValueLocalizedDeltaPriceAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the localized delta price value for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtraValueDeltaPrice = await productextra.GetExtraValueLocalizedDeltaPriceAsync(_dataViewMode,  productCode,  attributeFQN,  value,  currencyCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.GetExtra(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of an extra attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = productextra.GetExtra(_dataViewMode,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.GetExtraAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of an extra attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = await productextra.GetExtraAsync(_dataViewMode,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.AddExtraValueLocalizedDeltaPrice(Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice,System.String,System.String,System.String,System.String)">
            <summary>
            Adds a localized delta price value for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedDeltaPrice">The properties of the price difference between the product extra and the base product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtraValueDeltaPrice = productextra.AddExtraValueLocalizedDeltaPrice(_dataViewMode,  localizedDeltaPrice,  productCode,  attributeFQN,  value,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.AddExtraValueLocalizedDeltaPriceAsync(Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice,System.String,System.String,System.String,System.String)">
            <summary>
            Adds a localized delta price value for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedDeltaPrice">The properties of the price difference between the product extra and the base product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtraValueDeltaPrice = await productextra.AddExtraValueLocalizedDeltaPriceAsync(_dataViewMode,  localizedDeltaPrice,  productCode,  attributeFQN,  value,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.AddExtra(Mozu.Api.Contracts.ProductAdmin.ProductExtra,System.String,System.String)">
            <summary>
            Configure an extra attribute for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productExtra">Properties of an extra attribute to defined for a product that is associated with a product type that uses the extra. Setting up extras for a product enables shopper-entered information, such as initials for a monogram.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = productextra.AddExtra(_dataViewMode,  productExtra,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.AddExtraAsync(Mozu.Api.Contracts.ProductAdmin.ProductExtra,System.String,System.String)">
            <summary>
            Configure an extra attribute for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productExtra">Properties of an extra attribute to defined for a product that is associated with a product type that uses the extra. Setting up extras for a product enables shopper-entered information, such as initials for a monogram.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = await productextra.AddExtraAsync(_dataViewMode,  productExtra,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.UpdateExtraValueLocalizedDeltaPrices(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice},System.String,System.String,System.String)">
            <summary>
            Updates all localized delta price values for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedDeltaPrice">The properties of the price difference between the product extra and the base product.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtraValueDeltaPrice = productextra.UpdateExtraValueLocalizedDeltaPrices(_dataViewMode,  localizedDeltaPrice,  productCode,  attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.UpdateExtraValueLocalizedDeltaPricesAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice},System.String,System.String,System.String)">
            <summary>
            Updates all localized delta price values for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedDeltaPrice">The properties of the price difference between the product extra and the base product.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtraValueDeltaPrice = await productextra.UpdateExtraValueLocalizedDeltaPricesAsync(_dataViewMode,  localizedDeltaPrice,  productCode,  attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.UpdateExtraValueLocalizedDeltaPrice(Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the localized delta price value for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedDeltaPrice">The properties of the price difference between the product extra and the base product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtraValueDeltaPrice = productextra.UpdateExtraValueLocalizedDeltaPrice(_dataViewMode,  localizedDeltaPrice,  productCode,  attributeFQN,  value,  currencyCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.UpdateExtraValueLocalizedDeltaPriceAsync(Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the localized delta price value for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedDeltaPrice">The properties of the price difference between the product extra and the base product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtraValueDeltaPrice = await productextra.UpdateExtraValueLocalizedDeltaPriceAsync(_dataViewMode,  localizedDeltaPrice,  productCode,  attributeFQN,  value,  currencyCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.UpdateExtra(Mozu.Api.Contracts.ProductAdmin.ProductExtra,System.String,System.String,System.String)">
            <summary>
            Updates the configuration of an extra attribute for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productExtra">Properties of an extra attribute to defined for a product that is associated with a product type that uses the extra. Setting up extras for a product enables shopper-entered information, such as initials for a monogram.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = productextra.UpdateExtra(_dataViewMode,  productExtra,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.UpdateExtraAsync(Mozu.Api.Contracts.ProductAdmin.ProductExtra,System.String,System.String,System.String)">
            <summary>
            Updates the configuration of an extra attribute for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productExtra">Properties of an extra attribute to defined for a product that is associated with a product type that uses the extra. Setting up extras for a product enables shopper-entered information, such as initials for a monogram.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = await productextra.UpdateExtraAsync(_dataViewMode,  productExtra,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.DeleteExtra(System.String,System.String)">
            <summary>
            Delete a product extra configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              productextra.DeleteExtra(_dataViewMode,  productCode,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.DeleteExtraAsync(System.String,System.String)">
            <summary>
            Delete a product extra configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              await productextra.DeleteExtraAsync(_dataViewMode,  productCode,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.DeleteExtraValueLocalizedDeltaPrice(System.String,System.String,System.String,System.String)">
            <summary>
            Deletes the localized delta price value for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">Use this field to include those fields which are not included by default.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              productextra.DeleteExtraValueLocalizedDeltaPrice(_dataViewMode,  productCode,  attributeFQN,  value,  currencyCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.DeleteExtraValueLocalizedDeltaPriceAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Deletes the localized delta price value for a product extra. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">Use this field to include those fields which are not included by default.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              await productextra.DeleteExtraValueLocalizedDeltaPriceAsync(_dataViewMode,  productCode,  attributeFQN,  value,  currencyCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource">
            <summary>
            Use the Options resource to configure the option attributes and vocabulary values for an individual product associated with the product type that uses the option attribute. Options are used to generate variations of a product.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.GetOptions(System.String)">
            <summary>
            Retrieves a list of all option attributes configured for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = productoption.GetOptions(_dataViewMode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.GetOptionsAsync(System.String)">
            <summary>
            Retrieves a list of all option attributes configured for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = await productoption.GetOptionsAsync(_dataViewMode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.GetOption(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of an option attribute configuration for the specified product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = productoption.GetOption(_dataViewMode,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.GetOptionAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of an option attribute configuration for the specified product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = await productoption.GetOptionAsync(_dataViewMode,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.AddOption(Mozu.Api.Contracts.ProductAdmin.ProductOption,System.String,System.String)">
            <summary>
            Configures an option attribute for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productOption">Properties of the product option to create such as attribute detail, fully qualified name, and list of product option values.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = productoption.AddOption(_dataViewMode,  productOption,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.AddOptionAsync(Mozu.Api.Contracts.ProductAdmin.ProductOption,System.String,System.String)">
            <summary>
            Configures an option attribute for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productOption">Properties of the product option to create such as attribute detail, fully qualified name, and list of product option values.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = await productoption.AddOptionAsync(_dataViewMode,  productOption,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.UpdateOption(Mozu.Api.Contracts.ProductAdmin.ProductOption,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of an option attribute configured for a product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productOption">Properties of the product option to create such as attribute detail, fully qualified name, and list of product option values.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = productoption.UpdateOption(_dataViewMode,  productOption,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.UpdateOptionAsync(Mozu.Api.Contracts.ProductAdmin.ProductOption,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of an option attribute configured for a product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productOption">Properties of the product option to create such as attribute detail, fully qualified name, and list of product option values.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = await productoption.UpdateOptionAsync(_dataViewMode,  productOption,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.DeleteOption(System.String,System.String)">
            <summary>
            Deletes the configuration of an option attribute for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              productoption.DeleteOption(_dataViewMode,  productCode,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.DeleteOptionAsync(System.String,System.String)">
            <summary>
            Deletes the configuration of an option attribute for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              await productoption.DeleteOptionAsync(_dataViewMode,  productCode,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource">
            <summary>
            Use the Properties resource to configure a property attribute for an individual product associated with a product type that uses the property attribute, as well as set property values for the product.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.GetProperties(System.String)">
            <summary>
            Retrieves a list of the property attributes configured for the product specified in the request.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = productproperty.GetProperties(_dataViewMode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.GetPropertiesAsync(System.String)">
            <summary>
            Retrieves a list of the property attributes configured for the product specified in the request.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = await productproperty.GetPropertiesAsync(_dataViewMode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.GetPropertyValueLocalizedContents(System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of property values for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productPropertyValueLocalizedContent = productproperty.GetPropertyValueLocalizedContents(_dataViewMode,  productCode,  attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.GetPropertyValueLocalizedContentsAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of property values for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productPropertyValueLocalizedContent = await productproperty.GetPropertyValueLocalizedContentsAsync(_dataViewMode,  productCode,  attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.GetPropertyValueLocalizedContent(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the property value for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productPropertyValueLocalizedContent = productproperty.GetPropertyValueLocalizedContent(_dataViewMode,  productCode,  attributeFQN,  value,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.GetPropertyValueLocalizedContentAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the property value for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productPropertyValueLocalizedContent = await productproperty.GetPropertyValueLocalizedContentAsync(_dataViewMode,  productCode,  attributeFQN,  value,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.GetProperty(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a property attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = productproperty.GetProperty(_dataViewMode,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.GetPropertyAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a property attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = await productproperty.GetPropertyAsync(_dataViewMode,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.AddPropertyValueLocalizedContent(Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent,System.String,System.String,System.String,System.String)">
            <summary>
            Adds a property value for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedContent">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productPropertyValueLocalizedContent = productproperty.AddPropertyValueLocalizedContent(_dataViewMode,  localizedContent,  productCode,  attributeFQN,  value,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.AddPropertyValueLocalizedContentAsync(Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent,System.String,System.String,System.String,System.String)">
            <summary>
            Adds a property value for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedContent">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productPropertyValueLocalizedContent = await productproperty.AddPropertyValueLocalizedContentAsync(_dataViewMode,  localizedContent,  productCode,  attributeFQN,  value,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.AddProperty(Mozu.Api.Contracts.ProductAdmin.ProductProperty,System.String,System.String)">
            <summary>
            Configures a property attribute for the product specified in the request.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productProperty">Details of a property defined for a product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = productproperty.AddProperty(_dataViewMode,  productProperty,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.AddPropertyAsync(Mozu.Api.Contracts.ProductAdmin.ProductProperty,System.String,System.String)">
            <summary>
            Configures a property attribute for the product specified in the request.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productProperty">Details of a property defined for a product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = await productproperty.AddPropertyAsync(_dataViewMode,  productProperty,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.UpdatePropertyValueLocalizedContents(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent},System.String,System.String,System.String)">
            <summary>
            Updates all property values for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedContent">Content of the product property value in the language defined for the locale code.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productPropertyValueLocalizedContent = productproperty.UpdatePropertyValueLocalizedContents(_dataViewMode,  localizedContent,  productCode,  attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.UpdatePropertyValueLocalizedContentsAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent},System.String,System.String,System.String)">
            <summary>
            Updates all property values for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedContent">Content of the product property value in the language defined for the locale code.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productPropertyValueLocalizedContent = await productproperty.UpdatePropertyValueLocalizedContentsAsync(_dataViewMode,  localizedContent,  productCode,  attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.UpdatePropertyValueLocalizedContent(Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the property value for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedContent">Content of the product property value in the language defined for the locale code.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productPropertyValueLocalizedContent = productproperty.UpdatePropertyValueLocalizedContent(_dataViewMode,  localizedContent,  productCode,  attributeFQN,  value,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.UpdatePropertyValueLocalizedContentAsync(Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the property value for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <param name="localizedContent">Content of the product property value in the language defined for the locale code.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productPropertyValueLocalizedContent = await productproperty.UpdatePropertyValueLocalizedContentAsync(_dataViewMode,  localizedContent,  productCode,  attributeFQN,  value,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.UpdateProperty(Mozu.Api.Contracts.ProductAdmin.ProductProperty,System.String,System.String,System.String)">
            <summary>
            Update one or more details of a property attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productProperty">Details of a property defined for a product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = productproperty.UpdateProperty(_dataViewMode,  productProperty,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.UpdatePropertyAsync(Mozu.Api.Contracts.ProductAdmin.ProductProperty,System.String,System.String,System.String)">
            <summary>
            Update one or more details of a property attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="productProperty">Details of a property defined for a product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = await productproperty.UpdatePropertyAsync(_dataViewMode,  productProperty,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.DeleteProperty(System.String,System.String)">
            <summary>
            Deletes the configuration of a property attribute for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              productproperty.DeleteProperty(_dataViewMode,  productCode,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.DeletePropertyAsync(System.String,System.String)">
            <summary>
            Deletes the configuration of a property attribute for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              await productproperty.DeletePropertyAsync(_dataViewMode,  productCode,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.DeletePropertyValueLocalizedContent(System.String,System.String,System.String,System.String)">
            <summary>
            Deletes the property value for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              productproperty.DeletePropertyValueLocalizedContent(_dataViewMode,  productCode,  attributeFQN,  value,  localeCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.DeletePropertyValueLocalizedContentAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Deletes the property value for localized content. This content is set by the locale code. 
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              await productproperty.DeletePropertyValueLocalizedContentAsync(_dataViewMode,  productCode,  attributeFQN,  value,  localeCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource">
            <summary>
            Use the product variations sub-resource to manage the variations of a product based on its attributes. For example, a t-shirt product could be offered in six variations: Small Black, Medium Black, Large Black, Small White, Medium White, and Large White.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.GetProductVariationLocalizedDeltaPrices(System.String,System.String)">
            <summary>
            Retrieves a collection of the localized delta price values for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationDeltaPrice = productvariation.GetProductVariationLocalizedDeltaPrices(_dataViewMode,  productCode,  variationKey);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.GetProductVariationLocalizedDeltaPricesAsync(System.String,System.String)">
            <summary>
            Retrieves a collection of the localized delta price values for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationDeltaPrice = await productvariation.GetProductVariationLocalizedDeltaPricesAsync(_dataViewMode,  productCode,  variationKey);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.GetProductVariationLocalizedDeltaPrice(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the localized delta price value for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationDeltaPrice = productvariation.GetProductVariationLocalizedDeltaPrice(_dataViewMode,  productCode,  variationKey,  currencyCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.GetProductVariationLocalizedDeltaPriceAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the localized delta price value for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationDeltaPrice = await productvariation.GetProductVariationLocalizedDeltaPriceAsync(_dataViewMode,  productCode,  variationKey,  currencyCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.GetProductVariation(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a product variation based on the supplied product code and variation key.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariation = productvariation.GetProductVariation(_dataViewMode,  productCode,  variationKey,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.GetProductVariationAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a product variation based on the supplied product code and variation key.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariation = await productvariation.GetProductVariationAsync(_dataViewMode,  productCode,  variationKey,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.GetProductVariations(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of the product variations configured for the specified product code.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationPagedCollection = productvariation.GetProductVariations(_dataViewMode,  productCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.GetProductVariationsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of the product variations configured for the specified product code.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationPagedCollection = await productvariation.GetProductVariationsAsync(_dataViewMode,  productCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.AddProductVariationLocalizedDeltaPrice(Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice,System.String,System.String,System.String)">
            <summary>
            Adds the localized delta price value for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="localizedDeltaPrice">The difference between the base price for the product and this variation of the product, which can be a positive or negative decimal value. For example, if the base price for a t-shirt product is $10, but the XL variation should cost $12, the DeltaPrice value should be "2". However, if the XS variation should only cost $8, the DeltaPrice value should be "-2".</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationDeltaPrice = productvariation.AddProductVariationLocalizedDeltaPrice(_dataViewMode,  localizedDeltaPrice,  productCode,  variationKey,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.AddProductVariationLocalizedDeltaPriceAsync(Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice,System.String,System.String,System.String)">
            <summary>
            Adds the localized delta price value for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="localizedDeltaPrice">The difference between the base price for the product and this variation of the product, which can be a positive or negative decimal value. For example, if the base price for a t-shirt product is $10, but the XL variation should cost $12, the DeltaPrice value should be "2". However, if the XS variation should only cost $8, the DeltaPrice value should be "-2".</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationDeltaPrice = await productvariation.AddProductVariationLocalizedDeltaPriceAsync(_dataViewMode,  localizedDeltaPrice,  productCode,  variationKey,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.UpdateProductVariationLocalizedDeltaPrices(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice},System.String,System.String)">
            <summary>
            Updates all localized delta price values for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="localizedDeltaPrice">The difference between the base price for the product and this variation of the product, which can be a positive or negative decimal value. For example, if the base price for a t-shirt product is $10, but the XL variation should cost $12, the DeltaPrice value should be "2". However, if the XS variation should only cost $8, the DeltaPrice value should be "-2".</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationDeltaPrice = productvariation.UpdateProductVariationLocalizedDeltaPrices(_dataViewMode,  localizedDeltaPrice,  productCode,  variationKey);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.UpdateProductVariationLocalizedDeltaPricesAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice},System.String,System.String)">
            <summary>
            Updates all localized delta price values for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="localizedDeltaPrice">The difference between the base price for the product and this variation of the product, which can be a positive or negative decimal value. For example, if the base price for a t-shirt product is $10, but the XL variation should cost $12, the DeltaPrice value should be "2". However, if the XS variation should only cost $8, the DeltaPrice value should be "-2".</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationDeltaPrice = await productvariation.UpdateProductVariationLocalizedDeltaPricesAsync(_dataViewMode,  localizedDeltaPrice,  productCode,  variationKey);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.UpdateProductVariationLocalizedDeltaPrice(Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice,System.String,System.String,System.String,System.String)">
            <summary>
            Updatesthe localized delta price value for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="localizedDeltaPrice">The difference between the base price for the product and this variation of the product, which can be a positive or negative decimal value. For example, if the base price for a t-shirt product is $10, but the XL variation should cost $12, the DeltaPrice value should be "2". However, if the XS variation should only cost $8, the DeltaPrice value should be "-2".</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationDeltaPrice = productvariation.UpdateProductVariationLocalizedDeltaPrice(_dataViewMode,  localizedDeltaPrice,  productCode,  variationKey,  currencyCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.UpdateProductVariationLocalizedDeltaPriceAsync(Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice,System.String,System.String,System.String,System.String)">
            <summary>
            Updatesthe localized delta price value for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="localizedDeltaPrice">The difference between the base price for the product and this variation of the product, which can be a positive or negative decimal value. For example, if the base price for a t-shirt product is $10, but the XL variation should cost $12, the DeltaPrice value should be "2". However, if the XS variation should only cost $8, the DeltaPrice value should be "-2".</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationDeltaPrice = await productvariation.UpdateProductVariationLocalizedDeltaPriceAsync(_dataViewMode,  localizedDeltaPrice,  productCode,  variationKey,  currencyCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.UpdateProductVariation(Mozu.Api.Contracts.ProductAdmin.ProductVariation,System.String,System.String,System.String)">
            <summary>
            Modifies the details of a variation, based on the supplied variation key, for the specified product code.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="productVariation">Properties of a specific product variation.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariation = productvariation.UpdateProductVariation(_dataViewMode,  productVariation,  productCode,  variationKey,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.UpdateProductVariationAsync(Mozu.Api.Contracts.ProductAdmin.ProductVariation,System.String,System.String,System.String)">
            <summary>
            Modifies the details of a variation, based on the supplied variation key, for the specified product code.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="productVariation">Properties of a specific product variation.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariation = await productvariation.UpdateProductVariationAsync(_dataViewMode,  productVariation,  productCode,  variationKey,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.UpdateProductVariations(Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection,System.String,System.String)">
            <summary>
            Modifies the collection of variations for the specified product code. Because this PUT replaces the existing resource, supply all information necessary to maintain for the product variation.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="productVariations">Collection of variations configured for a product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationCollection = productvariation.UpdateProductVariations(_dataViewMode,  productVariations,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.UpdateProductVariationsAsync(Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection,System.String,System.String)">
            <summary>
            Modifies the collection of variations for the specified product code. Because this PUT replaces the existing resource, supply all information necessary to maintain for the product variation.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="productVariations">Collection of variations configured for a product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationCollection = await productvariation.UpdateProductVariationsAsync(_dataViewMode,  productVariations,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.DeleteProductVariation(System.String,System.String)">
            <summary>
            Deletes a variation, based on the supplied variation key, for the specified product code.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              productvariation.DeleteProductVariation(_dataViewMode,  productCode,  variationKey);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.DeleteProductVariationAsync(System.String,System.String)">
            <summary>
            Deletes a variation, based on the supplied variation key, for the specified product code.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              await productvariation.DeleteProductVariationAsync(_dataViewMode,  productCode,  variationKey);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.DeleteProductVariationLocalizedDeltaPrice(System.String,System.String,System.String)">
            <summary>
            Deletes the localized delta price value for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              productvariation.DeleteProductVariationLocalizedDeltaPrice(_dataViewMode,  productCode,  variationKey,  currencyCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.DeleteProductVariationLocalizedDeltaPriceAsync(System.String,System.String,System.String)">
            <summary>
            Deletes the localized delta price value for a product variation. Localized delta prices are deltas between two differing monetary conversion amounts between countries, such as US Dollar vs Euro.
            </summary>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              await productvariation.DeleteProductVariationLocalizedDeltaPriceAsync(_dataViewMode,  productCode,  variationKey,  currencyCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.PublishingScopeResource">
            <summary>
            Use the Product Publishing resource to publish or discard pending changes to product definitions in the master catalog.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.PublishingScopeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.PublishingScopeResource.DiscardDrafts(Mozu.Api.Contracts.ProductAdmin.PublishingScope)">
            <summary>
            Deletes the draft version of product changes for each product code specified in the request.
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="publishScope">Describes the scope of the product publishing update, which can include individual product codes or all pending changes.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var publishingscope = new PublishingScope();
              publishingscope.DiscardDrafts(_dataViewMode,  publishScope);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.PublishingScopeResource.DiscardDraftsAsync(Mozu.Api.Contracts.ProductAdmin.PublishingScope)">
            <summary>
            Deletes the draft version of product changes for each product code specified in the request.
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="publishScope">Describes the scope of the product publishing update, which can include individual product codes or all pending changes.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var publishingscope = new PublishingScope();
              await publishingscope.DiscardDraftsAsync(_dataViewMode,  publishScope);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.PublishingScopeResource.PublishDrafts(Mozu.Api.Contracts.ProductAdmin.PublishingScope)">
            <summary>
            Publishes the draft version of product changes for each product code specified in the request, and changes the product publish state to "live".
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="publishScope">Describes the scope of the product publishing update, which can include individual product codes or all pending changes.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var publishingscope = new PublishingScope();
              publishingscope.PublishDrafts(_dataViewMode,  publishScope);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.PublishingScopeResource.PublishDraftsAsync(Mozu.Api.Contracts.ProductAdmin.PublishingScope)">
            <summary>
            Publishes the draft version of product changes for each product code specified in the request, and changes the product publish state to "live".
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="publishScope">Describes the scope of the product publishing update, which can include individual product codes or all pending changes.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var publishingscope = new PublishingScope();
              await publishingscope.PublishDraftsAsync(_dataViewMode,  publishScope);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.SearchResource">
            <summary>
            The Search resource manages all settings and options for providing product search on your site.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.SearchResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SearchResource.GetSettings(System.String)">
            <summary>
            Get site search settings
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.SearchSettings"/>
            </returns>
            <example>
            <code>
              var search = new Search();
              var searchSettings = search.GetSettings( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SearchResource.GetSettingsAsync(System.String)">
            <summary>
            Get site search settings
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.SearchSettings"/>
            </returns>
            <example>
            <code>
              var search = new Search();
              var searchSettings = await search.GetSettingsAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SearchResource.UpdateSettings(Mozu.Api.Contracts.ProductAdmin.SearchSettings,System.String)">
            <summary>
            Adds or Updates (Upsert) the Search Settings for a specific site
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="settings">The settings to control product search and indexing behavior.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.SearchSettings"/>
            </returns>
            <example>
            <code>
              var search = new Search();
              var searchSettings = search.UpdateSettings( settings,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SearchResource.UpdateSettingsAsync(Mozu.Api.Contracts.ProductAdmin.SearchSettings,System.String)">
            <summary>
            Adds or Updates (Upsert) the Search Settings for a specific site
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="settings">The settings to control product search and indexing behavior.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.SearchSettings"/>
            </returns>
            <example>
            <code>
              var search = new Search();
              var searchSettings = await search.UpdateSettingsAsync( settings,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource">
            <summary>
            Allows you to temporarily hold a product from inventory while a shopper is filling out payment information. You create a product reservation when a shopper proceeds to check out and then release the reservation when the order process is complete.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource.GetSoftAllocations(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of sof allocations according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocationCollection"/>
            </returns>
            <example>
            <code>
              var softallocation = new SoftAllocation();
              var softAllocationCollection = softallocation.GetSoftAllocations( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource.GetSoftAllocationsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of sof allocations according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocationCollection"/>
            </returns>
            <example>
            <code>
              var softallocation = new SoftAllocation();
              var softAllocationCollection = await softallocation.GetSoftAllocationsAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource.GetSoftAllocation(System.Int32,System.String)">
            <summary>
            Retrieves the details of a soft allocation.
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="softAllocationId"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocation"/>
            </returns>
            <example>
            <code>
              var softallocation = new SoftAllocation();
              var softAllocation = softallocation.GetSoftAllocation( softAllocationId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource.GetSoftAllocationAsync(System.Int32,System.String)">
            <summary>
            Retrieves the details of a soft allocation.
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="softAllocationId"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocation"/>
            </returns>
            <example>
            <code>
              var softallocation = new SoftAllocation();
              var softAllocation = await softallocation.GetSoftAllocationAsync( softAllocationId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource.AddSoftAllocations(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.SoftAllocation})">
            <summary>
            Creates a new product reservation for a product. This places a hold on the product inventory for the quantity specified during the ordering process.
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="softAllocationsIn">Mozu.ProductAdmin.Contracts.SoftAllocation ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocation"/>}
            </returns>
            <example>
            <code>
              var softallocation = new SoftAllocation();
              var softAllocation = softallocation.AddSoftAllocations( softAllocationsIn);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource.AddSoftAllocationsAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.SoftAllocation})">
            <summary>
            Creates a new product reservation for a product. This places a hold on the product inventory for the quantity specified during the ordering process.
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="softAllocationsIn">Mozu.ProductAdmin.Contracts.SoftAllocation ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocation"/>}
            </returns>
            <example>
            <code>
              var softallocation = new SoftAllocation();
              var softAllocation = await softallocation.AddSoftAllocationsAsync( softAllocationsIn);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource.ConvertToProductReservation(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.SoftAllocation})">
            <summary>
            Converts a set of existing softAllocations into productReservations
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="softAllocations">Mozu.ProductAdmin.Contracts.SoftAllocation ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}
            </returns>
            <example>
            <code>
              var softallocation = new SoftAllocation();
              var productReservation = softallocation.ConvertToProductReservation( softAllocations);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource.ConvertToProductReservationAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.SoftAllocation})">
            <summary>
            Converts a set of existing softAllocations into productReservations
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="softAllocations">Mozu.ProductAdmin.Contracts.SoftAllocation ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}
            </returns>
            <example>
            <code>
              var softallocation = new SoftAllocation();
              var productReservation = await softallocation.ConvertToProductReservationAsync( softAllocations);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource.RenewSoftAllocations(Mozu.Api.Contracts.ProductAdmin.SoftAllocationRenew)">
            <summary>
            Updates a set of softAllocations expiration time in a non trassactional batch
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="softAllocationRenew">Mozu.ProductAdmin.Contracts.SoftAllocationRenew ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocation"/>}
            </returns>
            <example>
            <code>
              var softallocation = new SoftAllocation();
              var softAllocation = softallocation.RenewSoftAllocations( softAllocationRenew);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource.RenewSoftAllocationsAsync(Mozu.Api.Contracts.ProductAdmin.SoftAllocationRenew)">
            <summary>
            Updates a set of softAllocations expiration time in a non trassactional batch
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="softAllocationRenew">Mozu.ProductAdmin.Contracts.SoftAllocationRenew ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocation"/>}
            </returns>
            <example>
            <code>
              var softallocation = new SoftAllocation();
              var softAllocation = await softallocation.RenewSoftAllocationsAsync( softAllocationRenew);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource.UpdateSoftAllocations(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.SoftAllocation})">
            <summary>
            Updates a soft allocationt. This updates a hold on the product inventory for the quantity specified during the ordering process.
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="softAllocations">Mozu.ProductAdmin.Contracts.SoftAllocation ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocation"/>}
            </returns>
            <example>
            <code>
              var softallocation = new SoftAllocation();
              var softAllocation = softallocation.UpdateSoftAllocations( softAllocations);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource.UpdateSoftAllocationsAsync(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.SoftAllocation})">
            <summary>
            Updates a soft allocationt. This updates a hold on the product inventory for the quantity specified during the ordering process.
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="softAllocations">Mozu.ProductAdmin.Contracts.SoftAllocation ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SoftAllocation"/>}
            </returns>
            <example>
            <code>
              var softallocation = new SoftAllocation();
              var softAllocation = await softallocation.UpdateSoftAllocationsAsync( softAllocations);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource.DeleteSoftAllocation(System.Int32)">
            <summary>
            Deletes a soft allocation. You might delete a allocation when an order or cart is not processed to return the product quantity back to inventory.
            </summary>
            <param name="softAllocationId"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var softallocation = new SoftAllocation();
              softallocation.DeleteSoftAllocation( softAllocationId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SoftAllocationResource.DeleteSoftAllocationAsync(System.Int32)">
            <summary>
            Deletes a soft allocation. You might delete a allocation when an order or cart is not processed to return the product quantity back to inventory.
            </summary>
            <param name="softAllocationId"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var softallocation = new SoftAllocation();
              await softallocation.DeleteSoftAllocationAsync( softAllocationId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource">
            <summary>
            Use the Storefront Categories resource to view the product category hierarchy as it appears to shoppers who are browsing the storefront. The hierarchy can be returned as a flat list or as a category tree.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource.GetCategories(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryPagedCollection = category.GetCategories( filter,  startIndex,  pageSize,  sortBy,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource.GetCategoriesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryPagedCollection = await category.GetCategoriesAsync( filter,  startIndex,  pageSize,  sortBy,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource.GetCategory(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="categoryId">Unique identifier for the storefront container used to organize products.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = category.GetCategory( categoryId,  allowInactive,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource.GetCategoryAsync(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="categoryId">Unique identifier for the storefront container used to organize products.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = await category.GetCategoryAsync( categoryId,  allowInactive,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource.GetCategoryTree(System.String)">
            <summary>
            Retrieves the list of product categories that appear on the storefront organized in a hierarchical format. Hidden categories do not appear in the list.
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryCollection = category.GetCategoryTree( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource.GetCategoryTreeAsync(System.String)">
            <summary>
            Retrieves the list of product categories that appear on the storefront organized in a hierarchical format. Hidden categories do not appear in the list.
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryCollection = await category.GetCategoryTreeAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource">
            <summary>
            Use the Storefront Products  resource to manage the shopper product selection process during a visit to the web storefront. You can update product options as shoppers pick and choose their product choices. A shopper cannot add a product to a cart until all of its required options have been selected.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProducts(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of products that appear on the web storefront according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productCollection = product.GetProducts(_dataViewMode,  filter,  startIndex,  pageSize,  sortBy,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProductsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of products that appear on the web storefront according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productCollection = await product.GetProductsAsync(_dataViewMode,  filter,  startIndex,  pageSize,  sortBy,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProductInventory(System.String,System.String,System.String)">
            <summary>
            Retrieves the active inventory level information associated with the product or location specified in the request.
            </summary>
            <param name="locationCodes">Array of location codes for which to retrieve product inventory information.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var locationInventoryCollection = product.GetProductInventory(_dataViewMode,  productCode,  locationCodes,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProductInventoryAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the active inventory level information associated with the product or location specified in the request.
            </summary>
            <param name="locationCodes">Array of location codes for which to retrieve product inventory information.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var locationInventoryCollection = await product.GetProductInventoryAsync(_dataViewMode,  productCode,  locationCodes,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProduct(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves information about a single product given its product code.
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="supressOutOfStock404"></param>
            <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = product.GetProduct(_dataViewMode,  productCode,  variationProductCode,  allowInactive,  skipInventoryCheck,  supressOutOfStock404,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProductAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves information about a single product given its product code.
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="supressOutOfStock404"></param>
            <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = await product.GetProductAsync(_dataViewMode,  productCode,  variationProductCode,  allowInactive,  skipInventoryCheck,  supressOutOfStock404,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.ConfiguredProduct(Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Creates a new product configuration each time a shopper selects a product option value. After the shopper defines values for all required product options, the shopper can add the product configuration to a cart.
            </summary>
            <param name="includeOptionDetails">If true, the response returns details about the product. If false, returns a product summary such as the product name, price, and sale price.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var configuredProduct = product.ConfiguredProduct( productOptionSelections,  productCode,  includeOptionDetails,  skipInventoryCheck,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.ConfiguredProductAsync(Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Creates a new product configuration each time a shopper selects a product option value. After the shopper defines values for all required product options, the shopper can add the product configuration to a cart.
            </summary>
            <param name="includeOptionDetails">If true, the response returns details about the product. If false, returns a product summary such as the product name, price, and sale price.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var configuredProduct = await product.ConfiguredProductAsync( productOptionSelections,  productCode,  includeOptionDetails,  skipInventoryCheck,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.ValidateProduct(Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Validate the final state of shopper-selected options.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productValidationSummary = product.ValidateProduct( productOptionSelections,  productCode,  skipInventoryCheck,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.ValidateProductAsync(Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Validate the final state of shopper-selected options.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productValidationSummary = await product.ValidateProductAsync( productOptionSelections,  productCode,  skipInventoryCheck,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.ValidateDiscounts(Mozu.Api.Contracts.ProductRuntime.DiscountSelections,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Evaluates whether a collection of discounts specified in the request can be redeemed for the supplied product code.
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="customerAccountId">The unique identifier of the customer account for which to retrieve wish lists.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
            <param name="discountSelections">The discounts to evaluate for a specified product code at the time of purchase.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.DiscountValidationSummary"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var discountValidationSummary = product.ValidateDiscounts( discountSelections,  productCode,  variationProductCode,  customerAccountId,  allowInactive,  skipInventoryCheck,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.ValidateDiscountsAsync(Mozu.Api.Contracts.ProductRuntime.DiscountSelections,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Evaluates whether a collection of discounts specified in the request can be redeemed for the supplied product code.
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="customerAccountId">The unique identifier of the customer account for which to retrieve wish lists.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
            <param name="discountSelections">The discounts to evaluate for a specified product code at the time of purchase.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.DiscountValidationSummary"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var discountValidationSummary = await product.ValidateDiscountsAsync( discountSelections,  productCode,  variationProductCode,  customerAccountId,  allowInactive,  skipInventoryCheck,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProductInventories(Mozu.Api.Contracts.ProductRuntime.LocationInventoryQuery,System.String)">
            <summary>
            Retrieves product inventories for the storefront displayed products.
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="query">Properties for the product location inventory provided for queries to locate products by their location.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var locationInventoryCollection = product.GetProductInventories(_dataViewMode,  query,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProductInventoriesAsync(Mozu.Api.Contracts.ProductRuntime.LocationInventoryQuery,System.String)">
            <summary>
            Retrieves product inventories for the storefront displayed products.
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="query">Properties for the product location inventory provided for queries to locate products by their location.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var locationInventoryCollection = await product.GetProductInventoriesAsync(_dataViewMode,  query,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource">
            <summary>
            Use the Product Search resource to provide dynamic search results to shoppers as they browse and search for products on the web storefront, and to suggest possible search terms as the shopper enters text.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource.Search(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Searches the categories displayed on the web storefront for products or product options that the shopper types in a search query.
            </summary>
            <param name="facet">Individually list the facet fields you want to display in a web storefront product search.</param>
            <param name="facetFieldRangeQuery">Display a range facet not specified in a template in a web storefront product search by listing the facet field and the range to display.</param>
            <param name="facetHierDepth">If filtering using category facets in a hierarchy, the number of category hierarchy levels to return for the facet. This option is only available for category facets.</param>
            <param name="facetHierPrefix">If filtering using category facets in a hierarchy, the parent categories you want to skip in the storefront product search. This parameter is only available for category facets.</param>
            <param name="facetHierValue">If filtering using category facets in a hierarchy, the category in the hierarchy to begin faceting on. This parameter is only available for category facets.</param>
            <param name="facetPageSize">The number of facet values to return for one or more facets.</param>
            <param name="facetSettings">Settings reserved for future facet search functionality on a web storefront product search.</param>
            <param name="facetStartIndex">When paging through multiple facets, the startIndex value for each facet.</param>
            <param name="facetTemplate">The facet template to use on the storefront. A template displays all facets associated with the template on the web storefront product search. Currently, only category-level facet templates are available.</param>
            <param name="facetTemplateSubset">Display a subset of the facets defined in the template specified in facetTemplate parameter.</param>
            <param name="facetValueFilter">The facet values to apply to the filter.</param>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query">A query entered for searches and facet range.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="searchSettings"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult"/>
            </returns>
            <example>
            <code>
              var productsearchresult = new ProductSearchResult();
              var productSearchResult = productsearchresult.Search( query,  filter,  facetTemplate,  facetTemplateSubset,  facet,  facetFieldRangeQuery,  facetHierPrefix,  facetHierValue,  facetHierDepth,  facetStartIndex,  facetPageSize,  facetSettings,  facetValueFilter,  sortBy,  pageSize,  startIndex,  searchSettings,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource.SearchAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Searches the categories displayed on the web storefront for products or product options that the shopper types in a search query.
            </summary>
            <param name="facet">Individually list the facet fields you want to display in a web storefront product search.</param>
            <param name="facetFieldRangeQuery">Display a range facet not specified in a template in a web storefront product search by listing the facet field and the range to display.</param>
            <param name="facetHierDepth">If filtering using category facets in a hierarchy, the number of category hierarchy levels to return for the facet. This option is only available for category facets.</param>
            <param name="facetHierPrefix">If filtering using category facets in a hierarchy, the parent categories you want to skip in the storefront product search. This parameter is only available for category facets.</param>
            <param name="facetHierValue">If filtering using category facets in a hierarchy, the category in the hierarchy to begin faceting on. This parameter is only available for category facets.</param>
            <param name="facetPageSize">The number of facet values to return for one or more facets.</param>
            <param name="facetSettings">Settings reserved for future facet search functionality on a web storefront product search.</param>
            <param name="facetStartIndex">When paging through multiple facets, the startIndex value for each facet.</param>
            <param name="facetTemplate">The facet template to use on the storefront. A template displays all facets associated with the template on the web storefront product search. Currently, only category-level facet templates are available.</param>
            <param name="facetTemplateSubset">Display a subset of the facets defined in the template specified in facetTemplate parameter.</param>
            <param name="facetValueFilter">The facet values to apply to the filter.</param>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query">A query entered for searches and facet range.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="searchSettings"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult"/>
            </returns>
            <example>
            <code>
              var productsearchresult = new ProductSearchResult();
              var productSearchResult = await productsearchresult.SearchAsync( query,  filter,  facetTemplate,  facetTemplateSubset,  facet,  facetFieldRangeQuery,  facetHierPrefix,  facetHierValue,  facetHierDepth,  facetStartIndex,  facetPageSize,  facetSettings,  facetValueFilter,  sortBy,  pageSize,  startIndex,  searchSettings,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource.Suggest(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Suggests possible search terms as the shopper enters search text.
            </summary>
            <param name="groups"></param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query">A query entered for searches and facet range.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.SearchSuggestionResult"/>
            </returns>
            <example>
            <code>
              var productsearchresult = new ProductSearchResult();
              var searchSuggestionResult = productsearchresult.Suggest( query,  groups,  pageSize,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource.SuggestAsync(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Suggests possible search terms as the shopper enters search text.
            </summary>
            <param name="groups"></param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query">A query entered for searches and facet range.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.SearchSuggestionResult"/>
            </returns>
            <example>
            <code>
              var productsearchresult = new ProductSearchResult();
              var searchSuggestionResult = await productsearchresult.SuggestAsync( query,  groups,  pageSize,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Storefront.ShippingResource">
            <summary>
            Use the Storefront Shipping resource to retrieve shipping rate information from the website.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Storefront.ShippingResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ShippingResource.GetRates(Mozu.Api.Contracts.ShippingRuntime.RateRequest,System.String)">
            <summary>
            Retrieves the shipping rates applicable for the site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="rateRequest">Properties required to request a shipping rate calculation.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ShippingRuntime.RatesResponse"/>
            </returns>
            <example>
            <code>
              var shipping = new Shipping();
              var ratesResponse = shipping.GetRates( rateRequest,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ShippingResource.GetRatesAsync(Mozu.Api.Contracts.ShippingRuntime.RateRequest,System.String)">
            <summary>
            Retrieves the shipping rates applicable for the site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="rateRequest">Properties required to request a shipping rate calculation.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ShippingRuntime.RatesResponse"/>
            </returns>
            <example>
            <code>
              var shipping = new Shipping();
              var ratesResponse = await shipping.GetRatesAsync( rateRequest,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.ChannelGroupResource">
            <summary>
            Use the Channel Groups resource to manage groups of channels with common information.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.ChannelGroupResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelGroupResource.GetChannelGroups(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of defined channel groups according to any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection"/>
            </returns>
            <example>
            <code>
              var channelgroup = new ChannelGroup();
              var channelGroupCollection = channelgroup.GetChannelGroups( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelGroupResource.GetChannelGroupsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of defined channel groups according to any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection"/>
            </returns>
            <example>
            <code>
              var channelgroup = new ChannelGroup();
              var channelGroupCollection = await channelgroup.GetChannelGroupsAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelGroupResource.GetChannelGroup(System.String,System.String)">
            <summary>
            Retrieves the details of a defined channel group.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>
            </returns>
            <example>
            <code>
              var channelgroup = new ChannelGroup();
              var channelGroup = channelgroup.GetChannelGroup( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelGroupResource.GetChannelGroupAsync(System.String,System.String)">
            <summary>
            Retrieves the details of a defined channel group.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>
            </returns>
            <example>
            <code>
              var channelgroup = new ChannelGroup();
              var channelGroup = await channelgroup.GetChannelGroupAsync( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelGroupResource.CreateChannelGroup(Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup,System.String)">
            <summary>
            Creates a new group of channels with common information.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="channelGroup">Properties of a group of channels that share common information.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>
            </returns>
            <example>
            <code>
              var channelgroup = new ChannelGroup();
              var channelGroup = channelgroup.CreateChannelGroup( channelGroup,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelGroupResource.CreateChannelGroupAsync(Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup,System.String)">
            <summary>
            Creates a new group of channels with common information.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="channelGroup">Properties of a group of channels that share common information.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>
            </returns>
            <example>
            <code>
              var channelgroup = new ChannelGroup();
              var channelGroup = await channelgroup.CreateChannelGroupAsync( channelGroup,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelGroupResource.UpdateChannelGroup(Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup,System.String,System.String)">
            <summary>
            Updates one or more properties of a defined channel group.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="channelGroup">Properties of a group of channels that share common information.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>
            </returns>
            <example>
            <code>
              var channelgroup = new ChannelGroup();
              var channelGroup = channelgroup.UpdateChannelGroup( channelGroup,  code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelGroupResource.UpdateChannelGroupAsync(Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup,System.String,System.String)">
            <summary>
            Updates one or more properties of a defined channel group.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="channelGroup">Properties of a group of channels that share common information.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>
            </returns>
            <example>
            <code>
              var channelgroup = new ChannelGroup();
              var channelGroup = await channelgroup.UpdateChannelGroupAsync( channelGroup,  code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelGroupResource.DeleteChannelGroup(System.String)">
            <summary>
            Deletes a defined group of channels, which removes the group association with each channel in the group but does not delete the channel definitions themselves.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var channelgroup = new ChannelGroup();
              channelgroup.DeleteChannelGroup( code);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelGroupResource.DeleteChannelGroupAsync(System.String)">
            <summary>
            Deletes a defined group of channels, which removes the group association with each channel in the group but does not delete the channel definitions themselves.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var channelgroup = new ChannelGroup();
              await channelgroup.DeleteChannelGroupAsync( code);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.ChannelResource">
            <summary>
            Use the Channels resource to manage the channels a company uses to create logical commercial business divisions based on region or types of sales, such as "US Online," "Amazon," or "EMEA Retail." All orders include a channel association that enables the company to perform financial reporting for each defined channel. Because channels are managed at the tenant level, you must associate all the tenant's sites with a channel. Sites that do not have a defined channel association cannot successfully submit orders.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.ChannelResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelResource.GetChannels(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of channels defined for a tenant according to any filter or sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection"/>
            </returns>
            <example>
            <code>
              var channel = new Channel();
              var channelCollection = channel.GetChannels( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelResource.GetChannelsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of channels defined for a tenant according to any filter or sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection"/>
            </returns>
            <example>
            <code>
              var channel = new Channel();
              var channelCollection = await channel.GetChannelsAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelResource.GetChannel(System.String,System.String)">
            <summary>
            Retrieves the details of the channel specified in the request.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel"/>
            </returns>
            <example>
            <code>
              var channel = new Channel();
              var channel = channel.GetChannel( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelResource.GetChannelAsync(System.String,System.String)">
            <summary>
            Retrieves the details of the channel specified in the request.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel"/>
            </returns>
            <example>
            <code>
              var channel = new Channel();
              var channel = await channel.GetChannelAsync( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelResource.CreateChannel(Mozu.Api.Contracts.CommerceRuntime.Channels.Channel,System.String)">
            <summary>
            Creates a new channel that defines a new logical business division to use for financial reporting.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="channel">Properties of a channel used to divide a company into logical business divisions, such as "US Retail," "US Online," or "Amazon." All sites and orders are associated with a channel.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel"/>
            </returns>
            <example>
            <code>
              var channel = new Channel();
              var channel = channel.CreateChannel( channel,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelResource.CreateChannelAsync(Mozu.Api.Contracts.CommerceRuntime.Channels.Channel,System.String)">
            <summary>
            Creates a new channel that defines a new logical business division to use for financial reporting.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="channel">Properties of a channel used to divide a company into logical business divisions, such as "US Retail," "US Online," or "Amazon." All sites and orders are associated with a channel.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel"/>
            </returns>
            <example>
            <code>
              var channel = new Channel();
              var channel = await channel.CreateChannelAsync( channel,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelResource.UpdateChannel(Mozu.Api.Contracts.CommerceRuntime.Channels.Channel,System.String,System.String)">
            <summary>
            Updates one or more details of a defined channel, including the associated sites.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="channel">Properties of a channel used to divide a company into logical business divisions, such as "US Retail," "US Online," or "Amazon." All sites and orders are associated with a channel.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel"/>
            </returns>
            <example>
            <code>
              var channel = new Channel();
              var channel = channel.UpdateChannel( channel,  code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelResource.UpdateChannelAsync(Mozu.Api.Contracts.CommerceRuntime.Channels.Channel,System.String,System.String)">
            <summary>
            Updates one or more details of a defined channel, including the associated sites.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="channel">Properties of a channel used to divide a company into logical business divisions, such as "US Retail," "US Online," or "Amazon." All sites and orders are associated with a channel.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel"/>
            </returns>
            <example>
            <code>
              var channel = new Channel();
              var channel = await channel.UpdateChannelAsync( channel,  code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelResource.DeleteChannel(System.String)">
            <summary>
            Deletes a defined channel for the tenant and removes the defined site associations. After deleting this channel, assign its associated sites to another channel.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var channel = new Channel();
              channel.DeleteChannel( code);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelResource.DeleteChannelAsync(System.String)">
            <summary>
            Deletes a defined channel for the tenant and removes the defined site associations. After deleting this channel, assign its associated sites to another channel.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var channel = new Channel();
              await channel.DeleteChannelAsync( code);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource">
            <summary>
            Use the Cards subresource to manage stored credit cards for customer accounts. Mozu stores limited card data in the Customer service for expedited ordering purposes; however, the complete card data is stored in the Payment service.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.GetAccountCard(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of a credit card stored with a customer account billing contact.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Card"/>
            </returns>
            <example>
            <code>
              var card = new Card();
              var card = card.GetAccountCard( accountId,  cardId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.GetAccountCardAsync(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of a credit card stored with a customer account billing contact.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Card"/>
            </returns>
            <example>
            <code>
              var card = new Card();
              var card = await card.GetAccountCardAsync( accountId,  cardId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.GetAccountCards(System.Int32,System.String)">
            <summary>
            Retrieves all stored credit cards for the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CardCollection"/>
            </returns>
            <example>
            <code>
              var card = new Card();
              var cardCollection = card.GetAccountCards( accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.GetAccountCardsAsync(System.Int32,System.String)">
            <summary>
            Retrieves all stored credit cards for the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CardCollection"/>
            </returns>
            <example>
            <code>
              var card = new Card();
              var cardCollection = await card.GetAccountCardsAsync( accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.AddAccountCard(Mozu.Api.Contracts.Customer.Card,System.Int32,System.String)">
            <summary>
            Creates a new credit card record and stores it for the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="card">Properties of a credit card used to submit payment for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Card"/>
            </returns>
            <example>
            <code>
              var card = new Card();
              var card = card.AddAccountCard( card,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.AddAccountCardAsync(Mozu.Api.Contracts.Customer.Card,System.Int32,System.String)">
            <summary>
            Creates a new credit card record and stores it for the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="card">Properties of a credit card used to submit payment for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Card"/>
            </returns>
            <example>
            <code>
              var card = new Card();
              var card = await card.AddAccountCardAsync( card,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.UpdateAccountCard(Mozu.Api.Contracts.Customer.Card,System.Int32,System.String,System.String)">
            <summary>
            Update one or more properties of a credit card defined for a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="card">Properties of a credit card used to submit payment for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Card"/>
            </returns>
            <example>
            <code>
              var card = new Card();
              var card = card.UpdateAccountCard( card,  accountId,  cardId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.UpdateAccountCardAsync(Mozu.Api.Contracts.Customer.Card,System.Int32,System.String,System.String)">
            <summary>
            Update one or more properties of a credit card defined for a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="card">Properties of a credit card used to submit payment for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Card"/>
            </returns>
            <example>
            <code>
              var card = new Card();
              var card = await card.UpdateAccountCardAsync( card,  accountId,  cardId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.DeleteAccountCard(System.Int32,System.String)">
            <summary>
            Removes a stored credit card from a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var card = new Card();
              card.DeleteAccountCard( accountId,  cardId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.DeleteAccountCardAsync(System.Int32,System.String)">
            <summary>
            Removes a stored credit card from a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var card = new Card();
              await card.DeleteAccountCardAsync( accountId,  cardId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource">
            <summary>
            Use the Attributes subresource to manage the attributes used to uniquely identify shopper accounts, such as gender or age.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.GetAccountAttribute(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the contents of an attribute associated with the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttribute = customerattribute.GetAccountAttribute( accountId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.GetAccountAttributeAsync(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the contents of an attribute associated with the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttribute = await customerattribute.GetAccountAttributeAsync( accountId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.GetAccountAttributes(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves the list of customer account attributes.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAttributeCollection"/>
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttributeCollection = customerattribute.GetAccountAttributes( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.GetAccountAttributesAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves the list of customer account attributes.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAttributeCollection"/>
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttributeCollection = await customerattribute.GetAccountAttributesAsync( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.AddAccountAttribute(Mozu.Api.Contracts.Customer.CustomerAttribute,System.Int32,System.String)">
            <summary>
            Applies a defined attribute to the customer account specified in the request and assigns a value to the customer attribute.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="attribute">Properties of an attribute associated with a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttribute = customerattribute.AddAccountAttribute( attribute,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.AddAccountAttributeAsync(Mozu.Api.Contracts.Customer.CustomerAttribute,System.Int32,System.String)">
            <summary>
            Applies a defined attribute to the customer account specified in the request and assigns a value to the customer attribute.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="attribute">Properties of an attribute associated with a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttribute = await customerattribute.AddAccountAttributeAsync( attribute,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.UpdateAccountAttribute(Mozu.Api.Contracts.Customer.CustomerAttribute,System.Int32,System.String,System.String)">
            <summary>
            Updates one or more details of a customer account attribute.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="attribute">Properties of an attribute associated with a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttribute = customerattribute.UpdateAccountAttribute( attribute,  accountId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.UpdateAccountAttributeAsync(Mozu.Api.Contracts.Customer.CustomerAttribute,System.Int32,System.String,System.String)">
            <summary>
            Updates one or more details of a customer account attribute.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="attribute">Properties of an attribute associated with a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttribute = await customerattribute.UpdateAccountAttributeAsync( attribute,  accountId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.DeleteAccountAttribute(System.Int32,System.String)">
            <summary>
            Removes the attribute specified in the request from the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              customerattribute.DeleteAccountAttribute( accountId,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.DeleteAccountAttributeAsync(System.Int32,System.String)">
            <summary>
            Removes the attribute specified in the request from the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              await customerattribute.DeleteAccountAttributeAsync( accountId,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource">
            <summary>
            Merchants and customers can create, view, update, and delete a contact for a customer account. A customer account may have multiple contacts for billing and shipping addresses.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.GetAccountContact(System.Int32,System.Int32,System.String)">
            <summary>
            Retrieves the specified contact for a customer account such as a billing or shipping contact.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContact = customercontact.GetAccountContact( accountId,  contactId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.GetAccountContactAsync(System.Int32,System.Int32,System.String)">
            <summary>
            Retrieves the specified contact for a customer account such as a billing or shipping contact.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContact = await customercontact.GetAccountContactAsync( accountId,  contactId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.GetAccountContacts(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of contacts for a customer according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContactCollection"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContactCollection = customercontact.GetAccountContacts( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.GetAccountContactsAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of contacts for a customer according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContactCollection"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContactCollection = await customercontact.GetAccountContactsAsync( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.AddAccountContact(Mozu.Api.Contracts.Customer.CustomerContact,System.Int32,System.String)">
            <summary>
            Creates a new contact for a customer account such as a new shipping address.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="contact">Contact information, including the contact's name, address, phone numbers, email addresses, and company (if supplied). Also indicates whether this is a billing, shipping, or billing and shipping contact.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContact = customercontact.AddAccountContact( contact,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.AddAccountContactAsync(Mozu.Api.Contracts.Customer.CustomerContact,System.Int32,System.String)">
            <summary>
            Creates a new contact for a customer account such as a new shipping address.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="contact">Contact information, including the contact's name, address, phone numbers, email addresses, and company (if supplied). Also indicates whether this is a billing, shipping, or billing and shipping contact.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContact = await customercontact.AddAccountContactAsync( contact,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.UpdateAccountContact(Mozu.Api.Contracts.Customer.CustomerContact,System.Int32,System.Int32,System.String)">
            <summary>
            Updates a contact for a specified customer account such as to update addresses or change which contact is the primary contact for billing.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="contact">Contact information, including the contact's name, address, phone numbers, email addresses, and company (if supplied). Also indicates whether this is a billing, shipping, or billing and shipping contact.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContact = customercontact.UpdateAccountContact( contact,  accountId,  contactId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.UpdateAccountContactAsync(Mozu.Api.Contracts.Customer.CustomerContact,System.Int32,System.Int32,System.String)">
            <summary>
            Updates a contact for a specified customer account such as to update addresses or change which contact is the primary contact for billing.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="contact">Contact information, including the contact's name, address, phone numbers, email addresses, and company (if supplied). Also indicates whether this is a billing, shipping, or billing and shipping contact.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContact = await customercontact.UpdateAccountContactAsync( contact,  accountId,  contactId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.DeleteAccountContact(System.Int32,System.Int32)">
            <summary>
            Deletes a contact for the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              customercontact.DeleteAccountContact( accountId,  contactId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.DeleteAccountContactAsync(System.Int32,System.Int32)">
            <summary>
            Deletes a contact for the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              await customercontact.DeleteAccountContactAsync( accountId,  contactId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource">
            <summary>
            Tenant administrators can add and view internal notes for a customer account. For example, a client can track a shopper's interests or complaints. Only clients can add and view notes. Shoppers cannot view these notes from the My Account page.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.GetAccountNote(System.Int32,System.Int32,System.String)">
            <summary>
            Retrieves the contents of a particular note attached to a specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNote = customernote.GetAccountNote( accountId,  noteId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.GetAccountNoteAsync(System.Int32,System.Int32,System.String)">
            <summary>
            Retrieves the contents of a particular note attached to a specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNote = await customernote.GetAccountNoteAsync( accountId,  noteId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.GetAccountNotes(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of notes added to a customer account according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNoteCollection"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNoteCollection = customernote.GetAccountNotes( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.GetAccountNotesAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of notes added to a customer account according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNoteCollection"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNoteCollection = await customernote.GetAccountNotesAsync( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.AddAccountNote(Mozu.Api.Contracts.Customer.CustomerNote,System.Int32,System.String)">
            <summary>
            Adds a new note to the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="note">Properties of a note configured for a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNote = customernote.AddAccountNote( note,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.AddAccountNoteAsync(Mozu.Api.Contracts.Customer.CustomerNote,System.Int32,System.String)">
            <summary>
            Adds a new note to the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="note">Properties of a note configured for a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNote = await customernote.AddAccountNoteAsync( note,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.UpdateAccountNote(Mozu.Api.Contracts.Customer.CustomerNote,System.Int32,System.Int32,System.String)">
            <summary>
            Modifies an existing note for a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="note">Properties of a note configured for a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNote = customernote.UpdateAccountNote( note,  accountId,  noteId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.UpdateAccountNoteAsync(Mozu.Api.Contracts.Customer.CustomerNote,System.Int32,System.Int32,System.String)">
            <summary>
            Modifies an existing note for a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="note">Properties of a note configured for a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNote = await customernote.UpdateAccountNoteAsync( note,  accountId,  noteId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.DeleteAccountNote(System.Int32,System.Int32)">
            <summary>
            Removes a note from the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              customernote.DeleteAccountNote( accountId,  noteId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.DeleteAccountNoteAsync(System.Int32,System.Int32)">
            <summary>
            Removes a note from the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              await customernote.DeleteAccountNoteAsync( accountId,  noteId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerSegmentResource">
            <summary>
            Use the Customer Account Segments subresource to view the customer segments associated with a customer account.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerSegmentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerSegmentResource.GetAccountSegments(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves the list of segments associated with a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerSegmentCollection"/>
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              var customerSegmentCollection = customersegment.GetAccountSegments( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerSegmentResource.GetAccountSegmentsAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves the list of segments associated with a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerSegmentCollection"/>
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              var customerSegmentCollection = await customersegment.GetAccountSegmentsAsync( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.TransactionResource">
            <summary>
            Use the Customer Account Transactions resource to manage the transactions associated with a customer account.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.TransactionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.TransactionResource.GetTransactions(System.Int32)">
            <summary>
            Retrieves a list of transactions associated with the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Customer.Transaction"/>}
            </returns>
            <example>
            <code>
              var transaction = new Transaction();
              var transaction = transaction.GetTransactions( accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.TransactionResource.GetTransactionsAsync(System.Int32)">
            <summary>
            Retrieves a list of transactions associated with the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Customer.Transaction"/>}
            </returns>
            <example>
            <code>
              var transaction = new Transaction();
              var transaction = await transaction.GetTransactionsAsync( accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.TransactionResource.AddTransaction(Mozu.Api.Contracts.Customer.Transaction,System.Int32,System.String)">
            <summary>
            Creates a new transaction for the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="transaction">Properties of a transaction performed by a customer account. The system creates a transaction each time the customer submits an order, returns an item, picks up items for an order, or manages items on a wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Transaction"/>
            </returns>
            <example>
            <code>
              var transaction = new Transaction();
              var transaction = transaction.AddTransaction( transaction,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.TransactionResource.AddTransactionAsync(Mozu.Api.Contracts.Customer.Transaction,System.Int32,System.String)">
            <summary>
            Creates a new transaction for the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="transaction">Properties of a transaction performed by a customer account. The system creates a transaction each time the customer submits an order, returns an item, picks up items for an order, or manages items on a wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Transaction"/>
            </returns>
            <example>
            <code>
              var transaction = new Transaction();
              var transaction = await transaction.AddTransactionAsync( transaction,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.TransactionResource.RemoveTransaction(System.Int32,System.String)">
            <summary>
            Deletes a transaction from the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="transactionId">Unique identifier of the transaction to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var transaction = new Transaction();
              transaction.RemoveTransaction( accountId,  transactionId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.TransactionResource.RemoveTransactionAsync(System.Int32,System.String)">
            <summary>
            Deletes a transaction from the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="transactionId">Unique identifier of the transaction to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var transaction = new Transaction();
              await transaction.RemoveTransactionAsync( accountId,  transactionId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.AddressValidationRequestResource">
            <summary>
            Use the Address Validation resource to validate addresses associated with a customer account contact.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.AddressValidationRequestResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.AddressValidationRequestResource.ValidateAddress(Mozu.Api.Contracts.Customer.AddressValidationRequest,System.String)">
            <summary>
            Validates the customer address supplied in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="addressValidationRequest">Properties of the address used for validation of the account's full address. This content may include multiple lines of an address, city, state/province, zip/postal code, and country.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.AddressValidationResponse"/>
            </returns>
            <example>
            <code>
              var addressvalidationrequest = new AddressValidationRequest();
              var addressValidationResponse = addressvalidationrequest.ValidateAddress( addressValidationRequest,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.AddressValidationRequestResource.ValidateAddressAsync(Mozu.Api.Contracts.Customer.AddressValidationRequest,System.String)">
            <summary>
            Validates the customer address supplied in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="addressValidationRequest">Properties of the address used for validation of the account's full address. This content may include multiple lines of an address, city, state/province, zip/postal code, and country.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.AddressValidationResponse"/>
            </returns>
            <example>
            <code>
              var addressvalidationrequest = new AddressValidationRequest();
              var addressValidationResponse = await addressvalidationrequest.ValidateAddressAsync( addressValidationRequest,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Attributedefinition.AttributeResource">
            <summary>
            Use the Customer Attribute Definition resource to manage the attributes to define for your shoppers.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Attributedefinition.AttributeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Attributedefinition.AttributeResource.GetAttributes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of customer attributes according to any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeCollection = attribute.GetAttributes( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Attributedefinition.AttributeResource.GetAttributesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of customer attributes according to any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeCollection = await attribute.GetAttributesAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Attributedefinition.AttributeResource.GetAttributeVocabularyValues(System.String)">
            <summary>
            Retrieve a list of the vocabulary values defined for the customer attribute specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeVocabularyValue = attribute.GetAttributeVocabularyValues( attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Attributedefinition.AttributeResource.GetAttributeVocabularyValuesAsync(System.String)">
            <summary>
            Retrieve a list of the vocabulary values defined for the customer attribute specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeVocabularyValue = await attribute.GetAttributeVocabularyValuesAsync( attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Attributedefinition.AttributeResource.GetAttribute(System.String,System.String)">
            <summary>
            Retrieve a customer attribute definition by supplying its fully qualified name.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.GetAttribute( attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Attributedefinition.AttributeResource.GetAttributeAsync(System.String,System.String)">
            <summary>
            Retrieve a customer attribute definition by supplying its fully qualified name.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = await attribute.GetAttributeAsync( attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.CreditResource">
            <summary>
            Use the Customer Credits resource to manage the store credit associated with a customer account. Store credit can represent a static amount the customer can redeem at any of the tenant's sites, or a gift card registered for a customer account. At this time, gift card functionality is reserved for future use.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.CreditResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.GetCredits(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of store credits applied to customer accounts, according any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditCollection"/>
            </returns>
            <example>
            <code>
              var credit = new Credit();
              var creditCollection = credit.GetCredits( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.GetCreditsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of store credits applied to customer accounts, according any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditCollection"/>
            </returns>
            <example>
            <code>
              var credit = new Credit();
              var creditCollection = await credit.GetCreditsAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.GetCredit(System.String,System.String)">
            <summary>
            Retrieves the details of a store credit applied to a customer account.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>
            </returns>
            <example>
            <code>
              var credit = new Credit();
              var credit = credit.GetCredit( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.GetCreditAsync(System.String,System.String)">
            <summary>
            Retrieves the details of a store credit applied to a customer account.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>
            </returns>
            <example>
            <code>
              var credit = new Credit();
              var credit = await credit.GetCreditAsync( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.AddCredit(Mozu.Api.Contracts.Customer.Credit.Credit,System.String)">
            <summary>
            Creates a new store credit for the customer account specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="credit">Properties of the store credit of gift card applied to a customer account. At this time, gift card functionality is reserved for future use.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>
            </returns>
            <example>
            <code>
              var credit = new Credit();
              var credit = credit.AddCredit( credit,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.AddCreditAsync(Mozu.Api.Contracts.Customer.Credit.Credit,System.String)">
            <summary>
            Creates a new store credit for the customer account specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="credit">Properties of the store credit of gift card applied to a customer account. At this time, gift card functionality is reserved for future use.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>
            </returns>
            <example>
            <code>
              var credit = new Credit();
              var credit = await credit.AddCreditAsync( credit,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.AssociateCreditToShopper(System.String,System.String)">
            <summary>
            Associates an unclaimed customer credit with the shopper user authenticated in the request header.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>
            </returns>
            <example>
            <code>
              var credit = new Credit();
              var credit = credit.AssociateCreditToShopper( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.AssociateCreditToShopperAsync(System.String,System.String)">
            <summary>
            Associates an unclaimed customer credit with the shopper user authenticated in the request header.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>
            </returns>
            <example>
            <code>
              var credit = new Credit();
              var credit = await credit.AssociateCreditToShopperAsync( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.ResendCreditCreatedEmail(System.String)">
            <summary>
            customer-credits Put ResendCreditCreatedEmail description DOCUMENT_HERE 
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var credit = new Credit();
              credit.ResendCreditCreatedEmail( code);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.ResendCreditCreatedEmailAsync(System.String)">
            <summary>
            customer-credits Put ResendCreditCreatedEmail description DOCUMENT_HERE 
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var credit = new Credit();
              await credit.ResendCreditCreatedEmailAsync( code);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.UpdateCredit(Mozu.Api.Contracts.Customer.Credit.Credit,System.String,System.String)">
            <summary>
            Updates one or more properties of a defined store credit applied to a customer account.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="credit">Properties of the store credit of gift card applied to a customer account. At this time, gift card functionality is reserved for future use.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>
            </returns>
            <example>
            <code>
              var credit = new Credit();
              var credit = credit.UpdateCredit( credit,  code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.UpdateCreditAsync(Mozu.Api.Contracts.Customer.Credit.Credit,System.String,System.String)">
            <summary>
            Updates one or more properties of a defined store credit applied to a customer account.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="credit">Properties of the store credit of gift card applied to a customer account. At this time, gift card functionality is reserved for future use.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>
            </returns>
            <example>
            <code>
              var credit = new Credit();
              var credit = await credit.UpdateCreditAsync( credit,  code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.DeleteCredit(System.String)">
            <summary>
            Deletes a store credit previously applied to a customer account.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var credit = new Credit();
              credit.DeleteCredit( code);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.DeleteCreditAsync(System.String)">
            <summary>
            Deletes a store credit previously applied to a customer account.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var credit = new Credit();
              await credit.DeleteCreditAsync( code);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Credits.CreditAuditEntryResource">
            <summary>
            Use the Customer Credit Audit Entries subresource to retrieve entries logged in the audit report of a store credit or gift card applied to a customer account. The system creates a new audit entry when the credit is created, deleted, activated, or deactivated. The system then creates a new audit entry each time the credit is updated or redeemed in a transaction.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Credits.CreditAuditEntryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Credits.CreditAuditEntryResource.GetAuditEntries(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves the list of audit entries for the credit, according to any filter or sort criteria specified in the request.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection"/>
            </returns>
            <example>
            <code>
              var creditauditentry = new CreditAuditEntry();
              var creditAuditEntryCollection = creditauditentry.GetAuditEntries( code,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Credits.CreditAuditEntryResource.GetAuditEntriesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves the list of audit entries for the credit, according to any filter or sort criteria specified in the request.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection"/>
            </returns>
            <example>
            <code>
              var creditauditentry = new CreditAuditEntry();
              var creditAuditEntryCollection = await creditauditentry.GetAuditEntriesAsync( code,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Credits.CreditTransactionResource">
            <summary>
            Use the Customer Credit Transactions subresource to manage the individual transactions performed using a store credit or gift card.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Credits.CreditTransactionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Credits.CreditTransactionResource.GetTransactions(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of the transactions performed using a customer credit that update the balance of the credit.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection"/>
            </returns>
            <example>
            <code>
              var credittransaction = new CreditTransaction();
              var creditTransactionCollection = credittransaction.GetTransactions( code,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Credits.CreditTransactionResource.GetTransactionsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of the transactions performed using a customer credit that update the balance of the credit.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection"/>
            </returns>
            <example>
            <code>
              var credittransaction = new CreditTransaction();
              var creditTransactionCollection = await credittransaction.GetTransactionsAsync( code,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Credits.CreditTransactionResource.AddTransaction(Mozu.Api.Contracts.Customer.Credit.CreditTransaction,System.String,System.String)">
            <summary>
            Creates a new transaction and updates the amount of a store credit or gift card.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="creditTransaction">Properties of a transaction performed for a customer credit that update the remaining balance of the credit.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditTransaction"/>
            </returns>
            <example>
            <code>
              var credittransaction = new CreditTransaction();
              var creditTransaction = credittransaction.AddTransaction( creditTransaction,  code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Credits.CreditTransactionResource.AddTransactionAsync(Mozu.Api.Contracts.Customer.Credit.CreditTransaction,System.String,System.String)">
            <summary>
            Creates a new transaction and updates the amount of a store credit or gift card.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="creditTransaction">Properties of a transaction performed for a customer credit that update the remaining balance of the credit.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditTransaction"/>
            </returns>
            <example>
            <code>
              var credittransaction = new CreditTransaction();
              var creditTransaction = await credittransaction.AddTransactionAsync( creditTransaction,  code,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource">
            <summary>
            Use the Customer Accounts resource to manage the components of shopper accounts, including attributes, contact information, company notes, and groups associated with the customer account.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetAccounts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of customer accounts.
            </summary>
            <param name="fields">The fields to include in the response.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="isAnonymous">If true, retrieve anonymous shopper accounts in the response.</param>
            <param name="pageSize"></param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccountCollection = customeraccount.GetAccounts( startIndex,  pageSize,  sortBy,  filter,  fields,  q,  qLimit,  isAnonymous,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetAccountsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of customer accounts.
            </summary>
            <param name="fields">The fields to include in the response.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="isAnonymous">If true, retrieve anonymous shopper accounts in the response.</param>
            <param name="pageSize"></param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccountCollection = await customeraccount.GetAccountsAsync( startIndex,  pageSize,  sortBy,  filter,  fields,  q,  qLimit,  isAnonymous,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetLoginState(System.Int32,System.String)">
            <summary>
            Retrieves the current login state of the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.LoginState"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var loginState = customeraccount.GetLoginState( accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetLoginStateAsync(System.Int32,System.String)">
            <summary>
            Retrieves the current login state of the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.LoginState"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var loginState = await customeraccount.GetLoginStateAsync( accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetAccount(System.Int32,System.String)">
            <summary>
            Retrieve details of a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccount = customeraccount.GetAccount( accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetAccountAsync(System.Int32,System.String)">
            <summary>
            Retrieve details of a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccount = await customeraccount.GetAccountAsync( accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.AddAccount(Mozu.Api.Contracts.Customer.CustomerAccount,System.String)">
            <summary>
            Creates a new customer account based on the information specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="account">Properties of the customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccount = customeraccount.AddAccount( account,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.AddAccountAsync(Mozu.Api.Contracts.Customer.CustomerAccount,System.String)">
            <summary>
            Creates a new customer account based on the information specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="account">Properties of the customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccount = await customeraccount.AddAccountAsync( account,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.ChangePassword(Mozu.Api.Contracts.Customer.PasswordInfo,System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Modify the password associated with a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="unlockAccount"></param>
            <param name="passwordInfo">The information required to modify a shopper account password.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              customeraccount.ChangePassword( passwordInfo,  accountId,  unlockAccount);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.ChangePasswordAsync(Mozu.Api.Contracts.Customer.PasswordInfo,System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Modify the password associated with a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="unlockAccount"></param>
            <param name="passwordInfo">The information required to modify a shopper account password.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              await customeraccount.ChangePasswordAsync( passwordInfo,  accountId,  unlockAccount);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.AddLoginToExistingCustomer(Mozu.Api.Contracts.Customer.CustomerLoginInfo,System.Int32,System.String)">
            <summary>
            Adds a new user login to a defined customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="customerAuthInfo">The login information for a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAuthTicket = customeraccount.AddLoginToExistingCustomer( customerAuthInfo,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.AddLoginToExistingCustomerAsync(Mozu.Api.Contracts.Customer.CustomerLoginInfo,System.Int32,System.String)">
            <summary>
            Adds a new user login to a defined customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="customerAuthInfo">The login information for a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAuthTicket = await customeraccount.AddLoginToExistingCustomerAsync( customerAuthInfo,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.RecomputeCustomerLifetimeValue(System.Int32)">
            <summary>
            Updates the customer lifetime value of the specified customer account in the event of an order import or a lifetime value calculation error.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              customeraccount.RecomputeCustomerLifetimeValue( accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.RecomputeCustomerLifetimeValueAsync(System.Int32)">
            <summary>
            Updates the customer lifetime value of the specified customer account in the event of an order import or a lifetime value calculation error.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              await customeraccount.RecomputeCustomerLifetimeValueAsync( accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.SetLoginLocked(System.Boolean,System.Int32)">
            <summary>
            Lock or unlock a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="isLocked">If true, the customer account is locked from logging in.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              customeraccount.SetLoginLocked( isLocked,  accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.SetLoginLockedAsync(System.Boolean,System.Int32)">
            <summary>
            Lock or unlock a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="isLocked">If true, the customer account is locked from logging in.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              await customeraccount.SetLoginLockedAsync( isLocked,  accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.SetPasswordChangeRequired(System.Boolean,System.Int32)">
            <summary>
            Requires the password for the customer account to be changed.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="isPasswordChangeRequired">If true, the password for the customer account must be changed.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              customeraccount.SetPasswordChangeRequired( isPasswordChangeRequired,  accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.SetPasswordChangeRequiredAsync(System.Boolean,System.Int32)">
            <summary>
            Requires the password for the customer account to be changed.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="isPasswordChangeRequired">If true, the password for the customer account must be changed.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              await customeraccount.SetPasswordChangeRequiredAsync( isPasswordChangeRequired,  accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.AddAccountAndLogin(Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo,System.String)">
            <summary>
            Creates a new customer account and logs the user associated with the customer account into the site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="accountAndAuthInfo">The authentication information associated with a customer account. The data includes the account properties such as the name, username, authorization access, and email address, the required password to match, and indicates if the account was imported from a third party resource. </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAuthTicket = customeraccount.AddAccountAndLogin( accountAndAuthInfo,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.AddAccountAndLoginAsync(Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo,System.String)">
            <summary>
            Creates a new customer account and logs the user associated with the customer account into the site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="accountAndAuthInfo">The authentication information associated with a customer account. The data includes the account properties such as the name, username, authorization access, and email address, the required password to match, and indicates if the account was imported from a third party resource. </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAuthTicket = await customeraccount.AddAccountAndLoginAsync( accountAndAuthInfo,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.AddAccounts(System.Collections.Generic.List{Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo},System.String)">
            <summary>
            Creates multiple customer accounts based on the information specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="customers">The authentication information associated with a customer account. The data includes the account properties such as the name, username, authorization access, and email address, the required password to match, and indicates if the account was imported from a third party resource. </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccountCollection = customeraccount.AddAccounts( customers,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.AddAccountsAsync(System.Collections.Generic.List{Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo},System.String)">
            <summary>
            Creates multiple customer accounts based on the information specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="customers">The authentication information associated with a customer account. The data includes the account properties such as the name, username, authorization access, and email address, the required password to match, and indicates if the account was imported from a third party resource. </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccountCollection = await customeraccount.AddAccountsAsync( customers,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.ChangePasswords(Mozu.Api.Contracts.Customer.AccountPasswordInfoCollection,System.String)">
            <summary>
            Changes a collection of shopper passwords
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="accountPasswordInfos">Mozu.Customer.Contracts.AccountPasswordInfoCollection ApiType DOCUMENT_HERE </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.ChangePasswordResultCollection"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var changePasswordResultCollection = customeraccount.ChangePasswords( accountPasswordInfos,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.ChangePasswordsAsync(Mozu.Api.Contracts.Customer.AccountPasswordInfoCollection,System.String)">
            <summary>
            Changes a collection of shopper passwords
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="accountPasswordInfos">Mozu.Customer.Contracts.AccountPasswordInfoCollection ApiType DOCUMENT_HERE </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.ChangePasswordResultCollection"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var changePasswordResultCollection = await customeraccount.ChangePasswordsAsync( accountPasswordInfos,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetLoginStateByEmailAddress(System.String,System.String)">
            <summary>
            Retrieves the current login state of a customer account by providing the customer's email address.
            </summary>
            <param name="emailAddress">The email address associated with the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.LoginState"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var loginState = customeraccount.GetLoginStateByEmailAddress( emailAddress,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetLoginStateByEmailAddressAsync(System.String,System.String)">
            <summary>
            Retrieves the current login state of a customer account by providing the customer's email address.
            </summary>
            <param name="emailAddress">The email address associated with the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.LoginState"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var loginState = await customeraccount.GetLoginStateByEmailAddressAsync( emailAddress,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetLoginStateByUserName(System.String,System.String)">
            <summary>
            Retrieves the current login state of a customer account by providing the user name associated with the customer account.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userName">The user name associated with the customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.LoginState"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var loginState = customeraccount.GetLoginStateByUserName( userName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetLoginStateByUserNameAsync(System.String,System.String)">
            <summary>
            Retrieves the current login state of a customer account by providing the user name associated with the customer account.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userName">The user name associated with the customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.LoginState"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var loginState = await customeraccount.GetLoginStateByUserNameAsync( userName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.ResetPassword(Mozu.Api.Contracts.Customer.ResetPasswordInfo)">
            <summary>
            Resets the password for a customer account.
            </summary>
            <param name="resetPasswordInfo">Information required to reset the password for a customer account.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              customeraccount.ResetPassword( resetPasswordInfo);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.ResetPasswordAsync(Mozu.Api.Contracts.Customer.ResetPasswordInfo)">
            <summary>
            Resets the password for a customer account.
            </summary>
            <param name="resetPasswordInfo">Information required to reset the password for a customer account.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              await customeraccount.ResetPasswordAsync( resetPasswordInfo);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.UpdateAccount(Mozu.Api.Contracts.Customer.CustomerAccount,System.Int32,System.String)">
            <summary>
            Updates a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="account">Properties of the customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccount = customeraccount.UpdateAccount( account,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.UpdateAccountAsync(Mozu.Api.Contracts.Customer.CustomerAccount,System.Int32,System.String)">
            <summary>
            Updates a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="account">Properties of the customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccount = await customeraccount.UpdateAccountAsync( account,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.DeleteAccount(System.Int32)">
            <summary>
            Deletes a customer account. A customer account cannot be deleted if any orders exist, past or present.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              customeraccount.DeleteAccount( accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.DeleteAccountAsync(System.Int32)">
            <summary>
            Deletes a customer account. A customer account cannot be deleted if any orders exist, past or present.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              await customeraccount.DeleteAccountAsync( accountId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.CustomerAuthTicketResource">
            <summary>
            Use the Customer Authentication Tickets resource to generate and refresh authentication tickets for customer accounts.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.CustomerAuthTicketResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAuthTicketResource.CreateAnonymousShopperAuthTicket">
            <summary>
            Creates an authentication ticket for an anonymous shopper user.
            </summary>
            <returns>
            <see cref="T:System.IO.Stream"/>
            </returns>
            <example>
            <code>
              var customerauthticket = new CustomerAuthTicket();
              var stream = customerauthticket.CreateAnonymousShopperAuthTicket();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAuthTicketResource.CreateAnonymousShopperAuthTicketAsync">
            <summary>
            Creates an authentication ticket for an anonymous shopper user.
            </summary>
            <returns>
            <see cref="T:System.IO.Stream"/>
            </returns>
            <example>
            <code>
              var customerauthticket = new CustomerAuthTicket();
              var stream = await customerauthticket.CreateAnonymousShopperAuthTicketAsync();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAuthTicketResource.CreateUserAuthTicket(Mozu.Api.Contracts.Customer.CustomerUserAuthInfo,System.String)">
            <summary>
            Generates a new authentication ticket for a customer account.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userAuthInfo">The authentication information required to generate an authentication ticket for a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>
            </returns>
            <example>
            <code>
              var customerauthticket = new CustomerAuthTicket();
              var customerAuthTicket = customerauthticket.CreateUserAuthTicket( userAuthInfo,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAuthTicketResource.CreateUserAuthTicketAsync(Mozu.Api.Contracts.Customer.CustomerUserAuthInfo,System.String)">
            <summary>
            Generates a new authentication ticket for a customer account.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userAuthInfo">The authentication information required to generate an authentication ticket for a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>
            </returns>
            <example>
            <code>
              var customerauthticket = new CustomerAuthTicket();
              var customerAuthTicket = await customerauthticket.CreateUserAuthTicketAsync( userAuthInfo,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAuthTicketResource.RefreshUserAuthTicket(System.String,System.String)">
            <summary>
            Refreshes an existing authentication ticket for a customer account by providing the refresh token string.
            </summary>
            <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>
            </returns>
            <example>
            <code>
              var customerauthticket = new CustomerAuthTicket();
              var customerAuthTicket = customerauthticket.RefreshUserAuthTicket( refreshToken,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAuthTicketResource.RefreshUserAuthTicketAsync(System.String,System.String)">
            <summary>
            Refreshes an existing authentication ticket for a customer account by providing the refresh token string.
            </summary>
            <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>
            </returns>
            <example>
            <code>
              var customerauthticket = new CustomerAuthTicket();
              var customerAuthTicket = await customerauthticket.RefreshUserAuthTicketAsync( refreshToken,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource">
            <summary>
            Use the Customer Segments resource to manage the segments that enable a client to manage groups of customers and target discounts for these segments. After a customer segment is defined, you can associate any number of customer accounts with it.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.GetSegments(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of defined customer segments according to any filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerSegmentCollection"/>
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              var customerSegmentCollection = customersegment.GetSegments( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.GetSegmentsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of defined customer segments according to any filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerSegmentCollection"/>
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              var customerSegmentCollection = await customersegment.GetSegmentsAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.GetSegment(System.Int32,System.String)">
            <summary>
            Retrieves the details of the customer segment specified in the request. This operation does not return a list of the customer accounts associated with the segment.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerSegment"/>
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              var customerSegment = customersegment.GetSegment( id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.GetSegmentAsync(System.Int32,System.String)">
            <summary>
            Retrieves the details of the customer segment specified in the request. This operation does not return a list of the customer accounts associated with the segment.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerSegment"/>
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              var customerSegment = await customersegment.GetSegmentAsync( id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.AddSegment(Mozu.Api.Contracts.Customer.CustomerSegment,System.String)">
            <summary>
            Creates a new customer segments. New customer segments do not have any associated customer accounts.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="segment">The Customer Segment object includes properties of a defined customer segment used to group customer accounts.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerSegment"/>
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              var customerSegment = customersegment.AddSegment( segment,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.AddSegmentAsync(Mozu.Api.Contracts.Customer.CustomerSegment,System.String)">
            <summary>
            Creates a new customer segments. New customer segments do not have any associated customer accounts.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="segment">The Customer Segment object includes properties of a defined customer segment used to group customer accounts.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerSegment"/>
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              var customerSegment = await customersegment.AddSegmentAsync( segment,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.AddSegmentAccounts(System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            Adds one or more customer accounts to a defined customer segment.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="accountIds">List of customer account IDs to add to the customer segment specified in the request.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              customersegment.AddSegmentAccounts( accountIds,  id);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.AddSegmentAccountsAsync(System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            Adds one or more customer accounts to a defined customer segment.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="accountIds">List of customer account IDs to add to the customer segment specified in the request.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              await customersegment.AddSegmentAccountsAsync( accountIds,  id);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.UpdateSegment(Mozu.Api.Contracts.Customer.CustomerSegment,System.Int32,System.String)">
            <summary>
            Updates the details of the customer segment specified in the request.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="segment">The Customer Segment object includes properties of a defined customer segment used to group customer accounts.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerSegment"/>
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              var customerSegment = customersegment.UpdateSegment( segment,  id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.UpdateSegmentAsync(Mozu.Api.Contracts.Customer.CustomerSegment,System.Int32,System.String)">
            <summary>
            Updates the details of the customer segment specified in the request.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="segment">The Customer Segment object includes properties of a defined customer segment used to group customer accounts.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerSegment"/>
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              var customerSegment = await customersegment.UpdateSegmentAsync( segment,  id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.DeleteSegment(System.Int32)">
            <summary>
            Deletes a customer segment specified by its unique identifier. Deleting a segment removes any customer account associations, but does not delete the customer account itself.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              customersegment.DeleteSegment( id);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.DeleteSegmentAsync(System.Int32)">
            <summary>
            Deletes a customer segment specified by its unique identifier. Deleting a segment removes any customer account associations, but does not delete the customer account itself.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              await customersegment.DeleteSegmentAsync( id);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.RemoveSegmentAccount(System.Int32,System.Int32)">
            <summary>
            Removes single account from a segment.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              customersegment.RemoveSegmentAccount( id,  accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.RemoveSegmentAccountAsync(System.Int32,System.Int32)">
            <summary>
            Removes single account from a segment.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              await customersegment.RemoveSegmentAccountAsync( id,  accountId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.VisitResource">
            <summary>
            Use the Visits resource to manage all visits a customer makes to a tenant's sites and measure the level of transactions a customer performs during a unique visit for customer account analytics. Clients can track customer visits by site (including online and in-person interactions), the transactions a customer performs during the visit, and the device type associated with the visit, if any.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.VisitResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.GetVisits(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of customer visits according to any filter or sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.VisitCollection"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visitCollection = visit.GetVisits( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.GetVisitsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of customer visits according to any filter or sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.VisitCollection"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visitCollection = await visit.GetVisitsAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.GetVisit(System.String,System.String)">
            <summary>
            Retrieves the details of the customer visit specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="visitId">Unique identifier of the customer visit to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Visit"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visit = visit.GetVisit( visitId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.GetVisitAsync(System.String,System.String)">
            <summary>
            Retrieves the details of the customer visit specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="visitId">Unique identifier of the customer visit to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Visit"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visit = await visit.GetVisitAsync( visitId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.AddVisit(Mozu.Api.Contracts.Customer.Visit,System.String)">
            <summary>
            Creates a new visit for the customer account specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="visit">Properties of a customer visit to one of a company's sites.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Visit"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visit = visit.AddVisit( visit,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.AddVisitAsync(Mozu.Api.Contracts.Customer.Visit,System.String)">
            <summary>
            Creates a new visit for the customer account specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="visit">Properties of a customer visit to one of a company's sites.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Visit"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visit = await visit.AddVisitAsync( visit,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.UpdateVisit(Mozu.Api.Contracts.Customer.Visit,System.String,System.String)">
            <summary>
            Updates one or more properties of a defined customer visit.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="visitId">Unique identifier of the customer visit to update.</param>
            <param name="visit">Properties of a customer visit to one of a company's sites.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Visit"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visit = visit.UpdateVisit( visit,  visitId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.UpdateVisitAsync(Mozu.Api.Contracts.Customer.Visit,System.String,System.String)">
            <summary>
            Updates one or more properties of a defined customer visit.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="visitId">Unique identifier of the customer visit to update.</param>
            <param name="visit">Properties of a customer visit to one of a company's sites.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Visit"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visit = await visit.UpdateVisitAsync( visit,  visitId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource">
            <summary>
            Use the Customer In-Stock Notification Subscription resource to manage the subscriptions customer accounts use to send product notifications. This resource can send a notification when a product in a catalog returns to a site's active inventory after it is out of stock, or when a new product becomes available for the first time.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource.GetInStockNotificationSubscriptions(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of in-stock notification subscriptions.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection"/>
            </returns>
            <example>
            <code>
              var instocknotificationsubscription = new InStockNotificationSubscription();
              var inStockNotificationSubscriptionCollection = instocknotificationsubscription.GetInStockNotificationSubscriptions( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource.GetInStockNotificationSubscriptionsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of in-stock notification subscriptions.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection"/>
            </returns>
            <example>
            <code>
              var instocknotificationsubscription = new InStockNotificationSubscription();
              var inStockNotificationSubscriptionCollection = await instocknotificationsubscription.GetInStockNotificationSubscriptionsAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource.GetInStockNotificationSubscription(System.Int32,System.String)">
            <summary>
            Retrieves the details of a subscription that sends a push notification when a product is available in a site's active stock.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscription"/>
            </returns>
            <example>
            <code>
              var instocknotificationsubscription = new InStockNotificationSubscription();
              var inStockNotificationSubscription = instocknotificationsubscription.GetInStockNotificationSubscription( id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource.GetInStockNotificationSubscriptionAsync(System.Int32,System.String)">
            <summary>
            Retrieves the details of a subscription that sends a push notification when a product is available in a site's active stock.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscription"/>
            </returns>
            <example>
            <code>
              var instocknotificationsubscription = new InStockNotificationSubscription();
              var inStockNotificationSubscription = await instocknotificationsubscription.GetInStockNotificationSubscriptionAsync( id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource.AddInStockNotificationSubscription(Mozu.Api.Contracts.Customer.InStockNotificationSubscription,System.String)">
            <summary>
            Creates a new subscription that notifies the customer when the product specified in the request is available in the active inventory of the defined location.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="inStockNotificationSubscription">Properties of a push notification to which the shopper subscribes. This notification sends the shopper an alert when a new product or a product previously out of stock becomes available in the specified location's active product inventory.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscription"/>
            </returns>
            <example>
            <code>
              var instocknotificationsubscription = new InStockNotificationSubscription();
              var inStockNotificationSubscription = instocknotificationsubscription.AddInStockNotificationSubscription( inStockNotificationSubscription,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource.AddInStockNotificationSubscriptionAsync(Mozu.Api.Contracts.Customer.InStockNotificationSubscription,System.String)">
            <summary>
            Creates a new subscription that notifies the customer when the product specified in the request is available in the active inventory of the defined location.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="inStockNotificationSubscription">Properties of a push notification to which the shopper subscribes. This notification sends the shopper an alert when a new product or a product previously out of stock becomes available in the specified location's active product inventory.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscription"/>
            </returns>
            <example>
            <code>
              var instocknotificationsubscription = new InStockNotificationSubscription();
              var inStockNotificationSubscription = await instocknotificationsubscription.AddInStockNotificationSubscriptionAsync( inStockNotificationSubscription,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource.DeleteInStockNotificationSubscription(System.Int32)">
            <summary>
            Deletes a subscription for a customer in-stock notification.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var instocknotificationsubscription = new InStockNotificationSubscription();
              instocknotificationsubscription.DeleteInStockNotificationSubscription( id);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource.DeleteInStockNotificationSubscriptionAsync(System.Int32)">
            <summary>
            Deletes a subscription for a customer in-stock notification.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var instocknotificationsubscription = new InStockNotificationSubscription();
              await instocknotificationsubscription.DeleteInStockNotificationSubscriptionAsync( id);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.LocationResource">
            <summary>
            Use the Location resource to retrieve details about a location from a Mozu hosted storefront.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.LocationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetLocation(System.String,System.String)">
            <summary>
            Retrieves the details of the location specified in the request.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.GetLocation( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetLocationAsync(System.String,System.String)">
            <summary>
            Retrieves the details of the location specified in the request.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = await location.GetLocationAsync( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetLocationsInUsageType(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of the locations configured for a specified location usage type for the specified site, according to any defined filter or sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="locationUsageType">System-defined location usage type code, which is DS for direct ship, SP for in-store pickup, or storeFinder.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationCollection"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var locationCollection = location.GetLocationsInUsageType( locationUsageType,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetLocationsInUsageTypeAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of the locations configured for a specified location usage type for the specified site, according to any defined filter or sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="locationUsageType">System-defined location usage type code, which is DS for direct ship, SP for in-store pickup, or storeFinder.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationCollection"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var locationCollection = await location.GetLocationsInUsageTypeAsync( locationUsageType,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetDirectShipLocation(System.String)">
            <summary>
            Retrieves the details of the location configured for the direct shipping (DS) location usage type for the site specified in the request. This location acts as an origin address from which order packages will ship, as well as the location where product reservations are created when order items are submitted with the direct ship fulfillment type (DS). If the direct ship location usage type is not configured for this site, the operation returns an error.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.GetDirectShipLocation( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetDirectShipLocationAsync(System.String)">
            <summary>
            Retrieves the details of the location configured for the direct shipping (DS) location usage type for the site specified in the request. This location acts as an origin address from which order packages will ship, as well as the location where product reservations are created when order items are submitted with the direct ship fulfillment type (DS). If the direct ship location usage type is not configured for this site, the operation returns an error.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = await location.GetDirectShipLocationAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetInStorePickupLocation(System.String,System.String)">
            <summary>
            Retrieves the details of the location configured for the in-store pickup (SP) location usage type for the site specified in the request. If the location is not associated with a location type configured for the in-store pickup location usage type (SP), the operation returns an error.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.GetInStorePickupLocation( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetInStorePickupLocationAsync(System.String,System.String)">
            <summary>
            Retrieves the details of the location configured for the in-store pickup (SP) location usage type for the site specified in the request. If the location is not associated with a location type configured for the in-store pickup location usage type (SP), the operation returns an error.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = await location.GetInStorePickupLocationAsync( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetInStorePickupLocations(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of locations valid for in-store pickup of an item in an order according to any filter and sort criteria. For example, an application could use this operation to provide a store finder feature based on the shopper's GPS coordinates. If the location types for the in-store pickup location usage type are not configured for the site, this operation returns an error.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationCollection"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var locationCollection = location.GetInStorePickupLocations( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetInStorePickupLocationsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of locations valid for in-store pickup of an item in an order according to any filter and sort criteria. For example, an application could use this operation to provide a store finder feature based on the shopper's GPS coordinates. If the location types for the in-store pickup location usage type are not configured for the site, this operation returns an error.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationCollection"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var locationCollection = await location.GetInStorePickupLocationsAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.OrderResource">
            <summary>
            Use the Orders resource to manage all components of order processing, payment, and fulfillment.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.OrderResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetOrders(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a list of orders according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var orderCollection = order.GetOrders( startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetOrdersAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a list of orders according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var orderCollection = await order.GetOrdersAsync( startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetAvailableActions(System.String)">
            <summary>
            Retrieves the actions available to perform for an order based on its current status.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var order = new Order();
              var string = order.GetAvailableActions( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetAvailableActionsAsync(System.String)">
            <summary>
            Retrieves the actions available to perform for an order based on its current status.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var order = new Order();
              var string = await order.GetAvailableActionsAsync( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetTaxableOrders(System.String)">
            <summary>
            Retrieves an order for the purpose of splitting it into multiple taxable orders in order to fulfill the order in multiple locations.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.PricingRuntime.TaxableOrder"/>}
            </returns>
            <example>
            <code>
              var order = new Order();
              var taxableOrder = order.GetTaxableOrders( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetTaxableOrdersAsync(System.String)">
            <summary>
            Retrieves an order for the purpose of splitting it into multiple taxable orders in order to fulfill the order in multiple locations.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.PricingRuntime.TaxableOrder"/>}
            </returns>
            <example>
            <code>
              var order = new Order();
              var taxableOrder = await order.GetTaxableOrdersAsync( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetOrder(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of an order specified by the order ID.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.GetOrder( orderId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetOrderAsync(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of an order specified by the order ID.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = await order.GetOrderAsync( orderId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.CreateOrderFromCart(System.String,System.String)">
            <summary>
            Creates a new order from an existing cart when the customer chooses to proceed to checkout.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.CreateOrderFromCart( cartId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.CreateOrderFromCartAsync(System.String,System.String)">
            <summary>
            Creates a new order from an existing cart when the customer chooses to proceed to checkout.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = await order.CreateOrderFromCartAsync( cartId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.CreateOrder(Mozu.Api.Contracts.CommerceRuntime.Orders.Order,System.String)">
            <summary>
            Creates a new order for no-cart quick-ordering scenarios.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="order">Properties of an order, including its components.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.CreateOrder( order,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.CreateOrderAsync(Mozu.Api.Contracts.CommerceRuntime.Orders.Order,System.String)">
            <summary>
            Creates a new order for no-cart quick-ordering scenarios.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="order">Properties of an order, including its components.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = await order.CreateOrderAsync( order,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.PerformOrderAction(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction,System.String,System.String)">
            <summary>
            Perform the specified action for an order. The actions you can perform depend on the current status of the order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="action">The action to perform for the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.PerformOrderAction( action,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.PerformOrderActionAsync(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction,System.String,System.String)">
            <summary>
            Perform the specified action for an order. The actions you can perform depend on the current status of the order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="action">The action to perform for the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = await order.PerformOrderActionAsync( action,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.UpdateOrderDiscount(Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the properties of a discount applied to an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="discount">Properties of all applied discounts for an associated cart, order, or product. </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.UpdateOrderDiscount( discount,  orderId,  discountId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.UpdateOrderDiscountAsync(Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the properties of a discount applied to an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="discount">Properties of all applied discounts for an associated cart, order, or product. </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = await order.UpdateOrderDiscountAsync( discount,  orderId,  discountId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.DeleteOrderDraft(System.String,System.String)">
            <summary>
            Deletes the current draft version of the order, which also deletes any uncommitted changes made to the order in draft mode.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var order = new Order();
              order.DeleteOrderDraft( orderId,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.DeleteOrderDraftAsync(System.String,System.String)">
            <summary>
            Deletes the current draft version of the order, which also deletes any uncommitted changes made to the order in draft mode.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var order = new Order();
              await order.DeleteOrderDraftAsync( orderId,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.ResendOrderConfirmationEmail(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction,System.String)">
            <summary>
            commerce-orders Put ResendOrderConfirmationEmail description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="action">The action to perform for the order.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var order = new Order();
              order.ResendOrderConfirmationEmail( action,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.ResendOrderConfirmationEmailAsync(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction,System.String)">
            <summary>
            commerce-orders Put ResendOrderConfirmationEmail description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="action">The action to perform for the order.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var order = new Order();
              await order.ResendOrderConfirmationEmailAsync( action,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.ChangeOrderUserId(System.String,System.String)">
            <summary>
            Updates the user ID of the shopper who placed the order to the current user.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.ChangeOrderUserId( orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.ChangeOrderUserIdAsync(System.String,System.String)">
            <summary>
            Updates the user ID of the shopper who placed the order to the current user.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = await order.ChangeOrderUserIdAsync( orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.UpdateOrder(Mozu.Api.Contracts.CommerceRuntime.Orders.Order,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the specified order when additional order information, such as shipping or billing information, is modified during the checkout process.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="order">Properties of an order, including its components.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.UpdateOrder( order,  orderId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.UpdateOrderAsync(Mozu.Api.Contracts.CommerceRuntime.Orders.Order,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the specified order when additional order information, such as shipping or billing information, is modified during the checkout process.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="order">Properties of an order, including its components.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = await order.UpdateOrderAsync( order,  orderId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource">
            <summary>
            Use this subresource to manage ad-hoc order level price adjustments.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.ApplyShippingAdjustment(Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment,System.String,System.String,System.String,System.String)">
            <summary>
            Applies a shipping adjustment to the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="adjustment">Properties of an ad-hoc price adjustment for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.ApplyShippingAdjustment( adjustment,  orderId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.ApplyShippingAdjustmentAsync(Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment,System.String,System.String,System.String,System.String)">
            <summary>
            Applies a shipping adjustment to the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="adjustment">Properties of an ad-hoc price adjustment for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = await adjustment.ApplyShippingAdjustmentAsync( adjustment,  orderId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.ApplyAdjustment(Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment,System.String,System.String,System.String,System.String)">
            <summary>
            Applies a price adjustment to the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="adjustment">Properties of an ad-hoc price adjustment for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.ApplyAdjustment( adjustment,  orderId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.ApplyAdjustmentAsync(Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment,System.String,System.String,System.String,System.String)">
            <summary>
            Applies a price adjustment to the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="adjustment">Properties of an ad-hoc price adjustment for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = await adjustment.ApplyAdjustmentAsync( adjustment,  orderId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.RemoveShippingAdjustment(System.String,System.String,System.String)">
            <summary>
            Removes a shipping adjustment previously applied to an order or draft.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.RemoveShippingAdjustment( orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.RemoveShippingAdjustmentAsync(System.String,System.String,System.String)">
            <summary>
            Removes a shipping adjustment previously applied to an order or draft.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = await adjustment.RemoveShippingAdjustmentAsync( orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.RemoveAdjustment(System.String,System.String,System.String)">
            <summary>
            Removes a price adjustment from the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.RemoveAdjustment( orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.RemoveAdjustmentAsync(System.String,System.String,System.String)">
            <summary>
            Removes a price adjustment from the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = await adjustment.RemoveAdjustmentAsync( orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource">
            <summary>
            Use this subresource to apply coupons to or remove coupons from an order based on a supplied coupon code.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource.ApplyCoupon(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Apply a coupon to the order.
            </summary>
            <param name="couponCode">Alphanumeric code associated with the coupon or promotion that results in a discounted price.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var order = applieddiscount.ApplyCoupon( orderId,  couponCode,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource.ApplyCouponAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Apply a coupon to the order.
            </summary>
            <param name="couponCode">Alphanumeric code associated with the coupon or promotion that results in a discounted price.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var order = await applieddiscount.ApplyCouponAsync( orderId,  couponCode,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource.RemoveCoupon(System.String,System.String,System.String,System.String)">
            <summary>
            Removes a coupon previously applied to the order.
            </summary>
            <param name="couponCode">Alphanumeric code associated with the coupon or promotion that results in a discounted price.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var order = applieddiscount.RemoveCoupon( orderId,  couponCode,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource.RemoveCouponAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Removes a coupon previously applied to the order.
            </summary>
            <param name="couponCode">Alphanumeric code associated with the coupon or promotion that results in a discounted price.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var order = await applieddiscount.RemoveCouponAsync( orderId,  couponCode,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource.RemoveCoupons(System.String,System.String,System.String)">
            <summary>
            Removes all coupons previously applied to the order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var order = applieddiscount.RemoveCoupons( orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource.RemoveCouponsAsync(System.String,System.String,System.String)">
            <summary>
            Removes all coupons previously applied to the order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var order = await applieddiscount.RemoveCouponsAsync( orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource">
            <summary>
            Use the Order Attribute Definition resource to manage the attributes that uniquely describe orders, such as the associated shopping season or "How did you hear about us?" information. Merchants can display order attributes on the order summary, the order confirmation page, invoices, or packing slips.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.GetAttributes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of order attributes according to any filter criteria or sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeCollection = attribute.GetAttributes( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.GetAttributesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of order attributes according to any filter criteria or sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeCollection = await attribute.GetAttributesAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.GetAttributeVocabularyValues(System.String)">
            <summary>
            Returns the list of vocabulary values defined for the order attribute specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeVocabularyValue = attribute.GetAttributeVocabularyValues( attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.GetAttributeVocabularyValuesAsync(System.String)">
            <summary>
            Returns the list of vocabulary values defined for the order attribute specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeVocabularyValue = await attribute.GetAttributeVocabularyValuesAsync( attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.GetAttribute(System.String,System.String)">
            <summary>
            Retrieves the details of the order attribute specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.GetAttribute( attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.GetAttributeAsync(System.String,System.String)">
            <summary>
            Retrieves the details of the order attribute specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = await attribute.GetAttributeAsync( attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource">
            <summary>
            Use the Billing Info subresource to manage the billing information stored for an order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource.GetBillingInfo(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the billing information associated with an order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>
            </returns>
            <example>
            <code>
              var billinginfo = new BillingInfo();
              var billingInfo = billinginfo.GetBillingInfo( orderId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource.GetBillingInfoAsync(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the billing information associated with an order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>
            </returns>
            <example>
            <code>
              var billinginfo = new BillingInfo();
              var billingInfo = await billinginfo.GetBillingInfoAsync( orderId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource.SetBillingInfo(Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the billing information supplied for an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="billingInfo">Properties of the billing information entered for an order during checkout.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>
            </returns>
            <example>
            <code>
              var billinginfo = new BillingInfo();
              var billingInfo = billinginfo.SetBillingInfo( billingInfo,  orderId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource.SetBillingInfoAsync(Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the billing information supplied for an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="billingInfo">Properties of the billing information entered for an order during checkout.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>
            </returns>
            <example>
            <code>
              var billinginfo = new BillingInfo();
              var billingInfo = await billinginfo.SetBillingInfoAsync( billingInfo,  orderId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource">
            <summary>
            A digital package is a package in a digital format.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource.GetAvailableDigitalPackageFulfillmentActions(System.String,System.String)">
            <summary>
            Retrieves a collection of fulfillment options for digital packages. Options may include emailed files/links or provided links. 
            </summary>
            <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var digitalpackage = new DigitalPackage();
              var string = digitalpackage.GetAvailableDigitalPackageFulfillmentActions( orderId,  digitalPackageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource.GetAvailableDigitalPackageFulfillmentActionsAsync(System.String,System.String)">
            <summary>
            Retrieves a collection of fulfillment options for digital packages. Options may include emailed files/links or provided links. 
            </summary>
            <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var digitalpackage = new DigitalPackage();
              var string = await digitalpackage.GetAvailableDigitalPackageFulfillmentActionsAsync( orderId,  digitalPackageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource.GetDigitalPackage(System.String,System.String,System.String)">
            <summary>
            This operation retreives a digital package within an order and it requires two parameters: orderId and digitalPackageId.
            </summary>
            <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>
            </returns>
            <example>
            <code>
              var digitalpackage = new DigitalPackage();
              var digitalPackage = digitalpackage.GetDigitalPackage( orderId,  digitalPackageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource.GetDigitalPackageAsync(System.String,System.String,System.String)">
            <summary>
            This operation retreives a digital package within an order and it requires two parameters: orderId and digitalPackageId.
            </summary>
            <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>
            </returns>
            <example>
            <code>
              var digitalpackage = new DigitalPackage();
              var digitalPackage = await digitalpackage.GetDigitalPackageAsync( orderId,  digitalPackageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource.CreateDigitalPackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage,System.String,System.String)">
            <summary>
            Lets you apply a digital package to the order using the orderId and digitalPackage parameters.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="digitalPackage">Lets you manage an order's digital packages, by applying a digital package to the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>
            </returns>
            <example>
            <code>
              var digitalpackage = new DigitalPackage();
              var digitalPackage = digitalpackage.CreateDigitalPackage( digitalPackage,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource.CreateDigitalPackageAsync(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage,System.String,System.String)">
            <summary>
            Lets you apply a digital package to the order using the orderId and digitalPackage parameters.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="digitalPackage">Lets you manage an order's digital packages, by applying a digital package to the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>
            </returns>
            <example>
            <code>
              var digitalpackage = new DigitalPackage();
              var digitalPackage = await digitalpackage.CreateDigitalPackageAsync( digitalPackage,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource.UpdateDigitalPackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage,System.String,System.String,System.String)">
            <summary>
            This method operates on one digital package, specified by the id given. This method ensures that the digital package ID provided is in the order with the id given, and then updates the properties of that package with the properties of the one passed in using the ‘digitalpackage’ parameter.
            </summary>
            <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="digitalPackage">Lets you manage an order's digital packages, by applying a digital package to the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>
            </returns>
            <example>
            <code>
              var digitalpackage = new DigitalPackage();
              var digitalPackage = digitalpackage.UpdateDigitalPackage( digitalPackage,  orderId,  digitalPackageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource.UpdateDigitalPackageAsync(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage,System.String,System.String,System.String)">
            <summary>
            This method operates on one digital package, specified by the id given. This method ensures that the digital package ID provided is in the order with the id given, and then updates the properties of that package with the properties of the one passed in using the ‘digitalpackage’ parameter.
            </summary>
            <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="digitalPackage">Lets you manage an order's digital packages, by applying a digital package to the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>
            </returns>
            <example>
            <code>
              var digitalpackage = new DigitalPackage();
              var digitalPackage = await digitalpackage.UpdateDigitalPackageAsync( digitalPackage,  orderId,  digitalPackageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource.DeleteDigitalPackage(System.String,System.String)">
            <summary>
            This operation deletes a digital package from an order. This operation requires three parameters: orderId, digitalPackageId, and digitalPackage.
            </summary>
            <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var digitalpackage = new DigitalPackage();
              digitalpackage.DeleteDigitalPackage( orderId,  digitalPackageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource.DeleteDigitalPackageAsync(System.String,System.String)">
            <summary>
            This operation deletes a digital package from an order. This operation requires three parameters: orderId, digitalPackageId, and digitalPackage.
            </summary>
            <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var digitalpackage = new DigitalPackage();
              await digitalpackage.DeleteDigitalPackageAsync( orderId,  digitalPackageId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.ExtendedPropertyResource">
            <summary>
            commerce/orders/extendedproperties related resources. DOCUMENT_HERE 
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.ExtendedPropertyResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ExtendedPropertyResource.GetExtendedProperties(System.String,System.Nullable{System.Boolean})">
            <summary>
            orders-extendedproperties Get GetExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = extendedproperty.GetExtendedProperties( orderId,  draft);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ExtendedPropertyResource.GetExtendedPropertiesAsync(System.String,System.Nullable{System.Boolean})">
            <summary>
            orders-extendedproperties Get GetExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = await extendedproperty.GetExtendedPropertiesAsync( orderId,  draft);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ExtendedPropertyResource.AddExtendedProperties(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty},System.String,System.String,System.String)">
            <summary>
            orders-extendedproperties Post AddExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <param name="extendedProperties">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = extendedproperty.AddExtendedProperties( extendedProperties,  orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ExtendedPropertyResource.AddExtendedPropertiesAsync(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty},System.String,System.String,System.String)">
            <summary>
            orders-extendedproperties Post AddExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <param name="extendedProperties">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = await extendedproperty.AddExtendedPropertiesAsync( extendedProperties,  orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ExtendedPropertyResource.UpdateExtendedProperty(Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            orders-extendedproperties Put UpdateExtendedProperty description DOCUMENT_HERE 
            </summary>
            <param name="key"></param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="upsert"></param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <param name="extendedProperty">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = extendedproperty.UpdateExtendedProperty( extendedProperty,  orderId,  key,  updateMode,  version,  upsert,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ExtendedPropertyResource.UpdateExtendedPropertyAsync(Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            orders-extendedproperties Put UpdateExtendedProperty description DOCUMENT_HERE 
            </summary>
            <param name="key"></param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="upsert"></param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <param name="extendedProperty">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = await extendedproperty.UpdateExtendedPropertyAsync( extendedProperty,  orderId,  key,  updateMode,  version,  upsert,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ExtendedPropertyResource.UpdateExtendedProperties(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty},System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            orders-extendedproperties Put UpdateExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="upsert"></param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <param name="extendedProperties">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = extendedproperty.UpdateExtendedProperties( extendedProperties,  orderId,  updateMode,  version,  upsert);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ExtendedPropertyResource.UpdateExtendedPropertiesAsync(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty},System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            orders-extendedproperties Put UpdateExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="upsert"></param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <param name="extendedProperties">Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE </param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ExtendedProperty"/>}
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              var extendedProperty = await extendedproperty.UpdateExtendedPropertiesAsync( extendedProperties,  orderId,  updateMode,  version,  upsert);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ExtendedPropertyResource.DeleteExtendedProperty(System.String,System.String,System.String,System.String)">
            <summary>
            orders-extendedproperties Delete DeleteExtendedProperty description DOCUMENT_HERE 
            </summary>
            <param name="key"></param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              extendedproperty.DeleteExtendedProperty( orderId,  key,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ExtendedPropertyResource.DeleteExtendedPropertyAsync(System.String,System.String,System.String,System.String)">
            <summary>
            orders-extendedproperties Delete DeleteExtendedProperty description DOCUMENT_HERE 
            </summary>
            <param name="key"></param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              await extendedproperty.DeleteExtendedPropertyAsync( orderId,  key,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ExtendedPropertyResource.DeleteExtendedProperties(System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
            <summary>
            orders-extendedproperties Delete DeleteExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <param name="keys"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              extendedproperty.DeleteExtendedProperties( keys,  orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ExtendedPropertyResource.DeleteExtendedPropertiesAsync(System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
            <summary>
            orders-extendedproperties Delete DeleteExtendedProperties description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <param name="keys"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var extendedproperty = new ExtendedProperty();
              await extendedproperty.DeleteExtendedPropertiesAsync( keys,  orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.FulfillmentActionResource">
            <summary>
            Use the Fulfillment resource to manage shipments or pickups of collections of packages for an order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.FulfillmentActionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.FulfillmentActionResource.PerformFulfillmentAction(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction,System.String,System.String)">
            <summary>
            Sets the fulfillment action to "Ship" or "PickUp". To ship an order or prepare it for in-store pickup, the order must have a customer name, the "Open" or "OpenAndProcessing" status. To ship the order, it must also have the full shipping address and shipping method. Shipping all packages or picking up all pickups for an order will complete a paid order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="action">Properties of an action to perform when fulfilling an item in an order, whether through in-store pickup or direct shipping.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var fulfillmentaction = new FulfillmentAction();
              var order = fulfillmentaction.PerformFulfillmentAction( action,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.FulfillmentActionResource.PerformFulfillmentActionAsync(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction,System.String,System.String)">
            <summary>
            Sets the fulfillment action to "Ship" or "PickUp". To ship an order or prepare it for in-store pickup, the order must have a customer name, the "Open" or "OpenAndProcessing" status. To ship the order, it must also have the full shipping address and shipping method. Shipping all packages or picking up all pickups for an order will complete a paid order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="action">Properties of an action to perform when fulfilling an item in an order, whether through in-store pickup or direct shipping.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var fulfillmentaction = new FulfillmentAction();
              var order = await fulfillmentaction.PerformFulfillmentActionAsync( action,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.FulfillmentActionResource.ResendPackageFulfillmentEmail(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction,System.String,System.String)">
            <summary>
            orders-fulfillment Post ResendPackageFulfillmentEmail description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="action">Properties of an action to perform when fulfilling an item in an order, whether through in-store pickup or direct shipping.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var fulfillmentaction = new FulfillmentAction();
              var order = fulfillmentaction.ResendPackageFulfillmentEmail( action,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.FulfillmentActionResource.ResendPackageFulfillmentEmailAsync(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction,System.String,System.String)">
            <summary>
            orders-fulfillment Post ResendPackageFulfillmentEmail description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="action">Properties of an action to perform when fulfilling an item in an order, whether through in-store pickup or direct shipping.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var fulfillmentaction = new FulfillmentAction();
              var order = await fulfillmentaction.ResendPackageFulfillmentEmailAsync( action,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.FulfillmentInfoResource">
            <summary>
            Use the Fulfillment Information resource to manage shipping or pickup information for orders.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.FulfillmentInfoResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.FulfillmentInfoResource.GetFulfillmentInfo(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of the fulfillment information for the specified order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo"/>
            </returns>
            <example>
            <code>
              var fulfillmentinfo = new FulfillmentInfo();
              var fulfillmentInfo = fulfillmentinfo.GetFulfillmentInfo( orderId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.FulfillmentInfoResource.GetFulfillmentInfoAsync(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of the fulfillment information for the specified order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo"/>
            </returns>
            <example>
            <code>
              var fulfillmentinfo = new FulfillmentInfo();
              var fulfillmentInfo = await fulfillmentinfo.GetFulfillmentInfoAsync( orderId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.FulfillmentInfoResource.SetFulFillmentInfo(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo,System.String,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of fulfillment information for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="fulfillmentInfo">Properties of the information needed to fulfill an order, whether via in-store pickup or direct shipping.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo"/>
            </returns>
            <example>
            <code>
              var fulfillmentinfo = new FulfillmentInfo();
              var fulfillmentInfo = fulfillmentinfo.SetFulFillmentInfo( fulfillmentInfo,  orderId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.FulfillmentInfoResource.SetFulFillmentInfoAsync(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo,System.String,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of fulfillment information for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="fulfillmentInfo">Properties of the information needed to fulfill an order, whether via in-store pickup or direct shipping.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo"/>
            </returns>
            <example>
            <code>
              var fulfillmentinfo = new FulfillmentInfo();
              var fulfillmentInfo = await fulfillmentinfo.SetFulFillmentInfoAsync( fulfillmentInfo,  orderId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource">
            <summary>
            Use the Order Attributes resource to define how an order attribute definition applies to a specific order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource.GetOrderAttributes(System.String)">
            <summary>
            Retrieves a list of the attributes defined for the order specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
            </returns>
            <example>
            <code>
              var orderattribute = new OrderAttribute();
              var orderAttribute = orderattribute.GetOrderAttributes( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource.GetOrderAttributesAsync(System.String)">
            <summary>
            Retrieves a list of the attributes defined for the order specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
            </returns>
            <example>
            <code>
              var orderattribute = new OrderAttribute();
              var orderAttribute = await orderattribute.GetOrderAttributesAsync( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource.CreateOrderAttributes(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute},System.String)">
            <summary>
            Applies a list of attributes to the order specified in the request and defines a value for each attribute in the request body.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderAttributes">Properties of an attribute applied to an order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
            </returns>
            <example>
            <code>
              var orderattribute = new OrderAttribute();
              var orderAttribute = orderattribute.CreateOrderAttributes( orderAttributes,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource.CreateOrderAttributesAsync(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute},System.String)">
            <summary>
            Applies a list of attributes to the order specified in the request and defines a value for each attribute in the request body.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderAttributes">Properties of an attribute applied to an order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
            </returns>
            <example>
            <code>
              var orderattribute = new OrderAttribute();
              var orderAttribute = await orderattribute.CreateOrderAttributesAsync( orderAttributes,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource.UpdateOrderAttributes(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute},System.String,System.Nullable{System.Boolean})">
            <summary>
            Updates one or more properties of an attribute defined for the order specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="removeMissing">If true, the operation removes missing properties so that the updated order attributes will not show properties with a null value.</param>
            <param name="orderAttributes">Properties of an attribute applied to an order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
            </returns>
            <example>
            <code>
              var orderattribute = new OrderAttribute();
              var orderAttribute = orderattribute.UpdateOrderAttributes( orderAttributes,  orderId,  removeMissing);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource.UpdateOrderAttributesAsync(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute},System.String,System.Nullable{System.Boolean})">
            <summary>
            Updates one or more properties of an attribute defined for the order specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="removeMissing">If true, the operation removes missing properties so that the updated order attributes will not show properties with a null value.</param>
            <param name="orderAttributes">Properties of an attribute applied to an order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
            </returns>
            <example>
            <code>
              var orderattribute = new OrderAttribute();
              var orderAttribute = await orderattribute.UpdateOrderAttributesAsync( orderAttributes,  orderId,  removeMissing);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.OrderItemResource">
            <summary>
            Use this subresource to retrieve details about items in an active order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.OrderItemResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.GetOrderItemViaLineId(System.String,System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            orders-orderitems Get GetOrderItemViaLineId description DOCUMENT_HERE 
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="lineId"></param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var orderItem = orderitem.GetOrderItemViaLineId( orderId,  lineId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.GetOrderItemViaLineIdAsync(System.String,System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            orders-orderitems Get GetOrderItemViaLineId description DOCUMENT_HERE 
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="lineId"></param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var orderItem = await orderitem.GetOrderItemViaLineIdAsync( orderId,  lineId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.GetOrderItem(System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of a single order item.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var orderItem = orderitem.GetOrderItem( orderId,  orderItemId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.GetOrderItemAsync(System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of a single order item.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var orderItem = await orderitem.GetOrderItemAsync( orderId,  orderItemId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.GetOrderItems(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of all items in an order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var orderItemCollection = orderitem.GetOrderItems( orderId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.GetOrderItemsAsync(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of all items in an order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var orderItemCollection = await orderitem.GetOrderItemsAsync( orderId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.CreateOrderItem(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Adds a new item to a defined order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="orderItem">The details associated with a specific item in an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.CreateOrderItem( orderItem,  orderId,  updateMode,  version,  skipInventoryCheck,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.CreateOrderItemAsync(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Adds a new item to a defined order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="orderItem">The details associated with a specific item in an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = await orderitem.CreateOrderItemAsync( orderItem,  orderId,  updateMode,  version,  skipInventoryCheck,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateOrderItemDiscount(Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount,System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the discount applied to an item in an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="discount">Properties of all applied discounts for an associated cart, order, or product. </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.UpdateOrderItemDiscount( discount,  orderId,  orderItemId,  discountId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateOrderItemDiscountAsync(Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount,System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the discount applied to an item in an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="discount">Properties of all applied discounts for an associated cart, order, or product. </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = await orderitem.UpdateOrderItemDiscountAsync( discount,  orderId,  orderItemId,  discountId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateItemDuty(System.String,System.String,System.Decimal,System.String,System.String,System.String)">
            <summary>
            orders-orderitems Put UpdateItemDuty description DOCUMENT_HERE 
            </summary>
            <param name="dutyAmount"></param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.UpdateItemDuty( orderId,  orderItemId,  dutyAmount,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateItemDutyAsync(System.String,System.String,System.Decimal,System.String,System.String,System.String)">
            <summary>
            orders-orderitems Put UpdateItemDuty description DOCUMENT_HERE 
            </summary>
            <param name="dutyAmount"></param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = await orderitem.UpdateItemDutyAsync( orderId,  orderItemId,  dutyAmount,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateItemFulfillment(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the item fulfillment information for the order specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="orderItem">The details associated with a specific item in an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.UpdateItemFulfillment( orderItem,  orderId,  orderItemId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateItemFulfillmentAsync(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the item fulfillment information for the order specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="orderItem">The details associated with a specific item in an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = await orderitem.UpdateItemFulfillmentAsync( orderItem,  orderId,  orderItemId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateItemProductPrice(System.String,System.String,System.Decimal,System.String,System.String,System.String)">
            <summary>
            Override the price of an individual product on a line item in the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="price">The override price to specify for this item in the specified order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.UpdateItemProductPrice( orderId,  orderItemId,  price,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateItemProductPriceAsync(System.String,System.String,System.Decimal,System.String,System.String,System.String)">
            <summary>
            Override the price of an individual product on a line item in the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="price">The override price to specify for this item in the specified order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = await orderitem.UpdateItemProductPriceAsync( orderId,  orderItemId,  price,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateItemQuantity(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the quantity of an item in an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.UpdateItemQuantity( orderId,  orderItemId,  quantity,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateItemQuantityAsync(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the quantity of an item in an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = await orderitem.UpdateItemQuantityAsync( orderId,  orderItemId,  quantity,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.DeleteOrderItem(System.String,System.String,System.String,System.String)">
            <summary>
            Removes a previously added item from a defined order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.DeleteOrderItem( orderId,  orderItemId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.DeleteOrderItemAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Removes a previously added item from a defined order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = await orderitem.DeleteOrderItemAsync( orderId,  orderItemId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource">
            <summary>
            Use the Order Notes subresource to manage merchant-level notes associated with an active order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.GetOrderNotes(System.String)">
            <summary>
            Retrieves a list of all notes for an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = ordernote.GetOrderNotes( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.GetOrderNotesAsync(System.String)">
            <summary>
            Retrieves a list of all notes for an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = await ordernote.GetOrderNotesAsync( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.GetOrderNote(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a specific order note.
            </summary>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = ordernote.GetOrderNote( orderId,  noteId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.GetOrderNoteAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a specific order note.
            </summary>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = await ordernote.GetOrderNoteAsync( orderId,  noteId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.CreateOrderNote(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote,System.String,System.String)">
            <summary>
            Creates a new merchant note for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="orderNote">Properties of an order note for a merchant, which is internal only for administrative purposes and not available to the shopper.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = ordernote.CreateOrderNote( orderNote,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.CreateOrderNoteAsync(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote,System.String,System.String)">
            <summary>
            Creates a new merchant note for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="orderNote">Properties of an order note for a merchant, which is internal only for administrative purposes and not available to the shopper.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = await ordernote.CreateOrderNoteAsync( orderNote,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.UpdateOrderNote(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote,System.String,System.String,System.String)">
            <summary>
            Updates a specific note for an order.
            </summary>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="orderNote">Properties of an order note for a merchant, which is internal only for administrative purposes and not available to the shopper.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = ordernote.UpdateOrderNote( orderNote,  orderId,  noteId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.UpdateOrderNoteAsync(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote,System.String,System.String,System.String)">
            <summary>
            Updates a specific note for an order.
            </summary>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="orderNote">Properties of an order note for a merchant, which is internal only for administrative purposes and not available to the shopper.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = await ordernote.UpdateOrderNoteAsync( orderNote,  orderId,  noteId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.DeleteOrderNote(System.String,System.String)">
            <summary>
            Deletes the specified order note.
            </summary>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              ordernote.DeleteOrderNote( orderId,  noteId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.DeleteOrderNoteAsync(System.String,System.String)">
            <summary>
            Deletes the specified order note.
            </summary>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              await ordernote.DeleteOrderNoteAsync( orderId,  noteId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.OrderValidationResultResource">
            <summary>
            Manage the results of order validation.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.OrderValidationResultResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderValidationResultResource.GetValidationResults(System.String)">
            <summary>
            Retrieves a list of the validation results associated with the order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult"/>}
            </returns>
            <example>
            <code>
              var ordervalidationresult = new OrderValidationResult();
              var orderValidationResult = ordervalidationresult.GetValidationResults( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderValidationResultResource.GetValidationResultsAsync(System.String)">
            <summary>
            Retrieves a list of the validation results associated with the order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult"/>}
            </returns>
            <example>
            <code>
              var ordervalidationresult = new OrderValidationResult();
              var orderValidationResult = await ordervalidationresult.GetValidationResultsAsync( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderValidationResultResource.AddValidationResult(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult,System.String,System.String)">
            <summary>
            Add a new order validation result to a submitted order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="validationResult">Properties of the resulting order validation performed by an order validation capability.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult"/>
            </returns>
            <example>
            <code>
              var ordervalidationresult = new OrderValidationResult();
              var orderValidationResult = ordervalidationresult.AddValidationResult( validationResult,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderValidationResultResource.AddValidationResultAsync(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult,System.String,System.String)">
            <summary>
            Add a new order validation result to a submitted order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="validationResult">Properties of the resulting order validation performed by an order validation capability.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult"/>
            </returns>
            <example>
            <code>
              var ordervalidationresult = new OrderValidationResult();
              var orderValidationResult = await ordervalidationresult.AddValidationResultAsync( validationResult,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.PackageResource">
            <summary>
            Use the Packages subresource to manage the physical packages to ship for an order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.PackageResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.GetAvailablePackageFulfillmentActions(System.String,System.String)">
            <summary>
            Retrieves a list of the actions available to perform for a package associated with order fulfillment.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var package = new Package();
              var string = package.GetAvailablePackageFulfillmentActions( orderId,  packageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.GetAvailablePackageFulfillmentActionsAsync(System.String,System.String)">
            <summary>
            Retrieves a list of the actions available to perform for a package associated with order fulfillment.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var package = new Package();
              var string = await package.GetAvailablePackageFulfillmentActionsAsync( orderId,  packageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.GetPackageLabel(System.String,System.String)">
            <summary>
            Retrieves the package label image supplied by the carrier.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
            <see cref="T:System.IO.Stream"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var stream = package.GetPackageLabel( orderId,  packageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.GetPackageLabelAsync(System.String,System.String)">
            <summary>
            Retrieves the package label image supplied by the carrier.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
            <see cref="T:System.IO.Stream"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var stream = await package.GetPackageLabelAsync( orderId,  packageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.GetPackage(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.GetPackage( orderId,  packageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.GetPackageAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = await package.GetPackageAsync( orderId,  packageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.CreatePackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String)">
            <summary>
            Creates a new physical package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="package">Properties of a physical package shipped for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.CreatePackage( pkg,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.CreatePackageAsync(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String)">
            <summary>
            Creates a new physical package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="package">Properties of a physical package shipped for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = await package.CreatePackageAsync( pkg,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.UpdatePackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of a physical package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="package">Properties of a physical package shipped for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.UpdatePackage( pkg,  orderId,  packageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.UpdatePackageAsync(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of a physical package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="package">Properties of a physical package shipped for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = await package.UpdatePackageAsync( pkg,  orderId,  packageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.DeletePackage(System.String,System.String)">
            <summary>
            Removes a physical package of items from the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var package = new Package();
              package.DeletePackage( orderId,  packageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.DeletePackageAsync(System.String,System.String)">
            <summary>
            Removes a physical package of items from the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var package = new Package();
              await package.DeletePackageAsync( orderId,  packageId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.PaymentResource">
            <summary>
            Use the Payments subresource to manage payment transactions for orders. Each transaction performed for an order represents an individual payment. For example, if an order totals $75.00 but the shopper has a $50.00 gift certificate, both the gift certificate transaction and the credit card transaction for the remaining $25.00 are recorded as payments for the order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.PaymentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.GetPayments(System.String,System.String)">
            <summary>
            Retrieves information about all payment transactions submitted for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var paymentCollection = payment.GetPayments( orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.GetPaymentsAsync(System.String,System.String)">
            <summary>
            Retrieves information about all payment transactions submitted for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var paymentCollection = await payment.GetPaymentsAsync( orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.GetAvailablePaymentActions(System.String,System.String)">
            <summary>
            Retrieves the list of all available payment actions dependent on the order payment status by specifying the order ID.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var string = payment.GetAvailablePaymentActions( orderId,  paymentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.GetAvailablePaymentActionsAsync(System.String,System.String)">
            <summary>
            Retrieves the list of all available payment actions dependent on the order payment status by specifying the order ID.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var string = await payment.GetAvailablePaymentActionsAsync( orderId,  paymentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.GetPayment(System.String,System.String,System.String)">
            <summary>
            Retrieves information about a specific payment transaction submitted for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var payment = payment.GetPayment( orderId,  paymentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.GetPaymentAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves information about a specific payment transaction submitted for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var payment = await payment.GetPaymentAsync( orderId,  paymentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.PerformPaymentAction(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String,System.String)">
            <summary>
            Performs the specified action for an individual order payment transaction.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="action">Properties of the payment action performed for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var order = payment.PerformPaymentAction( action,  orderId,  paymentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.PerformPaymentActionAsync(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String,System.String)">
            <summary>
            Performs the specified action for an individual order payment transaction.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="action">Properties of the payment action performed for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var order = await payment.PerformPaymentActionAsync( action,  orderId,  paymentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.CreatePaymentAction(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String)">
            <summary>
            Creates a new payment transaction for the specified order and performs the specified action.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="action">Properties of the payment action performed for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var order = payment.CreatePaymentAction( action,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.CreatePaymentActionAsync(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String)">
            <summary>
            Creates a new payment transaction for the specified order and performs the specified action.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="action">Properties of the payment action performed for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var order = await payment.CreatePaymentActionAsync( action,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.PickupResource">
            <summary>
            Use the Pickups resource to organize items submitted in an order into pickups that enable the shopper to fulfill the order items using the in-store pickup method.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.PickupResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PickupResource.GetAvailablePickupFulfillmentActions(System.String,System.String)">
            <summary>
            Retrieves a list of the actions available to perform for the pickup specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var pickup = new Pickup();
              var string = pickup.GetAvailablePickupFulfillmentActions( orderId,  pickupId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PickupResource.GetAvailablePickupFulfillmentActionsAsync(System.String,System.String)">
            <summary>
            Retrieves a list of the actions available to perform for the pickup specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var pickup = new Pickup();
              var string = await pickup.GetAvailablePickupFulfillmentActionsAsync( orderId,  pickupId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PickupResource.GetPickup(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the in-store pickup specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>
            </returns>
            <example>
            <code>
              var pickup = new Pickup();
              var pickup = pickup.GetPickup( orderId,  pickupId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PickupResource.GetPickupAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the in-store pickup specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>
            </returns>
            <example>
            <code>
              var pickup = new Pickup();
              var pickup = await pickup.GetPickupAsync( orderId,  pickupId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PickupResource.CreatePickup(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup,System.String,System.String)">
            <summary>
            Create a new pickup for the order specified in the request for in-store fufillment.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="pickup">Properties of an in-store pickup defined to fulfill items in an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>
            </returns>
            <example>
            <code>
              var pickup = new Pickup();
              var pickup = pickup.CreatePickup( pickup,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PickupResource.CreatePickupAsync(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup,System.String,System.String)">
            <summary>
            Create a new pickup for the order specified in the request for in-store fufillment.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="pickup">Properties of an in-store pickup defined to fulfill items in an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>
            </returns>
            <example>
            <code>
              var pickup = new Pickup();
              var pickup = await pickup.CreatePickupAsync( pickup,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PickupResource.UpdatePickup(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup,System.String,System.String,System.String)">
            <summary>
            Updates one or more details of a defined in-store pickup.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="pickup">Properties of an in-store pickup defined to fulfill items in an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>
            </returns>
            <example>
            <code>
              var pickup = new Pickup();
              var pickup = pickup.UpdatePickup( pickup,  orderId,  pickupId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PickupResource.UpdatePickupAsync(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup,System.String,System.String,System.String)">
            <summary>
            Updates one or more details of a defined in-store pickup.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="pickup">Properties of an in-store pickup defined to fulfill items in an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>
            </returns>
            <example>
            <code>
              var pickup = new Pickup();
              var pickup = await pickup.UpdatePickupAsync( pickup,  orderId,  pickupId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PickupResource.DeletePickup(System.String,System.String)">
            <summary>
            Removes a pickup previously defined for order item in-store pickup fulfillment.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var pickup = new Pickup();
              pickup.DeletePickup( orderId,  pickupId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PickupResource.DeletePickupAsync(System.String,System.String)">
            <summary>
            Removes a pickup previously defined for order item in-store pickup fulfillment.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var pickup = new Pickup();
              await pickup.DeletePickupAsync( orderId,  pickupId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.RefundResource">
            <summary>
            commerce/orders/orderrefunds related resources. DOCUMENT_HERE 
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.RefundResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.RefundResource.CreateRefund(Mozu.Api.Contracts.CommerceRuntime.Refunds.Refund,System.String,System.String)">
            <summary>
            orders-orderrefunds Post CreateRefund description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="refund">Mozu.CommerceRuntime.Contracts.Refunds.Refund ApiType DOCUMENT_HERE </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Refunds.Refund"/>
            </returns>
            <example>
            <code>
              var refund = new Refund();
              var refund = refund.CreateRefund( refund,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.RefundResource.CreateRefundAsync(Mozu.Api.Contracts.CommerceRuntime.Refunds.Refund,System.String,System.String)">
            <summary>
            orders-orderrefunds Post CreateRefund description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="refund">Mozu.CommerceRuntime.Contracts.Refunds.Refund ApiType DOCUMENT_HERE </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Refunds.Refund"/>
            </returns>
            <example>
            <code>
              var refund = new Refund();
              var refund = await refund.CreateRefundAsync( refund,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.RefundResource.ResendRefundEmail(System.String,System.String)">
            <summary>
            orders-orderrefunds Put ResendRefundEmail description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="refundId"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var refund = new Refund();
              refund.ResendRefundEmail( orderId,  refundId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.RefundResource.ResendRefundEmailAsync(System.String,System.String)">
            <summary>
            orders-orderrefunds Put ResendRefundEmail description DOCUMENT_HERE 
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="refundId"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var refund = new Refund();
              await refund.ResendRefundEmailAsync( orderId,  refundId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.ShipmentResource">
            <summary>
            Use the shipments resource to manage shipments of collections of packages for an order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.ShipmentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.GetShipment(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the order shipment specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment"/>
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var shipment = shipment.GetShipment( orderId,  shipmentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.GetShipmentAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the order shipment specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment"/>
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var shipment = await shipment.GetShipmentAsync( orderId,  shipmentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.GetAvailableShipmentMethods(System.String,System.Nullable{System.Boolean})">
            <summary>
            Retrieves the available shipping methods applicable to the order. Typically used to display available shipping method options on the checkout page.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate"/>}
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var shippingRate = shipment.GetAvailableShipmentMethods( orderId,  draft);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.GetAvailableShipmentMethodsAsync(System.String,System.Nullable{System.Boolean})">
            <summary>
            Retrieves the available shipping methods applicable to the order. Typically used to display available shipping method options on the checkout page.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate"/>}
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var shippingRate = await shipment.GetAvailableShipmentMethodsAsync( orderId,  draft);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.CreatePackageShipments(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Creates a shipment from one or more package associated with an order and assign a label and tracking number to an order shipment.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageIds">List of unique identifiers for each package associated with this shipment. Not all packages must belong to the same shipment.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var package = shipment.CreatePackageShipments( packageIds,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.CreatePackageShipmentsAsync(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Creates a shipment from one or more package associated with an order and assign a label and tracking number to an order shipment.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageIds">List of unique identifiers for each package associated with this shipment. Not all packages must belong to the same shipment.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var package = await shipment.CreatePackageShipmentsAsync( packageIds,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.DeleteShipment(System.String,System.String)">
            <summary>
            Deletes the shipment specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              shipment.DeleteShipment( orderId,  shipmentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.DeleteShipmentAsync(System.String,System.String)">
            <summary>
            Deletes the shipment specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              await shipment.DeleteShipmentAsync( orderId,  shipmentId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Payments.PublicCardResource">
            <summary>
            commerce/payments/cards related resources. DOCUMENT_HERE 
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Payments.PublicCardResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Payments.PublicCardResource.Create(Mozu.Api.Contracts.PaymentService.PublicCard)">
            <summary>
            payments-cards Post Create description DOCUMENT_HERE 
            </summary>
            <param name="request">Mozu.PaymentService.Contracts.PublicCard ApiType DOCUMENT_HERE </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.PaymentService.Response.SyncResponse"/>
            </returns>
            <example>
            <code>
              var publiccard = new PublicCard();
              var syncResponse = publiccard.Create( request);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Payments.PublicCardResource.CreateAsync(Mozu.Api.Contracts.PaymentService.PublicCard)">
            <summary>
            payments-cards Post Create description DOCUMENT_HERE 
            </summary>
            <param name="request">Mozu.PaymentService.Contracts.PublicCard ApiType DOCUMENT_HERE </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.PaymentService.Response.SyncResponse"/>
            </returns>
            <example>
            <code>
              var publiccard = new PublicCard();
              var syncResponse = await publiccard.CreateAsync( request);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Payments.PublicCardResource.Update(Mozu.Api.Contracts.PaymentService.PublicCard,System.String)">
            <summary>
            payments-cards Put Update description DOCUMENT_HERE 
            </summary>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <param name="request">Mozu.PaymentService.Contracts.PublicCard ApiType DOCUMENT_HERE </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.PaymentService.Response.SyncResponse"/>
            </returns>
            <example>
            <code>
              var publiccard = new PublicCard();
              var syncResponse = publiccard.Update( request,  cardId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Payments.PublicCardResource.UpdateAsync(Mozu.Api.Contracts.PaymentService.PublicCard,System.String)">
            <summary>
            payments-cards Put Update description DOCUMENT_HERE 
            </summary>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <param name="request">Mozu.PaymentService.Contracts.PublicCard ApiType DOCUMENT_HERE </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.PaymentService.Response.SyncResponse"/>
            </returns>
            <example>
            <code>
              var publiccard = new PublicCard();
              var syncResponse = await publiccard.UpdateAsync( request,  cardId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Payments.PublicCardResource.Delete(System.String)">
            <summary>
            payments-cards Delete Delete description DOCUMENT_HERE 
            </summary>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var publiccard = new PublicCard();
              publiccard.Delete( cardId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Payments.PublicCardResource.DeleteAsync(System.String)">
            <summary>
            payments-cards Delete Delete description DOCUMENT_HERE 
            </summary>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var publiccard = new PublicCard();
              await publiccard.DeleteAsync( cardId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.ReturnResource">
            <summary>
            Use the Returns resource to manage returned items that were previously fufilled. Returns can include any number of items associated with an original Mozu order. Each return must either be associated with an original order or a product definition to represent each returned item.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.ReturnResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetReturns(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of all returns according to any filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var returnCollection = return.GetReturns( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetReturnsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of all returns according to any filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var returnCollection = await return.GetReturnsAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetAvailableReturnActions(System.String)">
            <summary>
            Retrieves a list of the actions available to perform for the specified return based on its current state.
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var return = new Return();
              var string = return.GetAvailableReturnActions( returnId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetAvailableReturnActionsAsync(System.String)">
            <summary>
            Retrieves a list of the actions available to perform for the specified return based on its current state.
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var return = new Return();
              var string = await return.GetAvailableReturnActionsAsync( returnId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetReturnItem(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a single return item.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="returnItemId">Unique identifier of the return item whose details you want to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var returnItem = return.GetReturnItem( returnId,  returnItemId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetReturnItemAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a single return item.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="returnItemId">Unique identifier of the return item whose details you want to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var returnItem = await return.GetReturnItemAsync( returnId,  returnItemId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetReturnItems(System.String,System.String)">
            <summary>
            Retrieves the details of all return items in an order.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItemCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var returnItemCollection = return.GetReturnItems( returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetReturnItemsAsync(System.String,System.String)">
            <summary>
            Retrieves the details of all return items in an order.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItemCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var returnItemCollection = await return.GetReturnItemsAsync( returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetAvailablePaymentActionsForReturn(System.String,System.String)">
            <summary>
            Retrieves a list of the payment actions available to perform for the specified return when a return results in a refund to the customer.
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var return = new Return();
              var string = return.GetAvailablePaymentActionsForReturn( returnId,  paymentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetAvailablePaymentActionsForReturnAsync(System.String,System.String)">
            <summary>
            Retrieves a list of the payment actions available to perform for the specified return when a return results in a refund to the customer.
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var return = new Return();
              var string = await return.GetAvailablePaymentActionsForReturnAsync( returnId,  paymentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetPayment(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a payment submitted as part of a refund associated with a customer return.
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var payment = return.GetPayment( returnId,  paymentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetPaymentAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a payment submitted as part of a refund associated with a customer return.
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var payment = await return.GetPaymentAsync( returnId,  paymentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetPayments(System.String,System.String)">
            <summary>
            Retrieves a list of all payments submitted as part of a refund associated with a customer return.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var paymentCollection = return.GetPayments( returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetPaymentsAsync(System.String,System.String)">
            <summary>
            Retrieves a list of all payments submitted as part of a refund associated with a customer return.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var paymentCollection = await return.GetPaymentsAsync( returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetReturn(System.String,System.String)">
            <summary>
            Retrieves a list of properties for the specified return.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.GetReturn( returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetReturnAsync(System.String,System.String)">
            <summary>
            Retrieves a list of properties for the specified return.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = await return.GetReturnAsync( returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.CreateReturn(Mozu.Api.Contracts.CommerceRuntime.Returns.Return,System.String)">
            <summary>
            Creates a return for previously fulfilled items. Each return must either be associated with an original order or a product definition to represent each returned item.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="ret">Properties of a return of one or more previously fulfilled items.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.CreateReturn( ret,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.CreateReturnAsync(Mozu.Api.Contracts.CommerceRuntime.Returns.Return,System.String)">
            <summary>
            Creates a return for previously fulfilled items. Each return must either be associated with an original order or a product definition to represent each returned item.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="ret">Properties of a return of one or more previously fulfilled items.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = await return.CreateReturnAsync( ret,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.CreateReturnItem(Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem,System.String,System.String)">
            <summary>
            Adds a return item to the return.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="returnItem">Properties of a previously fulfilled item associated with a return.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.CreateReturnItem( returnItem,  returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.CreateReturnItemAsync(Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem,System.String,System.String)">
            <summary>
            Adds a return item to the return.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="returnItem">Properties of a previously fulfilled item associated with a return.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = await return.CreateReturnItemAsync( returnItem,  returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.PerformPaymentActionForReturn(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String,System.String)">
            <summary>
            Updates a refund payment associated with a customer return by performing the specified action.
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="action">Properties of the payment action performed for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.PerformPaymentActionForReturn( action,  returnId,  paymentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.PerformPaymentActionForReturnAsync(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String,System.String)">
            <summary>
            Updates a refund payment associated with a customer return by performing the specified action.
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="action">Properties of the payment action performed for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = await return.PerformPaymentActionForReturnAsync( action,  returnId,  paymentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.CreatePaymentActionForReturn(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String)">
            <summary>
            Creates a new payment for a return that results in a refund to the customer.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="action">Properties of the payment action performed for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.CreatePaymentActionForReturn( action,  returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.CreatePaymentActionForReturnAsync(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String)">
            <summary>
            Creates a new payment for a return that results in a refund to the customer.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="action">Properties of the payment action performed for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = await return.CreatePaymentActionForReturnAsync( action,  returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.PerformReturnActions(Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction,System.String)">
            <summary>
            Updates the return by performing the action specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="action">Properties of an action a user can perform for a return.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var returnCollection = return.PerformReturnActions( action,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.PerformReturnActionsAsync(Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction,System.String)">
            <summary>
            Updates the return by performing the action specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="action">Properties of an action a user can perform for a return.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var returnCollection = await return.PerformReturnActionsAsync( action,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.UpdateReturn(Mozu.Api.Contracts.CommerceRuntime.Returns.Return,System.String,System.String)">
            <summary>
            Updates one or more properties of a return for items previously shipped in a completed order.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="ret">Properties of a return of one or more previously fulfilled items.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.UpdateReturn( ret,  returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.UpdateReturnAsync(Mozu.Api.Contracts.CommerceRuntime.Returns.Return,System.String,System.String)">
            <summary>
            Updates one or more properties of a return for items previously shipped in a completed order.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="ret">Properties of a return of one or more previously fulfilled items.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = await return.UpdateReturnAsync( ret,  returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.ResendReturnEmail(Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction)">
            <summary>
            commerce-returns Put ResendReturnEmail description DOCUMENT_HERE 
            </summary>
            <param name="action">Properties of an action a user can perform for a return.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var return = new Return();
              return.ResendReturnEmail( action);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.ResendReturnEmailAsync(Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction)">
            <summary>
            commerce-returns Put ResendReturnEmail description DOCUMENT_HERE 
            </summary>
            <param name="action">Properties of an action a user can perform for a return.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var return = new Return();
              await return.ResendReturnEmailAsync( action);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.DeleteOrderItem(System.String,System.String)">
            <summary>
            Removes a particular order item from the order of the current shopper.
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="returnItemId">Unique identifier of the return item whose details you want to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.DeleteOrderItem( returnId,  returnItemId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.DeleteOrderItemAsync(System.String,System.String)">
            <summary>
            Removes a particular order item from the order of the current shopper.
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="returnItemId">Unique identifier of the return item whose details you want to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = await return.DeleteOrderItemAsync( returnId,  returnItemId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.DeleteReturn(System.String)">
            <summary>
            Deletes the return specified in the request.
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var return = new Return();
              return.DeleteReturn( returnId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.DeleteReturnAsync(System.String)">
            <summary>
            Deletes the return specified in the request.
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var return = new Return();
              await return.DeleteReturnAsync( returnId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Returns.PackageResource">
            <summary>
            Use the Return Packages subresource to manage physical packages used to ship return replacement items.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Returns.PackageResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.GetPackageLabel(System.String,System.String)">
            <summary>
            Retrieves the package label image supplied by the carrier for a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            <see cref="T:System.IO.Stream"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var stream = package.GetPackageLabel( returnId,  packageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.GetPackageLabelAsync(System.String,System.String)">
            <summary>
            Retrieves the package label image supplied by the carrier for a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            <see cref="T:System.IO.Stream"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var stream = await package.GetPackageLabelAsync( returnId,  packageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.GetPackage(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a package of return replacement items.
            </summary>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.GetPackage( returnId,  packageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.GetPackageAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a package of return replacement items.
            </summary>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = await package.GetPackageAsync( returnId,  packageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.CreatePackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String)">
            <summary>
            Creates a new physical package of return replacement items.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="package">Properties of a physical package shipped for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.CreatePackage( pkg,  returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.CreatePackageAsync(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String)">
            <summary>
            Creates a new physical package of return replacement items.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="package">Properties of a physical package shipped for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = await package.CreatePackageAsync( pkg,  returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.UpdatePackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of a package associated with a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="package">Properties of a physical package shipped for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.UpdatePackage( pkg,  returnId,  packageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.UpdatePackageAsync(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of a package associated with a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="package">Properties of a physical package shipped for an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = await package.UpdatePackageAsync( pkg,  returnId,  packageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.DeletePackage(System.String,System.String)">
            <summary>
            Deletes a package associated with a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var package = new Package();
              package.DeletePackage( returnId,  packageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.DeletePackageAsync(System.String,System.String)">
            <summary>
            Deletes a package associated with a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var package = new Package();
              await package.DeletePackageAsync( returnId,  packageId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Returns.ShipmentResource">
            <summary>
            Use the Return Shipments subresource to manage shipments for a return replacement.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Returns.ShipmentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.ShipmentResource.GetShipment(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the specified return replacement shipment.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment"/>
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var shipment = shipment.GetShipment( returnId,  shipmentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.ShipmentResource.GetShipmentAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the specified return replacement shipment.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment"/>
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var shipment = await shipment.GetShipmentAsync( returnId,  shipmentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.ShipmentResource.CreatePackageShipments(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Creates a shipment from one or more packages associated with a return replacement.
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="packageIds">List of unique identifiers for each package associated with this shipment. Not all packages must belong to the same shipment.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var package = shipment.CreatePackageShipments( packageIds,  returnId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.ShipmentResource.CreatePackageShipmentsAsync(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Creates a shipment from one or more packages associated with a return replacement.
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="packageIds">List of unique identifiers for each package associated with this shipment. Not all packages must belong to the same shipment.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var package = await shipment.CreatePackageShipmentsAsync( packageIds,  returnId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.ShipmentResource.DeleteShipment(System.String,System.String)">
            <summary>
            Deletes a shipment for a return replacement.
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              shipment.DeleteShipment( returnId,  shipmentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.ShipmentResource.DeleteShipmentAsync(System.String,System.String)">
            <summary>
            Deletes a shipment for a return replacement.
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              await shipment.DeleteShipmentAsync( returnId,  shipmentId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.ApplicationResource">
            <summary>
            Use the Applications resource to update site-specific settings for installed applications.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.ApplicationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.ApplicationResource.ThirdPartyGetApplication(System.String)">
            <summary>
            Retrieve the settings of a third-party application.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Application.Application"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var application = application.ThirdPartyGetApplication( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.ApplicationResource.ThirdPartyGetApplicationAsync(System.String)">
            <summary>
            Retrieve the settings of a third-party application.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Application.Application"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var application = await application.ThirdPartyGetApplicationAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.ApplicationResource.ThirdPartyUpdateApplication(Mozu.Api.Contracts.SiteSettings.Application.Application,System.String)">
            <summary>
            Initializes an application with the necessary configured settings.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="application">Properties of an application installed in a tenant.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Application.Application"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var application = application.ThirdPartyUpdateApplication( application,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.ApplicationResource.ThirdPartyUpdateApplicationAsync(Mozu.Api.Contracts.SiteSettings.Application.Application,System.String)">
            <summary>
            Initializes an application with the necessary configured settings.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="application">Properties of an application installed in a tenant.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Application.Application"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var application = await application.ThirdPartyUpdateApplicationAsync( application,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.Checkout.CustomerCheckoutSettingsResource">
            <summary>
            Use the Customer Checkout Settings resource to define login settings that apply when shoppers proceed to checkout.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.Checkout.CustomerCheckoutSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.CustomerCheckoutSettingsResource.GetCustomerCheckoutSettings(System.String)">
            <summary>
            Retrieves all checkout settings defined for the site: Payment settings, such as the payment gateway ID and credentials, supported credit cards, and more; Customer Checkout settings, such as whether login is required, and any custom attributes; and Order Processing settings, such as when payment is authorized and captured, and any custom attributes.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings"/>
            </returns>
            <example>
            <code>
              var customercheckoutsettings = new CustomerCheckoutSettings();
              var customerCheckoutSettings = customercheckoutsettings.GetCustomerCheckoutSettings( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.CustomerCheckoutSettingsResource.GetCustomerCheckoutSettingsAsync(System.String)">
            <summary>
            Retrieves all checkout settings defined for the site: Payment settings, such as the payment gateway ID and credentials, supported credit cards, and more; Customer Checkout settings, such as whether login is required, and any custom attributes; and Order Processing settings, such as when payment is authorized and captured, and any custom attributes.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings"/>
            </returns>
            <example>
            <code>
              var customercheckoutsettings = new CustomerCheckoutSettings();
              var customerCheckoutSettings = await customercheckoutsettings.GetCustomerCheckoutSettingsAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.CustomerCheckoutSettingsResource.UpdateCustomerCheckoutSettings(Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings,System.String)">
            <summary>
            Modifies existing site checkout settings. Modify Payment, Customer Checkout, and Order Processing settings in one PUT.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="customerCheckoutSettings">The properties of the customer checkout settings such as whether shoppers must be logged in.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings"/>
            </returns>
            <example>
            <code>
              var customercheckoutsettings = new CustomerCheckoutSettings();
              var customerCheckoutSettings = customercheckoutsettings.UpdateCustomerCheckoutSettings( customerCheckoutSettings,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.CustomerCheckoutSettingsResource.UpdateCustomerCheckoutSettingsAsync(Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings,System.String)">
            <summary>
            Modifies existing site checkout settings. Modify Payment, Customer Checkout, and Order Processing settings in one PUT.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="customerCheckoutSettings">The properties of the customer checkout settings such as whether shoppers must be logged in.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings"/>
            </returns>
            <example>
            <code>
              var customercheckoutsettings = new CustomerCheckoutSettings();
              var customerCheckoutSettings = await customercheckoutsettings.UpdateCustomerCheckoutSettingsAsync( customerCheckoutSettings,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource">
            <summary>
            Use the Payment Settings resource to specify settings when creating payments for order checkout on the site.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource.GetThirdPartyPaymentWorkflows">
            <summary>
            Retrieves the details of the third-party payment service workflows configured for the site.
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.ExternalPaymentWorkflowDefinition"/>}
            </returns>
            <example>
            <code>
              var paymentsettings = new PaymentSettings();
              var externalPaymentWorkflowDefinition = paymentsettings.GetThirdPartyPaymentWorkflows();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource.GetThirdPartyPaymentWorkflowsAsync">
            <summary>
            Retrieves the details of the third-party payment service workflows configured for the site.
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.ExternalPaymentWorkflowDefinition"/>}
            </returns>
            <example>
            <code>
              var paymentsettings = new PaymentSettings();
              var externalPaymentWorkflowDefinition = await paymentsettings.GetThirdPartyPaymentWorkflowsAsync();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.CheckoutSettingsResource">
            <summary>
            Use the Checkout Settings resource to specify the site-wide settings that define checkout and order processing behavior. This resource includes subresources for payment settings, customer checkout settings, and order processing settings.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.CheckoutSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.CheckoutSettingsResource.GetCheckoutSettings(System.String)">
            <summary>
            Retrieves all checkout settings defined for the site including payment settings (payment gateway ID and credentials), shopper checkout settings (login requirement or guest mode and custom attributes), and order processing settings (when payment is authorized and captured plus any custom attributes).
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings"/>
            </returns>
            <example>
            <code>
              var checkoutsettings = new CheckoutSettings();
              var checkoutSettings = checkoutsettings.GetCheckoutSettings( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.CheckoutSettingsResource.GetCheckoutSettingsAsync(System.String)">
            <summary>
            Retrieves all checkout settings defined for the site including payment settings (payment gateway ID and credentials), shopper checkout settings (login requirement or guest mode and custom attributes), and order processing settings (when payment is authorized and captured plus any custom attributes).
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings"/>
            </returns>
            <example>
            <code>
              var checkoutsettings = new CheckoutSettings();
              var checkoutSettings = await checkoutsettings.GetCheckoutSettingsAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource">
            <summary>
            Use the taxable territories subresource to manage the regional territories for this site that are subejct to sales tax.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource.GetTaxableTerritories">
            <summary>
            Retrieves a list of the taxable territories configured for the site.
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}
            </returns>
            <example>
            <code>
              var taxableterritory = new TaxableTerritory();
              var taxableTerritory = taxableterritory.GetTaxableTerritories();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource.GetTaxableTerritoriesAsync">
            <summary>
            Retrieves a list of the taxable territories configured for the site.
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}
            </returns>
            <example>
            <code>
              var taxableterritory = new TaxableTerritory();
              var taxableTerritory = await taxableterritory.GetTaxableTerritoriesAsync();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource.AddTaxableTerritory(Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory,System.String)">
            <summary>
            Creates a new territory for which to calculate sales tax.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="taxableTerritory">Properties of the territory which is subject to sales tax.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>
            </returns>
            <example>
            <code>
              var taxableterritory = new TaxableTerritory();
              var taxableTerritory = taxableterritory.AddTaxableTerritory( taxableTerritory,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource.AddTaxableTerritoryAsync(Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory,System.String)">
            <summary>
            Creates a new territory for which to calculate sales tax.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="taxableTerritory">Properties of the territory which is subject to sales tax.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>
            </returns>
            <example>
            <code>
              var taxableterritory = new TaxableTerritory();
              var taxableTerritory = await taxableterritory.AddTaxableTerritoryAsync( taxableTerritory,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource.UpdateTaxableTerritories(System.Collections.Generic.List{Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory})">
            <summary>
            Updates one or more taxable territories configured for a site.
            </summary>
            <param name="taxableterritories">Properties of the territory which is subject to sales tax.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}
            </returns>
            <example>
            <code>
              var taxableterritory = new TaxableTerritory();
              var taxableTerritory = taxableterritory.UpdateTaxableTerritories( taxableterritories);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource.UpdateTaxableTerritoriesAsync(System.Collections.Generic.List{Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory})">
            <summary>
            Updates one or more taxable territories configured for a site.
            </summary>
            <param name="taxableterritories">Properties of the territory which is subject to sales tax.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}
            </returns>
            <example>
            <code>
              var taxableterritory = new TaxableTerritory();
              var taxableTerritory = await taxableterritory.UpdateTaxableTerritoriesAsync( taxableterritories);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.GeneralSettingsResource">
            <summary>
            Define global site settings such as the site name, shipping and email addresses, and logo images. Block undesirable IP addresses using this resource.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.GeneralSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.GeneralSettingsResource.GetGeneralSettings(System.String)">
            <summary>
            Retrieve a site's general global settings.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings"/>
            </returns>
            <example>
            <code>
              var generalsettings = new GeneralSettings();
              var generalSettings = generalsettings.GetGeneralSettings( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.GeneralSettingsResource.GetGeneralSettingsAsync(System.String)">
            <summary>
            Retrieve a site's general global settings.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings"/>
            </returns>
            <example>
            <code>
              var generalsettings = new GeneralSettings();
              var generalSettings = await generalsettings.GetGeneralSettingsAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.GeneralSettingsResource.UpdateGeneralSettings(Mozu.Api.Contracts.SiteSettings.General.GeneralSettings,System.String)">
            <summary>
            Updates a site's general global settings.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="generalSettings">General settings used on the storefront site.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings"/>
            </returns>
            <example>
            <code>
              var generalsettings = new GeneralSettings();
              var generalSettings = generalsettings.UpdateGeneralSettings( generalSettings,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.GeneralSettingsResource.UpdateGeneralSettingsAsync(Mozu.Api.Contracts.SiteSettings.General.GeneralSettings,System.String)">
            <summary>
            Updates a site's general global settings.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="generalSettings">General settings used on the storefront site.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings"/>
            </returns>
            <example>
            <code>
              var generalsettings = new GeneralSettings();
              var generalSettings = await generalsettings.UpdateGeneralSettingsAsync( generalSettings,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.LocationUsageResource">
            <summary>
            Use the Location Usages resource to define the locations and location types that interact with the specified site. The system creates three default location usage types for each site after provisioning a new tenant - one for direct ship (DS), one for in-store pickup (SP), and one for store finder (storeFinder). Each site can only use a single location for the direct ship location usage type, and the location must support the direct ship fulfillment type (DS). For the in-store pickup location usage type, each site can use one or more location types. The location service identifies all locations of the specified type that support the in-store pickup fulfillment type (SP). For the store finder location usage type, each site can use one or more location types. The location service identifies all locations of the type. Locations configured for the store finder type do not typically maintain inventory. You cannot create additional location usage types at this time.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.LocationUsageResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.LocationUsageResource.GetLocationUsages(System.String)">
            <summary>
            Retrieves the configured site location usages for the location usage code specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationUsageCollection"/>
            </returns>
            <example>
            <code>
              var locationusage = new LocationUsage();
              var locationUsageCollection = locationusage.GetLocationUsages( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.LocationUsageResource.GetLocationUsagesAsync(System.String)">
            <summary>
            Retrieves the configured site location usages for the location usage code specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationUsageCollection"/>
            </returns>
            <example>
            <code>
              var locationusage = new LocationUsage();
              var locationUsageCollection = await locationusage.GetLocationUsagesAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.LocationUsageResource.GetLocationUsage(System.String,System.String)">
            <summary>
            Retrieves the location usages for the site specified in the request header.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationUsage"/>
            </returns>
            <example>
            <code>
              var locationusage = new LocationUsage();
              var locationUsage = locationusage.GetLocationUsage( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.LocationUsageResource.GetLocationUsageAsync(System.String,System.String)">
            <summary>
            Retrieves the location usages for the site specified in the request header.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationUsage"/>
            </returns>
            <example>
            <code>
              var locationusage = new LocationUsage();
              var locationUsage = await locationusage.GetLocationUsageAsync( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.LocationUsageResource.UpdateLocationUsage(Mozu.Api.Contracts.Location.LocationUsage,System.String,System.String)">
            <summary>
            Updates the location usage for the site based on the location usage code specified in the request.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="usage">Configuration properties of a location usage type for a specified site. The direct ship location usage type consists of a single location that represents location that supports direct ship (DS) fulfillment. The in-store pickup location usage type consists of a list of location types that represent locations that support in-store pickup (SP) fulfillment. The store finder location usage type consists of a list of location codes, location types, or both.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationUsage"/>
            </returns>
            <example>
            <code>
              var locationusage = new LocationUsage();
              var locationUsage = locationusage.UpdateLocationUsage( usage,  code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.LocationUsageResource.UpdateLocationUsageAsync(Mozu.Api.Contracts.Location.LocationUsage,System.String,System.String)">
            <summary>
            Updates the location usage for the site based on the location usage code specified in the request.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="usage">Configuration properties of a location usage type for a specified site. The direct ship location usage type consists of a single location that represents location that supports direct ship (DS) fulfillment. The in-store pickup location usage type consists of a list of location types that represent locations that support in-store pickup (SP) fulfillment. The store finder location usage type consists of a list of location codes, location types, or both.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationUsage"/>
            </returns>
            <example>
            <code>
              var locationusage = new LocationUsage();
              var locationUsage = await locationusage.UpdateLocationUsageAsync( usage,  code,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource">
            <summary>
            Use the Order Handling Fee subresource to configure any shipping and handling fees to apply to orders for this site.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource.GetOrderHandlingFee(System.String)">
            <summary>
            Retrieves the details of the order handling fee configured for the site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>
            </returns>
            <example>
            <code>
              var siteshippinghandlingfee = new SiteShippingHandlingFee();
              var siteShippingHandlingFee = siteshippinghandlingfee.GetOrderHandlingFee( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource.GetOrderHandlingFeeAsync(System.String)">
            <summary>
            Retrieves the details of the order handling fee configured for the site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>
            </returns>
            <example>
            <code>
              var siteshippinghandlingfee = new SiteShippingHandlingFee();
              var siteShippingHandlingFee = await siteshippinghandlingfee.GetOrderHandlingFeeAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource.CreateOrderHandlingFee(Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee,System.String)">
            <summary>
            Creates a new order handling fee for the site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="orderHandlingFee">Properties of the handling fee to apply to order shipments for the site.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>
            </returns>
            <example>
            <code>
              var siteshippinghandlingfee = new SiteShippingHandlingFee();
              var siteShippingHandlingFee = siteshippinghandlingfee.CreateOrderHandlingFee( orderHandlingFee,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource.CreateOrderHandlingFeeAsync(Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee,System.String)">
            <summary>
            Creates a new order handling fee for the site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="orderHandlingFee">Properties of the handling fee to apply to order shipments for the site.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>
            </returns>
            <example>
            <code>
              var siteshippinghandlingfee = new SiteShippingHandlingFee();
              var siteShippingHandlingFee = await siteshippinghandlingfee.CreateOrderHandlingFeeAsync( orderHandlingFee,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource.UpdateOrderHandlingFee(Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee,System.String)">
            <summary>
            Updates the order handling fee amount for the site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="orderHandlingFee">Properties of the handling fee to apply to order shipments for the site.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>
            </returns>
            <example>
            <code>
              var siteshippinghandlingfee = new SiteShippingHandlingFee();
              var siteShippingHandlingFee = siteshippinghandlingfee.UpdateOrderHandlingFee( orderHandlingFee,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource.UpdateOrderHandlingFeeAsync(Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee,System.String)">
            <summary>
            Updates the order handling fee amount for the site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="orderHandlingFee">Properties of the handling fee to apply to order shipments for the site.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>
            </returns>
            <example>
            <code>
              var siteshippinghandlingfee = new SiteShippingHandlingFee();
              var siteShippingHandlingFee = await siteshippinghandlingfee.UpdateOrderHandlingFeeAsync( orderHandlingFee,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.SiteShippingSettingsResource">
            <summary>
            Use the shipping subresource to manage settings for the site shipping information, such as origin address information, carrier shipping methods, shipping rate providers, and regions available for shipping.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.SiteShippingSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.SiteShippingSettingsResource.GetSiteShippingSettings(System.String)">
            <summary>
            Retrieves a list of the shipping settings configured for a site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings"/>
            </returns>
            <example>
            <code>
              var siteshippingsettings = new SiteShippingSettings();
              var siteShippingSettings = siteshippingsettings.GetSiteShippingSettings( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.SiteShippingSettingsResource.GetSiteShippingSettingsAsync(System.String)">
            <summary>
            Retrieves a list of the shipping settings configured for a site.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings"/>
            </returns>
            <example>
            <code>
              var siteshippingsettings = new SiteShippingSettings();
              var siteShippingSettings = await siteshippingsettings.GetSiteShippingSettingsAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.WishlistResource">
            <summary>
            Use the Wish Lists resource to manage the shopper wish lists of products associated with a customer account. Although customer accounts are managed at the tenant level, the system stores shopper wish lists at the site level. This enables the same customer to have wish lists for each of a merchant's sites. Use the Wish List Items resource to manage items in a wish list.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.WishlistResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.GetWishlists(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a list of shopper wish lists according to any filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection"/>
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              var wishlistCollection = wishlist.GetWishlists( startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.GetWishlistsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a list of shopper wish lists according to any filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection"/>
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              var wishlistCollection = await wishlist.GetWishlistsAsync( startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.GetWishlist(System.String,System.String)">
            <summary>
            Retrieves the details of the shopper wish list specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              var wishlist = wishlist.GetWishlist( wishlistId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.GetWishlistAsync(System.String,System.String)">
            <summary>
            Retrieves the details of the shopper wish list specified in the request.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              var wishlist = await wishlist.GetWishlistAsync( wishlistId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.GetWishlistByName(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of a wish list by supplying the wish list name.
            </summary>
            <param name="customerAccountId">The unique identifier of the customer account for which to retrieve wish lists.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistName">The name of the wish list to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              var wishlist = wishlist.GetWishlistByName( customerAccountId,  wishlistName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.GetWishlistByNameAsync(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of a wish list by supplying the wish list name.
            </summary>
            <param name="customerAccountId">The unique identifier of the customer account for which to retrieve wish lists.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistName">The name of the wish list to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              var wishlist = await wishlist.GetWishlistByNameAsync( customerAccountId,  wishlistName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.CreateWishlist(Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist,System.String)">
            <summary>
            Creates a new shopper wish list for the associated customer account. Although customer accounts are maintained at the tenant level, the system stores wish lists at the site level. Newly created wish lists do not have any items.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlist">Properties of a shopper wish list defined for a site, associated with a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              var wishlist = wishlist.CreateWishlist( wishlist,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.CreateWishlistAsync(Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist,System.String)">
            <summary>
            Creates a new shopper wish list for the associated customer account. Although customer accounts are maintained at the tenant level, the system stores wish lists at the site level. Newly created wish lists do not have any items.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlist">Properties of a shopper wish list defined for a site, associated with a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              var wishlist = await wishlist.CreateWishlistAsync( wishlist,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.UpdateWishlist(Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist,System.String,System.String)">
            <summary>
            Updates one or more properties of a shopper wish list defined for a customer account.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlist">Properties of a shopper wish list defined for a site, associated with a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              var wishlist = wishlist.UpdateWishlist( wishlist,  wishlistId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.UpdateWishlistAsync(Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist,System.String,System.String)">
            <summary>
            Updates one or more properties of a shopper wish list defined for a customer account.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlist">Properties of a shopper wish list defined for a site, associated with a customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              var wishlist = await wishlist.UpdateWishlistAsync( wishlist,  wishlistId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.DeleteWishlist(System.String)">
            <summary>
            Deletes the shopper wish list specified in the request and all items associated with it.
            </summary>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              wishlist.DeleteWishlist( wishlistId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.DeleteWishlistAsync(System.String)">
            <summary>
            Deletes the shopper wish list specified in the request and all items associated with it.
            </summary>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              await wishlist.DeleteWishlistAsync( wishlistId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource">
            <summary>
            Use the Wish List Items subresource to manage items in a shopper wish list. The same product can be defined as an item in any number of wish lists for the customer account. Use the Wish Lists resource to manage shopper wish lists.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.GetWishlistItem(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of an item in a shopper wish list.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItem = wishlistitem.GetWishlistItem( wishlistId,  wishlistItemId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.GetWishlistItemAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of an item in a shopper wish list.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItem = await wishlistitem.GetWishlistItemAsync( wishlistId,  wishlistItemId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.GetWishlistItems(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of items in a shopper wish list according to any specified filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItemCollection = wishlistitem.GetWishlistItems( wishlistId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.GetWishlistItemsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of items in a shopper wish list according to any specified filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItemCollection = await wishlistitem.GetWishlistItemsAsync( wishlistId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.GetWishlistItemsByWishlistName(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieve a list of items in a customer wish list by supplying the wish list name.
            </summary>
            <param name="customerAccountId">The unique identifier of the customer account for which to retrieve wish lists.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="wishlistName">The name of the wish list to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItemCollection = wishlistitem.GetWishlistItemsByWishlistName( customerAccountId,  wishlistName,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.GetWishlistItemsByWishlistNameAsync(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieve a list of items in a customer wish list by supplying the wish list name.
            </summary>
            <param name="customerAccountId">The unique identifier of the customer account for which to retrieve wish lists.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="wishlistName">The name of the wish list to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItemCollection = await wishlistitem.GetWishlistItemsByWishlistNameAsync( customerAccountId,  wishlistName,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.AddItemToWishlist(Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem,System.String,System.String)">
            <summary>
            Adds a product in a site's catalog as an item in a shopper wish list.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItem">Properties of an item in a shopper wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItem = wishlistitem.AddItemToWishlist( wishlistItem,  wishlistId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.AddItemToWishlistAsync(Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem,System.String,System.String)">
            <summary>
            Adds a product in a site's catalog as an item in a shopper wish list.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItem">Properties of an item in a shopper wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItem = await wishlistitem.AddItemToWishlistAsync( wishlistItem,  wishlistId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.UpdateWishlistItemQuantity(System.String,System.String,System.Int32,System.String)">
            <summary>
            Updates the quantity of an item in a shopper wish list.
            </summary>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItem = wishlistitem.UpdateWishlistItemQuantity( wishlistId,  wishlistItemId,  quantity,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.UpdateWishlistItemQuantityAsync(System.String,System.String,System.Int32,System.String)">
            <summary>
            Updates the quantity of an item in a shopper wish list.
            </summary>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItem = await wishlistitem.UpdateWishlistItemQuantityAsync( wishlistId,  wishlistItemId,  quantity,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.UpdateWishlistItem(Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem,System.String,System.String,System.String)">
            <summary>
            Updates the details of an item in a shopper wish list.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <param name="wishlistItem">Properties of an item in a shopper wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItem = wishlistitem.UpdateWishlistItem( wishlistItem,  wishlistId,  wishlistItemId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.UpdateWishlistItemAsync(Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem,System.String,System.String,System.String)">
            <summary>
            Updates the details of an item in a shopper wish list.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <param name="wishlistItem">Properties of an item in a shopper wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItem = await wishlistitem.UpdateWishlistItemAsync( wishlistItem,  wishlistId,  wishlistItemId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.RemoveAllWishlistItems(System.String)">
            <summary>
            Removes all items associated with a shopper wish list.
            </summary>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlist = wishlistitem.RemoveAllWishlistItems( wishlistId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.RemoveAllWishlistItemsAsync(System.String)">
            <summary>
            Removes all items associated with a shopper wish list.
            </summary>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlist = await wishlistitem.RemoveAllWishlistItemsAsync( wishlistId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.DeleteWishlistItem(System.String,System.String)">
            <summary>
            Removes an item from the wish list specified in the request.
            </summary>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              wishlistitem.DeleteWishlistItem( wishlistId,  wishlistItemId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.DeleteWishlistItemAsync(System.String,System.String)">
            <summary>
            Removes an item from the wish list specified in the request.
            </summary>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              await wishlistitem.DeleteWishlistItemAsync( wishlistId,  wishlistItemId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.DocumentDraftSummaryResource">
            <summary>
            Use the document publishing subresource to manage and publish document drafts in the Content service.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.DocumentDraftSummaryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentDraftSummaryResource.ListDocumentDraftSummaries(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of the documents currently in draft state, according to any defined filter and sort criteria.
            </summary>
            <param name="documentLists">List of document lists that contain documents to delete.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>
            </returns>
            <example>
            <code>
              var documentdraftsummary = new DocumentDraftSummary();
              var documentDraftSummaryPagedCollection = documentdraftsummary.ListDocumentDraftSummaries( pageSize,  startIndex,  documentLists,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentDraftSummaryResource.ListDocumentDraftSummariesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of the documents currently in draft state, according to any defined filter and sort criteria.
            </summary>
            <param name="documentLists">List of document lists that contain documents to delete.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>
            </returns>
            <example>
            <code>
              var documentdraftsummary = new DocumentDraftSummary();
              var documentDraftSummaryPagedCollection = await documentdraftsummary.ListDocumentDraftSummariesAsync( pageSize,  startIndex,  documentLists,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentDraftSummaryResource.DeleteDocumentDrafts(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Deletes the drafts of the specified documents. Published documents cannot be deleted.
            </summary>
            <param name="documentLists">List of document lists that contain documents to delete.</param>
            <param name="documentIds">Unique identifiers of the documents to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documentdraftsummary = new DocumentDraftSummary();
              documentdraftsummary.DeleteDocumentDrafts( documentIds,  documentLists);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentDraftSummaryResource.DeleteDocumentDraftsAsync(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Deletes the drafts of the specified documents. Published documents cannot be deleted.
            </summary>
            <param name="documentLists">List of document lists that contain documents to delete.</param>
            <param name="documentIds">Unique identifiers of the documents to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documentdraftsummary = new DocumentDraftSummary();
              await documentdraftsummary.DeleteDocumentDraftsAsync( documentIds,  documentLists);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentDraftSummaryResource.PublishDocuments(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Publish one or more document drafts to live content on the site.
            </summary>
            <param name="documentLists">List of document lists that contain documents to delete.</param>
            <param name="documentIds">Unique identifiers of the documents to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documentdraftsummary = new DocumentDraftSummary();
              documentdraftsummary.PublishDocuments( documentIds,  documentLists);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentDraftSummaryResource.PublishDocumentsAsync(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Publish one or more document drafts to live content on the site.
            </summary>
            <param name="documentLists">List of document lists that contain documents to delete.</param>
            <param name="documentIds">Unique identifiers of the documents to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documentdraftsummary = new DocumentDraftSummary();
              await documentdraftsummary.PublishDocumentsAsync( documentIds,  documentLists);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.DocumentListResource">
            <summary>
            Use the document lists resource to organize your site's documents into a hierarchy. Document lists can contain documents, folders, and complete hierarchies of folders, which contain documents with unique names.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.DocumentListResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.GetDocumentLists(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a collection of document lists.
            </summary>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentListCollection"/>
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              var documentListCollection = documentlist.GetDocumentLists(_dataViewMode,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.GetDocumentListsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a collection of document lists.
            </summary>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentListCollection"/>
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              var documentListCollection = await documentlist.GetDocumentListsAsync(_dataViewMode,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.GetDocumentList(System.String,System.String)">
            <summary>
            Retrieve the details of a document list by providing the list name.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              var documentList = documentlist.GetDocumentList(_dataViewMode,  documentListName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.GetDocumentListAsync(System.String,System.String)">
            <summary>
            Retrieve the details of a document list by providing the list name.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              var documentList = await documentlist.GetDocumentListAsync(_dataViewMode,  documentListName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.CreateDocumentList(Mozu.Api.Contracts.Content.DocumentList,System.String)">
            <summary>
            Creates a new documentList
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="list">The list of document types and related properties that define content used by the content management system (CMS).</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              var documentList = documentlist.CreateDocumentList(_dataViewMode,  list,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.CreateDocumentListAsync(Mozu.Api.Contracts.Content.DocumentList,System.String)">
            <summary>
            Creates a new documentList
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="list">The list of document types and related properties that define content used by the content management system (CMS).</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              var documentList = await documentlist.CreateDocumentListAsync(_dataViewMode,  list,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.UpdateDocumentList(Mozu.Api.Contracts.Content.DocumentList,System.String,System.String)">
            <summary>
            Updates a `DocumentListName`.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="list">The list of document types and related properties that define content used by the content management system (CMS).</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              var documentList = documentlist.UpdateDocumentList( list,  documentListName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.UpdateDocumentListAsync(Mozu.Api.Contracts.Content.DocumentList,System.String,System.String)">
            <summary>
            Updates a `DocumentListName`.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="list">The list of document types and related properties that define content used by the content management system (CMS).</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              var documentList = await documentlist.UpdateDocumentListAsync( list,  documentListName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.DeleteDocumentList(System.String)">
            <summary>
            Deletes the specified `DocumentListName`.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              documentlist.DeleteDocumentList( documentListName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.DeleteDocumentListAsync(System.String)">
            <summary>
            Deletes the specified `DocumentListName`.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              await documentlist.DeleteDocumentListAsync( documentListName);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.Documentlists.DocumentResource">
            <summary>
            Use this subresource to manage documents in a document list.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.Documentlists.DocumentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.GetDocumentContent(System.String,System.String)">
            <summary>
            Retrieve the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <returns>
            <see cref="T:System.IO.Stream"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var stream = document.GetDocumentContent(_dataViewMode,  documentListName,  documentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.GetDocumentContentAsync(System.String,System.String)">
            <summary>
            Retrieve the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <returns>
            <see cref="T:System.IO.Stream"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var stream = await document.GetDocumentContentAsync(_dataViewMode,  documentListName,  documentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.GetDocument(System.String,System.String,System.String)">
            <summary>
            Retrieves a document within the specified document list.
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var document = document.GetDocument(_dataViewMode,  documentListName,  documentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.GetDocumentAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves a document within the specified document list.
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var document = await document.GetDocumentAsync(_dataViewMode,  documentListName,  documentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.GetDocuments(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a collection of documents according to any filter and sort criteria.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentCollection"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var documentCollection = document.GetDocuments(_dataViewMode,  documentListName,  filter,  sortBy,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.GetDocumentsAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a collection of documents according to any filter and sort criteria.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentCollection"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var documentCollection = await document.GetDocumentsAsync(_dataViewMode,  documentListName,  filter,  sortBy,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.CreateDocument(Mozu.Api.Contracts.Content.Document,System.String,System.String)">
            <summary>
            Creates a new document in an defined document list.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="document">The document properties that define the content used by the content management system (CMS).</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var document = document.CreateDocument(_dataViewMode,  document,  documentListName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.CreateDocumentAsync(Mozu.Api.Contracts.Content.Document,System.String,System.String)">
            <summary>
            Creates a new document in an defined document list.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="document">The document properties that define the content used by the content management system (CMS).</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var document = await document.CreateDocumentAsync(_dataViewMode,  document,  documentListName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.UpdateDocumentContent(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Updates the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="stream">Data stream that delivers information. Used to input and output data.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var document = new Document();
              document.UpdateDocumentContent( stream,  documentListName,  documentId,  contentType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.UpdateDocumentContentAsync(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Updates the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="stream">Data stream that delivers information. Used to input and output data.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var document = new Document();
              await document.UpdateDocumentContentAsync( stream,  documentListName,  documentId,  contentType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.UpdateDocument(Mozu.Api.Contracts.Content.Document,System.String,System.String,System.String)">
            <summary>
            Updates a document in a document list.
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="document">The document properties that define the content used by the content management system (CMS).</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var document = document.UpdateDocument( document,  documentListName,  documentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.UpdateDocumentAsync(Mozu.Api.Contracts.Content.Document,System.String,System.String,System.String)">
            <summary>
            Updates a document in a document list.
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="document">The document properties that define the content used by the content management system (CMS).</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var document = await document.UpdateDocumentAsync( document,  documentListName,  documentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.DeleteDocument(System.String,System.String)">
            <summary>
            Deletes a specific document based on the specified document ID.
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var document = new Document();
              document.DeleteDocument( documentListName,  documentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.DeleteDocumentAsync(System.String,System.String)">
            <summary>
            Deletes a specific document based on the specified document ID.
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var document = new Document();
              await document.DeleteDocumentAsync( documentListName,  documentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.DeleteDocumentContent(System.String,System.String)">
            <summary>
            Deletes the content associated with a document, such as a product image or PDF specification, by supplying the document ID.
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var document = new Document();
              document.DeleteDocumentContent( documentListName,  documentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.DeleteDocumentContentAsync(System.String,System.String)">
            <summary>
            Deletes the content associated with a document, such as a product image or PDF specification, by supplying the document ID.
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var document = new Document();
              await document.DeleteDocumentContentAsync( documentListName,  documentId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource">
            <summary>
            Use the document tree subresource to retrieve documents and manage content within the document hierarchy.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.GetTreeDocumentContent(System.String,System.String)">
            <summary>
            Retrieve the content associated with the document, such as a product image or PDF specifications file.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="documentName">The name of the document in the site.</param>
            <returns>
            <see cref="T:System.IO.Stream"/>
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              var stream = documenttree.GetTreeDocumentContent(_dataViewMode,  documentListName,  documentName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.GetTreeDocumentContentAsync(System.String,System.String)">
            <summary>
            Retrieve the content associated with the document, such as a product image or PDF specifications file.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="documentName">The name of the document in the site.</param>
            <returns>
            <see cref="T:System.IO.Stream"/>
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              var stream = await documenttree.GetTreeDocumentContentAsync(_dataViewMode,  documentListName,  documentName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.GetTreeDocument(System.String,System.String,System.String)">
            <summary>
            Retrieves a document based on its document list and folder path in the document hierarchy.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="documentName">The name of the document in the site.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              var document = documenttree.GetTreeDocument(_dataViewMode,  documentListName,  documentName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.GetTreeDocumentAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves a document based on its document list and folder path in the document hierarchy.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="documentName">The name of the document in the site.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              var document = await documenttree.GetTreeDocumentAsync(_dataViewMode,  documentListName,  documentName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.UpdateTreeDocumentContent(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Updates the content associated with a document, such as a product image or PDF specifications file, based on the document's position in the document hierarchy.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="documentName">The name of the document in the site.</param>
            <param name="stream">Data stream that delivers information. Used to input and output data.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              documenttree.UpdateTreeDocumentContent( stream,  documentListName,  documentName,  contentType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.UpdateTreeDocumentContentAsync(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Updates the content associated with a document, such as a product image or PDF specifications file, based on the document's position in the document hierarchy.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="documentName">The name of the document in the site.</param>
            <param name="stream">Data stream that delivers information. Used to input and output data.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              await documenttree.UpdateTreeDocumentContentAsync( stream,  documentListName,  documentName,  contentType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.DeleteTreeDocumentContent(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Deletes the content associated with a document, such as a product image or PDF specifications file.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="documentName">The name of the document in the site.</param>
            <param name="stream">Data stream that delivers information. Used to input and output data.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              documenttree.DeleteTreeDocumentContent( stream,  documentListName,  documentName,  contentType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.DeleteTreeDocumentContentAsync(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Deletes the content associated with a document, such as a product image or PDF specifications file.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="documentName">The name of the document in the site.</param>
            <param name="stream">Data stream that delivers information. Used to input and output data.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              await documenttree.DeleteTreeDocumentContentAsync( stream,  documentListName,  documentName,  contentType);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.Documentlists.FacetResource">
            <summary>
            Use the facets subresource to allow a merchant to add information for product indexing and searching.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.Documentlists.FacetResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.FacetResource.GetFacets(System.String,System.String)">
            <summary>
            Retrieves the properties of facets that aid in indexing and searching.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="propertyName">The property name associated with the facets to retrieve.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Content.Facet"/>}
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = facet.GetFacets( documentListName,  propertyName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.FacetResource.GetFacetsAsync(System.String,System.String)">
            <summary>
            Retrieves the properties of facets that aid in indexing and searching.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="propertyName">The property name associated with the facets to retrieve.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Content.Facet"/>}
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = await facet.GetFacetsAsync( documentListName,  propertyName);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.Documentlists.ViewResource">
            <summary>
            Properties and content for views within a site/tenant. Views provide the schema, formatting, and associated content and entities for displaying content within a site/tenant.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.Documentlists.ViewResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.ViewResource.GetViewDocuments(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a collection of documents associated with a view.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentCollection"/>
            </returns>
            <example>
            <code>
              var view = new View();
              var documentCollection = view.GetViewDocuments( documentListName,  viewName,  filter,  sortBy,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.ViewResource.GetViewDocumentsAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a collection of documents associated with a view.
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentCollection"/>
            </returns>
            <example>
            <code>
              var view = new View();
              var documentCollection = await view.GetViewDocumentsAsync( documentListName,  viewName,  filter,  sortBy,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.DocumentListTypeResource">
            <summary>
            Use the Document List Types resource to manage the types of document lists in your site's document hierarchy. The type denotes a content type for that list of folders, sub-folders, and documents such as `web_pages`.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.DocumentListTypeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListTypeResource.CreateDocumentListType(Mozu.Api.Contracts.Content.DocumentListType,System.String)">
            <summary>
            Creates a new documentListType
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="list">Properties for the document list type. Document lists contain documents with an associated document type, such as web pages.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentListType"/>
            </returns>
            <example>
            <code>
              var documentlisttype = new DocumentListType();
              var documentListType = documentlisttype.CreateDocumentListType(_dataViewMode,  list,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListTypeResource.CreateDocumentListTypeAsync(Mozu.Api.Contracts.Content.DocumentListType,System.String)">
            <summary>
            Creates a new documentListType
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="list">Properties for the document list type. Document lists contain documents with an associated document type, such as web pages.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentListType"/>
            </returns>
            <example>
            <code>
              var documentlisttype = new DocumentListType();
              var documentListType = await documentlisttype.CreateDocumentListTypeAsync(_dataViewMode,  list,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListTypeResource.UpdateDocumentListType(Mozu.Api.Contracts.Content.DocumentListType,System.String,System.String)">
            <summary>
            Updates a DocumentListType
            </summary>
            <param name="documentListTypeFQN"></param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="list">Properties for the document list type. Document lists contain documents with an associated document type, such as web pages.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentListType"/>
            </returns>
            <example>
            <code>
              var documentlisttype = new DocumentListType();
              var documentListType = documentlisttype.UpdateDocumentListType( list,  documentListTypeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListTypeResource.UpdateDocumentListTypeAsync(Mozu.Api.Contracts.Content.DocumentListType,System.String,System.String)">
            <summary>
            Updates a DocumentListType
            </summary>
            <param name="documentListTypeFQN"></param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="list">Properties for the document list type. Document lists contain documents with an associated document type, such as web pages.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentListType"/>
            </returns>
            <example>
            <code>
              var documentlisttype = new DocumentListType();
              var documentListType = await documentlisttype.UpdateDocumentListTypeAsync( list,  documentListTypeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.DocumentTypeResource">
            <summary>
            Use the Document Types resource to view the document types supplied by the Content API.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.DocumentTypeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentTypeResource.GetDocumentTypes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a paged list of the system-defined document types.
            </summary>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentTypeCollection"/>
            </returns>
            <example>
            <code>
              var documenttype = new DocumentType();
              var documentTypeCollection = documenttype.GetDocumentTypes(_dataViewMode,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentTypeResource.GetDocumentTypesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a paged list of the system-defined document types.
            </summary>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentTypeCollection"/>
            </returns>
            <example>
            <code>
              var documenttype = new DocumentType();
              var documentTypeCollection = await documenttype.GetDocumentTypesAsync(_dataViewMode,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentTypeResource.GetDocumentType(System.String,System.String)">
            <summary>
            Retrieves a system-defined document type.
            </summary>
            <param name="documentTypeName">The name of the document type to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>
            </returns>
            <example>
            <code>
              var documenttype = new DocumentType();
              var documentType = documenttype.GetDocumentType(_dataViewMode,  documentTypeName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentTypeResource.GetDocumentTypeAsync(System.String,System.String)">
            <summary>
            Retrieves a system-defined document type.
            </summary>
            <param name="documentTypeName">The name of the document type to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>
            </returns>
            <example>
            <code>
              var documenttype = new DocumentType();
              var documentType = await documenttype.GetDocumentTypeAsync(_dataViewMode,  documentTypeName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentTypeResource.CreateDocumentType(Mozu.Api.Contracts.Content.DocumentType,System.String)">
            <summary>
            Creates a new DocumentType
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="documentType">The type of documents used in the CMS such as "web_page" or "template" or "image_url".</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>
            </returns>
            <example>
            <code>
              var documenttype = new DocumentType();
              var documentType = documenttype.CreateDocumentType(_dataViewMode,  documentType,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentTypeResource.CreateDocumentTypeAsync(Mozu.Api.Contracts.Content.DocumentType,System.String)">
            <summary>
            Creates a new DocumentType
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="documentType">The type of documents used in the CMS such as "web_page" or "template" or "image_url".</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>
            </returns>
            <example>
            <code>
              var documenttype = new DocumentType();
              var documentType = await documenttype.CreateDocumentTypeAsync(_dataViewMode,  documentType,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentTypeResource.UpdateDocumentType(Mozu.Api.Contracts.Content.DocumentType,System.String,System.String)">
            <summary>
            Updates a DocumentType
            </summary>
            <param name="documentTypeName">The name of the document type to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="documentType">The type of documents used in the CMS such as "web_page" or "template" or "image_url".</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>
            </returns>
            <example>
            <code>
              var documenttype = new DocumentType();
              var documentType = documenttype.UpdateDocumentType( documentType,  documentTypeName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentTypeResource.UpdateDocumentTypeAsync(Mozu.Api.Contracts.Content.DocumentType,System.String,System.String)">
            <summary>
            Updates a DocumentType
            </summary>
            <param name="documentTypeName">The name of the document type to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="documentType">The type of documents used in the CMS such as "web_page" or "template" or "image_url".</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>
            </returns>
            <example>
            <code>
              var documenttype = new DocumentType();
              var documentType = await documenttype.UpdateDocumentTypeAsync( documentType,  documentTypeName,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.PropertyTypeResource">
            <summary>
            Use the property types subresource to manage content properties.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.PropertyTypeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.GetPropertyTypes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a list of the content property types.
            </summary>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.PropertyTypeCollection"/>
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyTypeCollection = propertytype.GetPropertyTypes(_dataViewMode,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.GetPropertyTypesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a list of the content property types.
            </summary>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.PropertyTypeCollection"/>
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyTypeCollection = await propertytype.GetPropertyTypesAsync(_dataViewMode,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.GetPropertyType(System.String,System.String)">
            <summary>
            Retrieves the details of the content property type.
            </summary>
            <param name="propertyTypeName">The name of the property type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyType = propertytype.GetPropertyType(_dataViewMode,  propertyTypeName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.GetPropertyTypeAsync(System.String,System.String)">
            <summary>
            Retrieves the details of the content property type.
            </summary>
            <param name="propertyTypeName">The name of the property type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyType = await propertytype.GetPropertyTypeAsync(_dataViewMode,  propertyTypeName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.CreatePropertyType(Mozu.Api.Contracts.Content.PropertyType,System.String)">
            <summary>
            Creates a new
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="propertyType">Property type available for content. Property types are like templates that can be reused.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyType = propertytype.CreatePropertyType( propertyType,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.CreatePropertyTypeAsync(Mozu.Api.Contracts.Content.PropertyType,System.String)">
            <summary>
            Creates a new
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="propertyType">Property type available for content. Property types are like templates that can be reused.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyType = await propertytype.CreatePropertyTypeAsync( propertyType,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.UpdatePropertyType(Mozu.Api.Contracts.Content.PropertyType,System.String,System.String)">
            <summary>
            Updates a
            </summary>
            <param name="propertyTypeName">The name of the property type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="propertyType">Property type available for content. Property types are like templates that can be reused.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyType = propertytype.UpdatePropertyType(_dataViewMode,  propertyType,  propertyTypeName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.UpdatePropertyTypeAsync(Mozu.Api.Contracts.Content.PropertyType,System.String,System.String)">
            <summary>
            Updates a
            </summary>
            <param name="propertyTypeName">The name of the property type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="propertyType">Property type available for content. Property types are like templates that can be reused.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyType = await propertytype.UpdatePropertyTypeAsync(_dataViewMode,  propertyType,  propertyTypeName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.DeletePropertyType(System.String)">
            <summary>
            Delete a specific
            </summary>
            <param name="propertyTypeName">The name of the property type.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              propertytype.DeletePropertyType(_dataViewMode,  propertyTypeName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.DeletePropertyTypeAsync(System.String)">
            <summary>
            Delete a specific
            </summary>
            <param name="propertyTypeName">The name of the property type.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              await propertytype.DeletePropertyTypeAsync(_dataViewMode,  propertyTypeName);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Event.EventNotificationResource">
            <summary>
            Events are notifications Mozu publishes to the application when a create, read, update, or delete operation is performed. If the application subscribes to the event, you can use the Events resource to query for recent events Mozu published to your application or events that were not published successfully.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Event.EventNotificationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Event.EventNotificationResource.GetEvents(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of events.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.EventCollection"/>
            </returns>
            <example>
            <code>
              var eventnotification = new EventNotification();
              var eventCollection = eventnotification.GetEvents( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Event.EventNotificationResource.GetEventsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of events.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.EventCollection"/>
            </returns>
            <example>
            <code>
              var eventnotification = new EventNotification();
              var eventCollection = await eventnotification.GetEventsAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Event.EventNotificationResource.GetEvent(System.String,System.String)">
            <summary>
            Retrieves an event by providing the event ID.
            </summary>
            <param name="eventId">The unique identifier of the event being retrieved. An event is a notification about a create, read, update, or delete on an order, product, discount or category.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.Event"/>
            </returns>
            <example>
            <code>
              var eventnotification = new EventNotification();
              var event = eventnotification.GetEvent( eventId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Event.EventNotificationResource.GetEventAsync(System.String,System.String)">
            <summary>
            Retrieves an event by providing the event ID.
            </summary>
            <param name="eventId">The unique identifier of the event being retrieved. An event is a notification about a create, read, update, or delete on an order, product, discount or category.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.Event"/>
            </returns>
            <example>
            <code>
              var eventnotification = new EventNotification();
              var event = await eventnotification.GetEventAsync( eventId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Event.Push.SubscriptionResource">
            <summary>
            The Subscriptions resource triggers a push service to sent immediate notifications to the subscribed tenants and applications when triggers. The resource sends messages regarding a subscription event tha occurs in the tenant or site.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Event.Push.SubscriptionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Event.Push.SubscriptionResource.GetSubscriptions(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of events according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.SubscriptionCollection"/>
            </returns>
            <example>
            <code>
              var subscription = new Subscription();
              var subscriptionCollection = subscription.GetSubscriptions( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Event.Push.SubscriptionResource.GetSubscriptionsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of events according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.SubscriptionCollection"/>
            </returns>
            <example>
            <code>
              var subscription = new Subscription();
              var subscriptionCollection = await subscription.GetSubscriptionsAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Event.Push.Subscriptions.EventDeliverySummaryResource">
            <summary>
            Provides details for each attempted delivery of the event to the endpoint.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Event.Push.Subscriptions.EventDeliverySummaryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Event.Push.Subscriptions.EventDeliverySummaryResource.GetDeliveryAttemptSummary(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This operation method is the external/public event entity used specifically in pull/poll event scenarios.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="subscriptionId">Unique identifier for a subscription, such as subscribing tenants for an event or to receive a notification.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.EventDeliverySummary"/>
            </returns>
            <example>
            <code>
              var eventdeliverysummary = new EventDeliverySummary();
              var eventDeliverySummary = eventdeliverysummary.GetDeliveryAttemptSummary( subscriptionId,  id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Event.Push.Subscriptions.EventDeliverySummaryResource.GetDeliveryAttemptSummaryAsync(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This operation method is the external/public event entity used specifically in pull/poll event scenarios.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="subscriptionId">Unique identifier for a subscription, such as subscribing tenants for an event or to receive a notification.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.EventDeliverySummary"/>
            </returns>
            <example>
            <code>
              var eventdeliverysummary = new EventDeliverySummary();
              var eventDeliverySummary = await eventdeliverysummary.GetDeliveryAttemptSummaryAsync( subscriptionId,  id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Event.Push.Subscriptions.EventDeliverySummaryResource.GetDeliveryAttemptSummaries(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of data for delivery attempts of events and notifications. These are notifications sent to subscribing sites and tenants. A paged list is returned sorted and filtered per the entered parameters.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="subscriptionId">Unique identifier for a subscription, such as subscribing tenants for an event or to receive a notification.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.EventDeliverySummaryCollection"/>
            </returns>
            <example>
            <code>
              var eventdeliverysummary = new EventDeliverySummary();
              var eventDeliverySummaryCollection = eventdeliverysummary.GetDeliveryAttemptSummaries( subscriptionId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Event.Push.Subscriptions.EventDeliverySummaryResource.GetDeliveryAttemptSummariesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of data for delivery attempts of events and notifications. These are notifications sent to subscribing sites and tenants. A paged list is returned sorted and filtered per the entered parameters.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="subscriptionId">Unique identifier for a subscription, such as subscribing tenants for an event or to receive a notification.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.EventDeliverySummaryCollection"/>
            </returns>
            <example>
            <code>
              var eventdeliverysummary = new EventDeliverySummary();
              var eventDeliverySummaryCollection = await eventdeliverysummary.GetDeliveryAttemptSummariesAsync( subscriptionId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Adminuser.AdminUserResource">
            <summary>
            The Accounts resource displays the user accounts and account details associated with a developer or Mozu tenant administrator. Email addresses uniquely identify admin user accounts.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Adminuser.AdminUserResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.AdminUserResource.GetTenantScopesForUser(System.String,System.String)">
            <summary>
            Retrieves a list of the Mozu tenants or development stores for which the specified user has an assigned role.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Tenant.TenantCollection"/>
            </returns>
            <example>
            <code>
              var adminuser = new AdminUser();
              var tenantCollection = adminuser.GetTenantScopesForUser( userId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.AdminUserResource.GetTenantScopesForUserAsync(System.String,System.String)">
            <summary>
            Retrieves a list of the Mozu tenants or development stores for which the specified user has an assigned role.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Tenant.TenantCollection"/>
            </returns>
            <example>
            <code>
              var adminuser = new AdminUser();
              var tenantCollection = await adminuser.GetTenantScopesForUserAsync( userId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.AdminUserResource.GetUser(System.String,System.String)">
            <summary>
            Retrieves the details of the specified administrator user account.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.User"/>
            </returns>
            <example>
            <code>
              var adminuser = new AdminUser();
              var user = adminuser.GetUser( userId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.AdminUserResource.GetUserAsync(System.String,System.String)">
            <summary>
            Retrieves the details of the specified administrator user account.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.User"/>
            </returns>
            <example>
            <code>
              var adminuser = new AdminUser();
              var user = await adminuser.GetUserAsync( userId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource">
            <summary>
            Use the Admin User authentication tickets resource to generate and refresh authentication tickets that enable Mozu administrator or developer account users to access development or production tenants.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource.CreateUserAuthTicket(Mozu.Api.Contracts.Core.UserAuthInfo,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates an authentication ticket for the supplied user to specify in API requests associated with the supplied tenant.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="tenantId">Unique identifier of the development or production tenant for which to generate the user authentication ticket.</param>
            <param name="userAuthInfo">Information required to authenticate a user.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var tenantadminuserauthticket = new TenantAdminUserAuthTicket();
              var tenantAdminUserAuthTicket = tenantadminuserauthticket.CreateUserAuthTicket( userAuthInfo,  tenantId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource.CreateUserAuthTicketAsync(Mozu.Api.Contracts.Core.UserAuthInfo,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates an authentication ticket for the supplied user to specify in API requests associated with the supplied tenant.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="tenantId">Unique identifier of the development or production tenant for which to generate the user authentication ticket.</param>
            <param name="userAuthInfo">Information required to authenticate a user.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var tenantadminuserauthticket = new TenantAdminUserAuthTicket();
              var tenantAdminUserAuthTicket = await tenantadminuserauthticket.CreateUserAuthTicketAsync( userAuthInfo,  tenantId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource.RefreshAuthTicket(Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket,System.Nullable{System.Int32},System.String)">
            <summary>
            Generates a new user authentication ticket for the specified tenant by supplying the user's existing refresh token information.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="tenantId"></param>
            <param name="existingAuthTicket">Properties of the authentication ticket to be used in user claims with the Mozu API.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var tenantadminuserauthticket = new TenantAdminUserAuthTicket();
              var tenantAdminUserAuthTicket = tenantadminuserauthticket.RefreshAuthTicket( existingAuthTicket,  tenantId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource.RefreshAuthTicketAsync(Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket,System.Nullable{System.Int32},System.String)">
            <summary>
            Generates a new user authentication ticket for the specified tenant by supplying the user's existing refresh token information.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="tenantId"></param>
            <param name="existingAuthTicket">Properties of the authentication ticket to be used in user claims with the Mozu API.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var tenantadminuserauthticket = new TenantAdminUserAuthTicket();
              var tenantAdminUserAuthTicket = await tenantadminuserauthticket.RefreshAuthTicketAsync( existingAuthTicket,  tenantId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource.DeleteUserAuthTicket(System.String)">
            <summary>
            Deletes the authentication ticket for the user by supplying the refresh token.
            </summary>
            <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantadminuserauthticket = new TenantAdminUserAuthTicket();
              tenantadminuserauthticket.DeleteUserAuthTicket( refreshToken);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource.DeleteUserAuthTicketAsync(System.String)">
            <summary>
            Deletes the authentication ticket for the user by supplying the refresh token.
            </summary>
            <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantadminuserauthticket = new TenantAdminUserAuthTicket();
              await tenantadminuserauthticket.DeleteUserAuthTicketAsync( refreshToken);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.ApplicationResource">
            <summary>
            platform/developer related resources. DOCUMENT_HERE 
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.ApplicationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.GetAppPackageNames(System.String,System.String)">
            <summary>
            platform-developer Get GetAppPackageNames description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.PackageNamesCollection"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var packageNamesCollection = application.GetAppPackageNames( applicationKey,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.GetAppPackageNamesAsync(System.String,System.String)">
            <summary>
            platform-developer Get GetAppPackageNames description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.PackageNamesCollection"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var packageNamesCollection = await application.GetAppPackageNamesAsync( applicationKey,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.GetAppVersions(System.String,System.String)">
            <summary>
            platform-developer Get GetAppVersions description DOCUMENT_HERE 
            </summary>
            <param name="nsAndAppId"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.ApplicationVersionsCollection"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var applicationVersionsCollection = application.GetAppVersions( nsAndAppId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.GetAppVersionsAsync(System.String,System.String)">
            <summary>
            platform-developer Get GetAppVersions description DOCUMENT_HERE 
            </summary>
            <param name="nsAndAppId"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.ApplicationVersionsCollection"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var applicationVersionsCollection = await application.GetAppVersionsAsync( nsAndAppId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.GetPackageFileMetadata(System.String,System.String,System.String)">
            <summary>
            platform-developer Get GetPackageFileMetadata description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="filepath"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.FileMetadata"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var fileMetadata = application.GetPackageFileMetadata( applicationKey,  filepath,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.GetPackageFileMetadataAsync(System.String,System.String,System.String)">
            <summary>
            platform-developer Get GetPackageFileMetadata description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="filepath"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.FileMetadata"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var fileMetadata = await application.GetPackageFileMetadataAsync( applicationKey,  filepath,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.GetPackageMetadata(System.String,System.String)">
            <summary>
            platform-developer Get GetPackageMetadata description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.FolderMetadata"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var folderMetadata = application.GetPackageMetadata( applicationKey,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.GetPackageMetadataAsync(System.String,System.String)">
            <summary>
            platform-developer Get GetPackageMetadata description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.FolderMetadata"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var folderMetadata = await application.GetPackageMetadataAsync( applicationKey,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.UpsertPackageFile(System.IO.Stream,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            platform-developer Post UpsertPackageFile description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="filepath"></param>
            <param name="lastModifiedTime"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="stream">Data stream that delivers information. Used to input and output data.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.FileMetadata"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var fileMetadata = application.UpsertPackageFile( stream,  applicationKey,  filepath,  lastModifiedTime,  responseFields,  contentType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.UpsertPackageFileAsync(System.IO.Stream,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            platform-developer Post UpsertPackageFile description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="filepath"></param>
            <param name="lastModifiedTime"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="stream">Data stream that delivers information. Used to input and output data.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.FileMetadata"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var fileMetadata = await application.UpsertPackageFileAsync( stream,  applicationKey,  filepath,  lastModifiedTime,  responseFields,  contentType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.RenamePackageFile(Mozu.Api.Contracts.AppDev.RenameInfo,System.String,System.String)">
            <summary>
            platform-developer Post RenamePackageFile description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="renameInfo">Information required to update the name of a file in a package, which consists of the original name and the new name.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.FileMetadata"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var fileMetadata = application.RenamePackageFile( renameInfo,  applicationKey,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.RenamePackageFileAsync(Mozu.Api.Contracts.AppDev.RenameInfo,System.String,System.String)">
            <summary>
            platform-developer Post RenamePackageFile description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="renameInfo">Information required to update the name of a file in a package, which consists of the original name and the new name.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.FileMetadata"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var fileMetadata = await application.RenamePackageFileAsync( renameInfo,  applicationKey,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.DeletePackageFile(System.String,System.String)">
            <summary>
            platform-developer Delete DeletePackageFile description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="filepath"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var application = new Application();
              application.DeletePackageFile( applicationKey,  filepath);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.DeletePackageFileAsync(System.String,System.String)">
            <summary>
            platform-developer Delete DeletePackageFile description DOCUMENT_HERE 
            </summary>
            <param name="applicationKey"></param>
            <param name="filepath"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var application = new Application();
              await application.DeletePackageFileAsync( applicationKey,  filepath);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Applications.AuthTicketResource">
            <summary>
            Use the Authetickets for applications resource to manage authentication tickets for your apps.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Applications.AuthTicketResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Applications.AuthTicketResource.AuthenticateApp(Mozu.Api.Contracts.AppDev.AppAuthInfo,System.String)">
            <summary>
            Generate an authentication ticket for an application.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="appAuthInfo">The information required to authenticate third party applications against the Mozu API.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.AuthTicket"/>
            </returns>
            <example>
            <code>
              var authticket = new AuthTicket();
              var authTicket = authticket.AuthenticateApp( appAuthInfo,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Applications.AuthTicketResource.AuthenticateAppAsync(Mozu.Api.Contracts.AppDev.AppAuthInfo,System.String)">
            <summary>
            Generate an authentication ticket for an application.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="appAuthInfo">The information required to authenticate third party applications against the Mozu API.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.AuthTicket"/>
            </returns>
            <example>
            <code>
              var authticket = new AuthTicket();
              var authTicket = await authticket.AuthenticateAppAsync( appAuthInfo,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Applications.AuthTicketResource.RefreshAppAuthTicket(Mozu.Api.Contracts.AppDev.AuthTicketRequest,System.String)">
            <summary>
            Refreshes the application's authentication ticket and generates a new access token by providing the refresh token string.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="authTicketRequest">Properties of the authentication ticket refresh requests, which includes the refresh token string.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.AuthTicket"/>
            </returns>
            <example>
            <code>
              var authticket = new AuthTicket();
              var authTicket = authticket.RefreshAppAuthTicket( authTicketRequest,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Applications.AuthTicketResource.RefreshAppAuthTicketAsync(Mozu.Api.Contracts.AppDev.AuthTicketRequest,System.String)">
            <summary>
            Refreshes the application's authentication ticket and generates a new access token by providing the refresh token string.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="authTicketRequest">Properties of the authentication ticket refresh requests, which includes the refresh token string.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.AuthTicket"/>
            </returns>
            <example>
            <code>
              var authticket = new AuthTicket();
              var authTicket = await authticket.RefreshAppAuthTicketAsync( authTicketRequest,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Applications.AuthTicketResource.DeleteAppAuthTicket(System.String)">
            <summary>
            Deletes an authentication for an application based on the specified refresh token.
            </summary>
            <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var authticket = new AuthTicket();
              authticket.DeleteAppAuthTicket( refreshToken);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Applications.AuthTicketResource.DeleteAppAuthTicketAsync(System.String)">
            <summary>
            Deletes an authentication for an application based on the specified refresh token.
            </summary>
            <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var authticket = new AuthTicket();
              await authticket.DeleteAppAuthTicketAsync( refreshToken);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Developer.DeveloperAdminUserAuthTicketResource">
            <summary>
            Use the Authtickets resource to manage authentication tickets for your developer account.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Developer.DeveloperAdminUserAuthTicketResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Developer.DeveloperAdminUserAuthTicketResource.CreateDeveloperUserAuthTicket(Mozu.Api.Contracts.Core.UserAuthInfo,System.Nullable{System.Int32},System.String)">
            <summary>
            Generate an authentication ticket for a developer account.
            </summary>
            <param name="developerAccountId">Unique identifier of the developer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userAuthInfo">Information required to authenticate a user.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var developeradminuserauthticket = new DeveloperAdminUserAuthTicket();
              var developerAdminUserAuthTicket = developeradminuserauthticket.CreateDeveloperUserAuthTicket( userAuthInfo,  developerAccountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Developer.DeveloperAdminUserAuthTicketResource.CreateDeveloperUserAuthTicketAsync(Mozu.Api.Contracts.Core.UserAuthInfo,System.Nullable{System.Int32},System.String)">
            <summary>
            Generate an authentication ticket for a developer account.
            </summary>
            <param name="developerAccountId">Unique identifier of the developer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userAuthInfo">Information required to authenticate a user.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var developeradminuserauthticket = new DeveloperAdminUserAuthTicket();
              var developerAdminUserAuthTicket = await developeradminuserauthticket.CreateDeveloperUserAuthTicketAsync( userAuthInfo,  developerAccountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Developer.DeveloperAdminUserAuthTicketResource.RefreshDeveloperAuthTicket(Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket,System.Nullable{System.Int32},System.String)">
            <summary>
            Generates a new developer account authentication ticket for the specified tenant by supplying the defined refresh token information.
            </summary>
            <param name="developerAccountId">Unique identifier of the developer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="existingAuthTicket">Properties of the authentication ticket to be used in developer account claims with the Mozu API.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var developeradminuserauthticket = new DeveloperAdminUserAuthTicket();
              var developerAdminUserAuthTicket = developeradminuserauthticket.RefreshDeveloperAuthTicket( existingAuthTicket,  developerAccountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Developer.DeveloperAdminUserAuthTicketResource.RefreshDeveloperAuthTicketAsync(Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket,System.Nullable{System.Int32},System.String)">
            <summary>
            Generates a new developer account authentication ticket for the specified tenant by supplying the defined refresh token information.
            </summary>
            <param name="developerAccountId">Unique identifier of the developer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="existingAuthTicket">Properties of the authentication ticket to be used in developer account claims with the Mozu API.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var developeradminuserauthticket = new DeveloperAdminUserAuthTicket();
              var developerAdminUserAuthTicket = await developeradminuserauthticket.RefreshDeveloperAuthTicketAsync( existingAuthTicket,  developerAccountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Developer.DeveloperAdminUserAuthTicketResource.DeleteUserAuthTicket(System.String)">
            <summary>
            Deletes the authentication ticket for the developer account by supplying the refresh token.
            </summary>
            <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var developeradminuserauthticket = new DeveloperAdminUserAuthTicket();
              developeradminuserauthticket.DeleteUserAuthTicket( refreshToken);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Developer.DeveloperAdminUserAuthTicketResource.DeleteUserAuthTicketAsync(System.String)">
            <summary>
            Deletes the authentication ticket for the developer account by supplying the refresh token.
            </summary>
            <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var developeradminuserauthticket = new DeveloperAdminUserAuthTicket();
              await developeradminuserauthticket.DeleteUserAuthTicketAsync( refreshToken);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.EntityListResource">
            <summary>
            The Entity Lists resource manages all dynamic entities in your Mozu document store of the Mozu cloud. The content is JSON and can have up to five indexed properties (integer, decimal, string, date, and boolean) with support for additional customized elements as needed. Every document in the entity list has a validated unique ID. 
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.EntityListResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.EntityListResource.GetEntityLists(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a filtered list of EntityLists for a specific tenant.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityListCollection"/>
            </returns>
            <example>
            <code>
              var entitylist = new EntityList();
              var entityListCollection = entitylist.GetEntityLists( pageSize,  startIndex,  filter,  sortBy,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.EntityListResource.GetEntityListsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a filtered list of EntityLists for a specific tenant.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityListCollection"/>
            </returns>
            <example>
            <code>
              var entitylist = new EntityList();
              var entityListCollection = await entitylist.GetEntityListsAsync( pageSize,  startIndex,  filter,  sortBy,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.EntityListResource.GetEntityList(System.String,System.String)">
            <summary>
            Get an existing EntityList definition for a specific tenant
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityList"/>
            </returns>
            <example>
            <code>
              var entitylist = new EntityList();
              var entityList = entitylist.GetEntityList( entityListFullName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.EntityListResource.GetEntityListAsync(System.String,System.String)">
            <summary>
            Get an existing EntityList definition for a specific tenant
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityList"/>
            </returns>
            <example>
            <code>
              var entitylist = new EntityList();
              var entityList = await entitylist.GetEntityListAsync( entityListFullName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.EntityListResource.CreateEntityList(Mozu.Api.Contracts.MZDB.EntityList,System.String)">
            <summary>
            Create a new EntityList for a specific tenant.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="entityList">The definition of an MZDB EntityList which describes the characteristics of the EntityList on a per tenant basis. EntityLists are created at the tenant level, but instances of the EntityLists are implicitly created at the appropriate context level as entities are added or removed from the EntityList.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityList"/>
            </returns>
            <example>
            <code>
              var entitylist = new EntityList();
              var entityList = entitylist.CreateEntityList( entityList,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.EntityListResource.CreateEntityListAsync(Mozu.Api.Contracts.MZDB.EntityList,System.String)">
            <summary>
            Create a new EntityList for a specific tenant.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="entityList">The definition of an MZDB EntityList which describes the characteristics of the EntityList on a per tenant basis. EntityLists are created at the tenant level, but instances of the EntityLists are implicitly created at the appropriate context level as entities are added or removed from the EntityList.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityList"/>
            </returns>
            <example>
            <code>
              var entitylist = new EntityList();
              var entityList = await entitylist.CreateEntityListAsync( entityList,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.EntityListResource.UpdateEntityList(Mozu.Api.Contracts.MZDB.EntityList,System.String,System.String)">
            <summary>
            Update an existing Entitylist for a specific tenant.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="entityList">The definition of an MZDB EntityList which describes the characteristics of the EntityList on a per tenant basis. EntityLists are created at the tenant level, but instances of the EntityLists are implicitly created at the appropriate context level as entities are added or removed from the EntityList.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityList"/>
            </returns>
            <example>
            <code>
              var entitylist = new EntityList();
              var entityList = entitylist.UpdateEntityList( entityList,  entityListFullName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.EntityListResource.UpdateEntityListAsync(Mozu.Api.Contracts.MZDB.EntityList,System.String,System.String)">
            <summary>
            Update an existing Entitylist for a specific tenant.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="entityList">The definition of an MZDB EntityList which describes the characteristics of the EntityList on a per tenant basis. EntityLists are created at the tenant level, but instances of the EntityLists are implicitly created at the appropriate context level as entities are added or removed from the EntityList.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityList"/>
            </returns>
            <example>
            <code>
              var entitylist = new EntityList();
              var entityList = await entitylist.UpdateEntityListAsync( entityList,  entityListFullName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.EntityListResource.DeleteEntityList(System.String)">
            <summary>
            Delete an existing EntityList for a specific tenant. This will also delete all Entities in all instances of this EntityList for the tenant.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var entitylist = new EntityList();
              entitylist.DeleteEntityList( entityListFullName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.EntityListResource.DeleteEntityListAsync(System.String)">
            <summary>
            Delete an existing EntityList for a specific tenant. This will also delete all Entities in all instances of this EntityList for the tenant.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var entitylist = new EntityList();
              await entitylist.DeleteEntityListAsync( entityListFullName);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Entitylists.EntityContainerResource">
            <summary>
            Entity containers provide all properties and data for entities within a site/tenant. This data encapsulates all associated IDs including entity lists, entity views, site, tenant, entities, and more.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Entitylists.EntityContainerResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityContainerResource.GetEntityContainer(System.String,System.String,System.String)">
            <summary>
            Retrieves an entity container, providing all schema and rules and associated IDs for entities.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityContainer"/>
            </returns>
            <example>
            <code>
              var entitycontainer = new EntityContainer();
              var entityContainer = entitycontainer.GetEntityContainer( entityListFullName,  id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityContainerResource.GetEntityContainerAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves an entity container, providing all schema and rules and associated IDs for entities.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityContainer"/>
            </returns>
            <example>
            <code>
              var entitycontainer = new EntityContainer();
              var entityContainer = await entitycontainer.GetEntityContainerAsync( entityListFullName,  id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityContainerResource.GetEntityContainers(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of entity containers. Each container holds a set of entities per ID. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityContainerCollection"/>
            </returns>
            <example>
            <code>
              var entitycontainer = new EntityContainer();
              var entityContainerCollection = entitycontainer.GetEntityContainers( entityListFullName,  pageSize,  startIndex,  filter,  sortBy,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityContainerResource.GetEntityContainersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of entity containers. Each container holds a set of entities per ID. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityContainerCollection"/>
            </returns>
            <example>
            <code>
              var entitycontainer = new EntityContainer();
              var entityContainerCollection = await entitycontainer.GetEntityContainersAsync( entityListFullName,  pageSize,  startIndex,  filter,  sortBy,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Entitylists.EntityResource">
            <summary>
            Entities are JSON entries within the MZDB (Mozu Mongo DB) for handling large data sets to heavily filter (&gt;2,000 items). Each entity is associated to an EntityList with schema, rules, and formatting for storing the content. This content can be accessed via the Mozu API and Mozu Hypr tags.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Entitylists.EntityResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityResource.GetEntity(System.String,System.String,System.String)">
            <summary>
            Retrieves an entity with an associated entity list and context level at tenant, master catalog, catalog, or site. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            JObject
            </returns>
            <example>
            <code>
              var entity = new Entity();
              var json = entity.GetEntity( entityListFullName,  id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityResource.GetEntityAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves an entity with an associated entity list and context level at tenant, master catalog, catalog, or site. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            JObject
            </returns>
            <example>
            <code>
              var entity = new Entity();
              var json = await entity.GetEntityAsync( entityListFullName,  id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityResource.GetEntities(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of entities with an associated entity list and context level at tenant, master catalog, catalog, or site. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityCollection"/>
            </returns>
            <example>
            <code>
              var entity = new Entity();
              var entityCollection = entity.GetEntities( entityListFullName,  pageSize,  startIndex,  filter,  sortBy,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityResource.GetEntitiesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of entities with an associated entity list and context level at tenant, master catalog, catalog, or site. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityCollection"/>
            </returns>
            <example>
            <code>
              var entity = new Entity();
              var entityCollection = await entity.GetEntitiesAsync( entityListFullName,  pageSize,  startIndex,  filter,  sortBy,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityResource.InsertEntity(Newtonsoft.Json.Linq.JObject,System.String,System.String)">
            <summary>
            Inserts a new entity per the entered item, the entity list full name, and associated response fields. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="item">JSON code for objects.</param>
            <returns>
            JObject
            </returns>
            <example>
            <code>
              var entity = new Entity();
              var json = entity.InsertEntity( item,  entityListFullName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityResource.InsertEntityAsync(Newtonsoft.Json.Linq.JObject,System.String,System.String)">
            <summary>
            Inserts a new entity per the entered item, the entity list full name, and associated response fields. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="item">JSON code for objects.</param>
            <returns>
            JObject
            </returns>
            <example>
            <code>
              var entity = new Entity();
              var json = await entity.InsertEntityAsync( item,  entityListFullName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityResource.UpdateEntity(Newtonsoft.Json.Linq.JObject,System.String,System.String,System.String)">
            <summary>
            Updates the content and associations for an existing entity.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="item">JSON code for objects.</param>
            <returns>
            JObject
            </returns>
            <example>
            <code>
              var entity = new Entity();
              var json = entity.UpdateEntity( item,  entityListFullName,  id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityResource.UpdateEntityAsync(Newtonsoft.Json.Linq.JObject,System.String,System.String,System.String)">
            <summary>
            Updates the content and associations for an existing entity.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="item">JSON code for objects.</param>
            <returns>
            JObject
            </returns>
            <example>
            <code>
              var entity = new Entity();
              var json = await entity.UpdateEntityAsync( item,  entityListFullName,  id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityResource.DeleteEntity(System.String,System.String)">
            <summary>
            Deletes an entity depending on the context of tenant, master catalog, catalog, or site level. Entities are associated to an entity list (schema and formatting) for displaying within a namespace and context level.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var entity = new Entity();
              entity.DeleteEntity( entityListFullName,  id);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityResource.DeleteEntityAsync(System.String,System.String)">
            <summary>
            Deletes an entity depending on the context of tenant, master catalog, catalog, or site level. Entities are associated to an entity list (schema and formatting) for displaying within a namespace and context level.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var entity = new Entity();
              await entity.DeleteEntityAsync( entityListFullName,  id);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Entitylists.ListViewResource">
            <summary>
            Provides settings and options for displaying associated content within a context level of site, tenant, catalog, or master catalog. ListViews can be associated with entity lists and entities.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Entitylists.ListViewResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetViewEntity(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves a view for associated entities. A view provides display context levels (site, tenant, catalog, master catalog) and settings.
            </summary>
            <param name="entityId">Unique identifier for an entity, which defines the schema, rules, and formats for JSON entities within the MZDB (Mozu Mongo DB).</param>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            JObject
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var json = listview.GetViewEntity( entityListFullName,  viewName,  entityId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetViewEntityAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves a view for associated entities. A view provides display context levels (site, tenant, catalog, master catalog) and settings.
            </summary>
            <param name="entityId">Unique identifier for an entity, which defines the schema, rules, and formats for JSON entities within the MZDB (Mozu Mongo DB).</param>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            JObject
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var json = await listview.GetViewEntityAsync( entityListFullName,  viewName,  entityId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetViewEntities(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a collection of views for associated entities. Each view provides display context levels (site, tenant, catalog, master catalog) and settings.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityCollection"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var entityCollection = listview.GetViewEntities( entityListFullName,  viewName,  pageSize,  startIndex,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetViewEntitiesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a collection of views for associated entities. Each view provides display context levels (site, tenant, catalog, master catalog) and settings.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityCollection"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var entityCollection = await listview.GetViewEntitiesAsync( entityListFullName,  viewName,  pageSize,  startIndex,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetViewEntityContainer(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of container data for creating and displaying a view of entities. 
            </summary>
            <param name="entityId">Unique identifier for an entity, which defines the schema, rules, and formats for JSON entities within the MZDB (Mozu Mongo DB).</param>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityContainer"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var entityContainer = listview.GetViewEntityContainer( entityListFullName,  viewName,  entityId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetViewEntityContainerAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves a collection of container data for creating and displaying a view of entities. 
            </summary>
            <param name="entityId">Unique identifier for an entity, which defines the schema, rules, and formats for JSON entities within the MZDB (Mozu Mongo DB).</param>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityContainer"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var entityContainer = await listview.GetViewEntityContainerAsync( entityListFullName,  viewName,  entityId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetViewEntityContainers(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a collection of container data for creating and displaying a view of entities. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityContainerCollection"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var entityContainerCollection = listview.GetViewEntityContainers( entityListFullName,  viewName,  pageSize,  startIndex,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetViewEntityContainersAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a collection of container data for creating and displaying a view of entities. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityContainerCollection"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var entityContainerCollection = await listview.GetViewEntityContainersAsync( entityListFullName,  viewName,  pageSize,  startIndex,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetEntityListView(System.String,System.String,System.String)">
            <summary>
            Retrieves a specific `EntityListView`. These views provide schema, rules, and formatting for all associated entities. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.ListView"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var listView = listview.GetEntityListView( entityListFullName,  viewName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetEntityListViewAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves a specific `EntityListView`. These views provide schema, rules, and formatting for all associated entities. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.ListView"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var listView = await listview.GetEntityListViewAsync( entityListFullName,  viewName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetEntityListViews(System.String,System.String)">
            <summary>
            Retrieves a collection of `EntityListViews`. These views provide schema, rules, and formatting for all associated entities. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.ListViewCollection"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var listViewCollection = listview.GetEntityListViews( entityListFullName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetEntityListViewsAsync(System.String,System.String)">
            <summary>
            Retrieves a collection of `EntityListViews`. These views provide schema, rules, and formatting for all associated entities. 
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.ListViewCollection"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var listViewCollection = await listview.GetEntityListViewsAsync( entityListFullName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.CreateEntityListView(Mozu.Api.Contracts.MZDB.ListView,System.String,System.String)">
            <summary>
            Creates an entity list view. Each view provides display context levels (site, tenant, catalog, master catalog) and settings for the list of entities.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="listView">Properties for the list view that specifies what fields and content display per page load. All associated fields in the list view correspond with object data.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.ListView"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var listView = listview.CreateEntityListView( listView,  entityListFullName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.CreateEntityListViewAsync(Mozu.Api.Contracts.MZDB.ListView,System.String,System.String)">
            <summary>
            Creates an entity list view. Each view provides display context levels (site, tenant, catalog, master catalog) and settings for the list of entities.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="listView">Properties for the list view that specifies what fields and content display per page load. All associated fields in the list view correspond with object data.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.ListView"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var listView = await listview.CreateEntityListViewAsync( listView,  entityListFullName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.UpdateEntityListView(Mozu.Api.Contracts.MZDB.ListView,System.String,System.String,System.String)">
            <summary>
            Updates an existing entity list view. Each view provides display context levels (site, tenant, catalog, master catalog) and settings for the list of entities.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <param name="listView">Properties for the list view that specifies what fields and content display per page load. All associated fields in the list view correspond with object data.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.ListView"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var listView = listview.UpdateEntityListView( listView,  entityListFullName,  viewName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.UpdateEntityListViewAsync(Mozu.Api.Contracts.MZDB.ListView,System.String,System.String,System.String)">
            <summary>
            Updates an existing entity list view. Each view provides display context levels (site, tenant, catalog, master catalog) and settings for the list of entities.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <param name="listView">Properties for the list view that specifies what fields and content display per page load. All associated fields in the list view correspond with object data.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.ListView"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var listView = await listview.UpdateEntityListViewAsync( listView,  entityListFullName,  viewName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.DeleteEntityListView(System.String,System.String)">
            <summary>
            Deletes an entity list view. Any associated entities have the association removed.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var listview = new ListView();
              listview.DeleteEntityListView( entityListFullName,  viewName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.DeleteEntityListViewAsync(System.String,System.String)">
            <summary>
            Deletes an entity list view. Any associated entities have the association removed.
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var listview = new ListView();
              await listview.DeleteEntityListViewAsync( entityListFullName,  viewName);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.ReferenceDataResource">
            <summary>
            The Reference resource retrieves collections of standards the Mozu system currently supports. This includes content locales, top-level domains, units of measure, countries, currencies, time zones, and shipping or billing address schemas.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.ReferenceDataResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetAddressSchema(System.String,System.String)">
            <summary>
            Retrieves a specific address schema based on the country code provided. This operation allows the creation of custom shipping and billing address fields.
            </summary>
            <param name="countryCode">The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.AddressSchema"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var addressSchema = referencedata.GetAddressSchema( countryCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetAddressSchemaAsync(System.String,System.String)">
            <summary>
            Retrieves a specific address schema based on the country code provided. This operation allows the creation of custom shipping and billing address fields.
            </summary>
            <param name="countryCode">The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.AddressSchema"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var addressSchema = await referencedata.GetAddressSchemaAsync( countryCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetAddressSchemas(System.String)">
            <summary>
            Retrieves the entire list of address schemas that the system supports.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.AddressSchemaCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var addressSchemaCollection = referencedata.GetAddressSchemas( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetAddressSchemasAsync(System.String)">
            <summary>
            Retrieves the entire list of address schemas that the system supports.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.AddressSchemaCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var addressSchemaCollection = await referencedata.GetAddressSchemasAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehavior(System.Int32,System.String)">
            <summary>
            Retrieves the details of a behavior based on the behavior ID specified in the request.
            </summary>
            <param name="behaviorId">Unique identifier of the behavior.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Behavior"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behavior = referencedata.GetBehavior( behaviorId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehaviorAsync(System.Int32,System.String)">
            <summary>
            Retrieves the details of a behavior based on the behavior ID specified in the request.
            </summary>
            <param name="behaviorId">Unique identifier of the behavior.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Behavior"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behavior = await referencedata.GetBehaviorAsync( behaviorId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehaviorCategory(System.Int32,System.String)">
            <summary>
            Retrieves the details of the behavior category specified in the request.
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.BehaviorCategory"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behaviorCategory = referencedata.GetBehaviorCategory( categoryId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehaviorCategoryAsync(System.Int32,System.String)">
            <summary>
            Retrieves the details of the behavior category specified in the request.
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.BehaviorCategory"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behaviorCategory = await referencedata.GetBehaviorCategoryAsync( categoryId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehaviorCategories(System.String)">
            <summary>
            Retrieves the list of behavior categories.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.BehaviorCategoryCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behaviorCategoryCollection = referencedata.GetBehaviorCategories( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehaviorCategoriesAsync(System.String)">
            <summary>
            Retrieves the list of behavior categories.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.BehaviorCategoryCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behaviorCategoryCollection = await referencedata.GetBehaviorCategoriesAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehaviors(System.String,System.String)">
            <summary>
            Retrieves a list of application behaviors.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userType">The user type associated with the behaviors to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.BehaviorCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behaviorCollection = referencedata.GetBehaviors( userType,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehaviorsAsync(System.String,System.String)">
            <summary>
            Retrieves a list of application behaviors.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userType">The user type associated with the behaviors to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.BehaviorCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behaviorCollection = await referencedata.GetBehaviorsAsync( userType,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetContentLocales(System.String)">
            <summary>
            Retrieves the list of content locales the system supports. Content locales indicate the language used and the country where the language is used.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.ContentLocaleCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var contentLocaleCollection = referencedata.GetContentLocales( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetContentLocalesAsync(System.String)">
            <summary>
            Retrieves the list of content locales the system supports. Content locales indicate the language used and the country where the language is used.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.ContentLocaleCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var contentLocaleCollection = await referencedata.GetContentLocalesAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetCountries(System.String)">
            <summary>
            Retrieves the entire list of countries that the system supports.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.CountryCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var countryCollection = referencedata.GetCountries( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetCountriesAsync(System.String)">
            <summary>
            Retrieves the entire list of countries that the system supports.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.CountryCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var countryCollection = await referencedata.GetCountriesAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetCountriesWithStates(System.String)">
            <summary>
            Retrieves the entire list of countries that the system supports.
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.CountryWithStatesCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var countryWithStatesCollection = referencedata.GetCountriesWithStates( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetCountriesWithStatesAsync(System.String)">
            <summary>
            Retrieves the entire list of countries that the system supports.
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.CountryWithStatesCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var countryWithStatesCollection = await referencedata.GetCountriesWithStatesAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetCurrencies(System.String)">
            <summary>
            Retrieves the entire list of currencies that the system supports.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.CurrencyCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var currencyCollection = referencedata.GetCurrencies( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetCurrenciesAsync(System.String)">
            <summary>
            Retrieves the entire list of currencies that the system supports.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.CurrencyCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var currencyCollection = await referencedata.GetCurrenciesAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetTimeZones(System.String)">
            <summary>
            Retrieves the entire list of time zones that the system supports.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.TimeZoneCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var timeZoneCollection = referencedata.GetTimeZones( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetTimeZonesAsync(System.String)">
            <summary>
            Retrieves the entire list of time zones that the system supports.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.TimeZoneCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var timeZoneCollection = await referencedata.GetTimeZonesAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetTopLevelDomains(System.String)">
            <summary>
            Retrieves the entire list of top-level internet domains that the system supports.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.TopLevelDomainCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var topLevelDomainCollection = referencedata.GetTopLevelDomains( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetTopLevelDomainsAsync(System.String)">
            <summary>
            Retrieves the entire list of top-level internet domains that the system supports.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.TopLevelDomainCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var topLevelDomainCollection = await referencedata.GetTopLevelDomainsAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetUnitsOfMeasure(System.String,System.String)">
            <summary>
            Retrieves an array list of all units of measure the system supports.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var unitOfMeasureCollection = referencedata.GetUnitsOfMeasure( filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetUnitsOfMeasureAsync(System.String,System.String)">
            <summary>
            Retrieves an array list of all units of measure the system supports.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var unitOfMeasureCollection = await referencedata.GetUnitsOfMeasureAsync( filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.SiteDataResource">
            <summary>
            Use the site data resource to store site-level information required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.SiteDataResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.GetDBValue(System.String,System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            string
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              var string = sitedata.GetDBValue( dbEntryQuery,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.GetDBValueAsync(System.String,System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            string
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              var string = await sitedata.GetDBValueAsync( dbEntryQuery,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.CreateDBValue(System.String,System.String)">
            <summary>
            Creates a new record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              sitedata.CreateDBValue( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.CreateDBValueAsync(System.String,System.String)">
            <summary>
            Creates a new record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              await sitedata.CreateDBValueAsync( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.UpdateDBValue(System.String,System.String)">
            <summary>
            Updates a record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              sitedata.UpdateDBValue( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.UpdateDBValueAsync(System.String,System.String)">
            <summary>
            Updates a record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              await sitedata.UpdateDBValueAsync( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.DeleteDBValue(System.String)">
            <summary>
            Removes a previously defined record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              sitedata.DeleteDBValue( dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.DeleteDBValueAsync(System.String)">
            <summary>
            Removes a previously defined record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              await sitedata.DeleteDBValueAsync( dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.TenantDataResource">
            <summary>
            Use the tenant data resource to store tenant-level information required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.TenantDataResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.GetDBValue(System.String,System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            string
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              var string = tenantdata.GetDBValue( dbEntryQuery,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.GetDBValueAsync(System.String,System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            string
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              var string = await tenantdata.GetDBValueAsync( dbEntryQuery,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.CreateDBValue(System.String,System.String)">
            <summary>
            Creates a new record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              tenantdata.CreateDBValue( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.CreateDBValueAsync(System.String,System.String)">
            <summary>
            Creates a new record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              await tenantdata.CreateDBValueAsync( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.UpdateDBValue(System.String,System.String)">
            <summary>
            Updates a record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              tenantdata.UpdateDBValue( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.UpdateDBValueAsync(System.String,System.String)">
            <summary>
            Updates a record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              await tenantdata.UpdateDBValueAsync( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.DeleteDBValue(System.String)">
            <summary>
            Removes a previously defined record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              tenantdata.DeleteDBValue( dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.DeleteDBValueAsync(System.String)">
            <summary>
            Removes a previously defined record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              await tenantdata.DeleteDBValueAsync( dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.TenantExtensionsResource">
            <summary>
            platform/extensions related resources. DOCUMENT_HERE 
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.TenantExtensionsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantExtensionsResource.GetExtensions(System.String)">
            <summary>
            platform-extensions Get GetExtensions description DOCUMENT_HERE 
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.InstalledApplications.TenantExtensions"/>
            </returns>
            <example>
            <code>
              var tenantextensions = new TenantExtensions();
              var tenantExtensions = tenantextensions.GetExtensions( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantExtensionsResource.GetExtensionsAsync(System.String)">
            <summary>
            platform-extensions Get GetExtensions description DOCUMENT_HERE 
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.InstalledApplications.TenantExtensions"/>
            </returns>
            <example>
            <code>
              var tenantextensions = new TenantExtensions();
              var tenantExtensions = await tenantextensions.GetExtensionsAsync( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantExtensionsResource.UpdateExtensions(Mozu.Api.Contracts.InstalledApplications.TenantExtensions,System.String)">
            <summary>
            platform-extensions Put UpdateExtensions description DOCUMENT_HERE 
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="extensions">Mozu.InstalledApplications.Contracts.TenantExtensions ApiType DOCUMENT_HERE </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.InstalledApplications.TenantExtensions"/>
            </returns>
            <example>
            <code>
              var tenantextensions = new TenantExtensions();
              var tenantExtensions = tenantextensions.UpdateExtensions( extensions,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantExtensionsResource.UpdateExtensionsAsync(Mozu.Api.Contracts.InstalledApplications.TenantExtensions,System.String)">
            <summary>
            platform-extensions Put UpdateExtensions description DOCUMENT_HERE 
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="extensions">Mozu.InstalledApplications.Contracts.TenantExtensions ApiType DOCUMENT_HERE </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.InstalledApplications.TenantExtensions"/>
            </returns>
            <example>
            <code>
              var tenantextensions = new TenantExtensions();
              var tenantExtensions = await tenantextensions.UpdateExtensionsAsync( extensions,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.TenantResource">
            <summary>
            Use the tenants resource to manage information about a Mozu tenant.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.TenantResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantResource.GetTenant(System.Int32,System.String)">
            <summary>
            Retrieve details about a specific tenant by providing the tenant ID.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="tenantId">Unique identifier of the Mozu tenant.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Tenant.Tenant"/>
            </returns>
            <example>
            <code>
              var tenant = new Tenant();
              var tenant = tenant.GetTenant( tenantId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantResource.GetTenantAsync(System.Int32,System.String)">
            <summary>
            Retrieve details about a specific tenant by providing the tenant ID.
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="tenantId">Unique identifier of the Mozu tenant.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Tenant.Tenant"/>
            </returns>
            <example>
            <code>
              var tenant = new Tenant();
              var tenant = await tenant.GetTenantAsync( tenantId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.UserDataResource">
            <summary>
            Use the user data subresource to store user-level data required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.UserDataResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.GetDBValue(System.String,System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            string
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              var string = userdata.GetDBValue( dbEntryQuery,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.GetDBValueAsync(System.String,System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            string
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              var string = await userdata.GetDBValueAsync( dbEntryQuery,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.CreateDBValue(System.String,System.String)">
            <summary>
            Creates a new record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              userdata.CreateDBValue( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.CreateDBValueAsync(System.String,System.String)">
            <summary>
            Creates a new record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              await userdata.CreateDBValueAsync( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.UpdateDBValue(System.String,System.String)">
            <summary>
            Updates a record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              userdata.UpdateDBValue( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.UpdateDBValueAsync(System.String,System.String)">
            <summary>
            Updates a record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              await userdata.UpdateDBValueAsync( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.DeleteDBValue(System.String)">
            <summary>
            Removes a previously defined record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              userdata.DeleteDBValue( dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.DeleteDBValueAsync(System.String)">
            <summary>
            Removes a previously defined record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              await userdata.DeleteDBValueAsync( dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationTypeUrl.GetLocationTypesUrl">
            <summary>
            Get Resource Url for GetLocationTypes
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationTypeUrl.GetLocationTypeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetLocationType
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationTypeUrl.AddLocationTypeUrl(System.String)">
            <summary>
            Get Resource Url for AddLocationType
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationTypeUrl.UpdateLocationTypeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateLocationType
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationTypeUrl.DeleteLocationTypeUrl(System.String)">
            <summary>
            Get Resource Url for DeleteLocationType
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationUrl.GetLocationsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetLocations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationUrl.GetLocationUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetLocation
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationUrl.AddLocationUrl(System.String)">
            <summary>
            Get Resource Url for AddLocation
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationUrl.UpdateLocationUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateLocation
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationUrl.DeleteLocationUrl(System.String)">
            <summary>
            Get Resource Url for DeleteLocation
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.AppliedDiscountUrl.ApplyCouponUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for ApplyCoupon
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="couponCode">Code associated with the coupon to remove from the cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.AppliedDiscountUrl.RemoveCouponsUrl(System.String)">
            <summary>
            Get Resource Url for RemoveCoupons
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.AppliedDiscountUrl.RemoveCouponUrl(System.String,System.String)">
            <summary>
            Get Resource Url for RemoveCoupon
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="couponCode">Code associated with the coupon to remove from the cart.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.GetCartItemUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetCartItem
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.GetCartItemsUrl(System.String)">
            <summary>
            Get Resource Url for GetCartItems
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.AddItemToCartUrl(System.String)">
            <summary>
            Get Resource Url for AddItemToCart
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.UpdateCartItemQuantityUrl(System.String,System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateCartItemQuantity
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.UpdateCartItemUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateCartItem
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.RemoveAllCartItemsUrl">
            <summary>
            Get Resource Url for RemoveAllCartItems
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.DeleteCartItemUrl(System.String)">
            <summary>
            Get Resource Url for DeleteCartItem
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.ChangeMessageUrl.GetMessagesUrl(System.String)">
            <summary>
            Get Resource Url for GetMessages
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.ChangeMessageUrl.RemoveAllMessagesUrl">
            <summary>
            Get Resource Url for RemoveAllMessages
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.ChangeMessageUrl.RemoveMessageUrl(System.String)">
            <summary>
            Get Resource Url for RemoveMessage
            </summary>
            <param name="messageId">Identifier of the message to remove from the cart.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.ExtendedPropertyUrl.GetExtendedPropertiesUrl">
            <summary>
            Get Resource Url for GetExtendedProperties
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.ExtendedPropertyUrl.AddExtendedPropertiesUrl">
            <summary>
            Get Resource Url for AddExtendedProperties
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.ExtendedPropertyUrl.UpdateExtendedPropertyUrl(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for UpdateExtendedProperty
            </summary>
            <param name="key"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="upsert"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.ExtendedPropertyUrl.UpdateExtendedPropertiesUrl(System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for UpdateExtendedProperties
            </summary>
            <param name="upsert"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.ExtendedPropertyUrl.DeleteExtendedPropertiesUrl">
            <summary>
            Get Resource Url for DeleteExtendedProperties
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.ExtendedPropertyUrl.DeleteExtendedPropertyUrl(System.String)">
            <summary>
            Get Resource Url for DeleteExtendedProperty
            </summary>
            <param name="key"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.GetCartUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetCart
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.GetOrCreateCartUrl(System.String)">
            <summary>
            Get Resource Url for GetOrCreateCart
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.GetCartSummaryUrl(System.String)">
            <summary>
            Get Resource Url for GetCartSummary
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.GetUserCartSummaryUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetUserCartSummary
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.GetUserCartUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetUserCart
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.UpdateCartUrl(System.String)">
            <summary>
            Get Resource Url for UpdateCart
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.DeleteCartUrl(System.String)">
            <summary>
            Get Resource Url for DeleteCart
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.DeleteCurrentCartUrl">
            <summary>
            Get Resource Url for DeleteCurrentCart
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentUrl.GetAttributeLocalizedContentsUrl(System.String)">
            <summary>
            Get Resource Url for GetAttributeLocalizedContents
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentUrl.GetAttributeLocalizedContentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributeLocalizedContent
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentUrl.AddLocalizedContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddLocalizedContent
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentUrl.UpdateLocalizedContentsUrl(System.String)">
            <summary>
            Get Resource Url for UpdateLocalizedContents
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentUrl.UpdateLocalizedContentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateLocalizedContent
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentUrl.DeleteLocalizedContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteLocalizedContent
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleUrl.GetAttributeTypeRulesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributeTypeRules
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.GetAttributeVocabularyValuesUrl(System.String)">
            <summary>
            Get Resource Url for GetAttributeVocabularyValues
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.GetAttributeVocabularyValueLocalizedContentsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributeVocabularyValueLocalizedContents
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.GetAttributeVocabularyValueLocalizedContentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributeVocabularyValueLocalizedContent
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.GetAttributeVocabularyValueUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributeVocabularyValue
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.AddAttributeVocabularyValueLocalizedContentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for AddAttributeVocabularyValueLocalizedContent
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.AddAttributeVocabularyValueUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddAttributeVocabularyValue
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.UpdateAttributeVocabularyValuesUrl(System.String)">
            <summary>
            Get Resource Url for UpdateAttributeVocabularyValues
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.UpdateAttributeVocabularyValueLocalizedContentsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateAttributeVocabularyValueLocalizedContents
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.UpdateAttributeVocabularyValueLocalizedContentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateAttributeVocabularyValueLocalizedContent
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">The two character country code that sets the locale, such as US for United States. Sites, tenants, and catalogs use locale codes for localizing content, such as translated product text per supported country.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.UpdateAttributeVocabularyValueUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateAttributeVocabularyValue
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.DeleteAttributeVocabularyValueUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteAttributeVocabularyValue
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.DeleteAttributeVocabularyValueLocalizedContentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for DeleteAttributeVocabularyValueLocalizedContent
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.AttributeUrl.GetAttributesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributes
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.AttributeUrl.GetAttributeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAttribute
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.AttributeUrl.AddAttributeUrl(System.String)">
            <summary>
            Get Resource Url for AddAttribute
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.AttributeUrl.UpdateAttributeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateAttribute
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.AttributeUrl.DeleteAttributeUrl(System.String)">
            <summary>
            Get Resource Url for DeleteAttribute
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraUrl.GetExtrasUrl(System.Int32)">
            <summary>
            Get Resource Url for GetExtras
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraUrl.GetExtraUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for GetExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraUrl.AddExtraUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddExtra
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraUrl.UpdateExtraUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraUrl.DeleteExtraUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for DeleteExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionUrl.GetOptionsUrl(System.Int32)">
            <summary>
            Get Resource Url for GetOptions
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionUrl.GetOptionUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for GetOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionUrl.AddOptionUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddOption
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionUrl.UpdateOptionUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionUrl.DeleteOptionUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for DeleteOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyUrl.GetPropertiesUrl(System.Int32)">
            <summary>
            Get Resource Url for GetProperties
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyUrl.GetPropertyUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for GetProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyUrl.AddPropertyUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddProperty
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyUrl.UpdatePropertyUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyUrl.DeletePropertyUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for DeleteProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationUrl.GenerateProductVariationsUrl(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GenerateProductVariations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode"></param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.ProductTypeUrl.GetProductTypesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetProductTypes
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.ProductTypeUrl.GetProductTypeUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetProductType
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.ProductTypeUrl.AddProductTypeUrl(System.String)">
            <summary>
            Get Resource Url for AddProductType
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.ProductTypeUrl.UpdateProductTypeUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateProductType
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.ProductTypeUrl.DeleteProductTypeUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteProductType
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.GetCategoriesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetCategories
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.GetChildCategoriesUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetChildCategories
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.GetCategoryUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetCategory
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.AddCategoryUrl(System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for AddCategory
            </summary>
            <param name="incrementSequence">If true, when adding a new product category, set the sequence number of the new category to an increment of one integer greater than the maximum available sequence number across all product categories. If false, set the sequence number to zero.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.UpdateCategoryUrl(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for UpdateCategory
            </summary>
            <param name="cascadeVisibility">If true, when changing the display option for the category, change it for all subcategories also. Default: False.</param>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.DeleteCategoryByIdUrl(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for DeleteCategoryById
            </summary>
            <param name="cascadeDelete">If true, also delete all subcategories associated with the specified category.</param>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="forceDelete"></param>
            <param name="reassignToParent"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Discounts.DiscountTargetUrl.GetDiscountTargetUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetDiscountTarget
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Discounts.DiscountTargetUrl.UpdateDiscountTargetUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateDiscountTarget
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.GetDiscountsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetDiscounts
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.GetDiscountContentUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetDiscountContent
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.GetDiscountUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetDiscount
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.GenerateRandomCouponUrl(System.String)">
            <summary>
            Get Resource Url for GenerateRandomCoupon
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.CreateDiscountUrl(System.String)">
            <summary>
            Get Resource Url for CreateDiscount
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.UpdateDiscountContentUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateDiscountContent
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.UpdateDiscountUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateDiscount
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.DeleteDiscountUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteDiscount
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.FacetUrl.GetFacetUrl(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetFacet
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.FacetUrl.GetFacetCategoryListUrl(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetFacetCategoryList
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="includeAvailable">If true, returns a list of the attributes and categories associated with a product type that have not been defined as a facet for the category.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.FacetUrl.AddFacetUrl(System.String)">
            <summary>
            Get Resource Url for AddFacet
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.FacetUrl.UpdateFacetUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateFacet
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.FacetUrl.DeleteFacetByIdUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteFacetById
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.LocationInventoryUrl.GetLocationInventoryUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetLocationInventory
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.LocationInventoryUrl.GetLocationInventoriesUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetLocationInventories
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.LocationInventoryUrl.AddLocationInventoryUrl(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for AddLocationInventory
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="performUpserts">Query string parameter lets the service perform an update for a new or existing record. When run, the update occurs without throwing a conflict exception that the record exists. If true, the updates completes regardless of the record currently existing. By default, if no value is specified, the service assumes this value is false.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.LocationInventoryUrl.UpdateLocationInventoryUrl(System.String)">
            <summary>
            Get Resource Url for UpdateLocationInventory
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.LocationInventoryUrl.DeleteLocationInventoryUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteLocationInventory
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.MasterCatalogUrl.GetMasterCatalogsUrl(System.String)">
            <summary>
            Get Resource Url for GetMasterCatalogs
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.MasterCatalogUrl.GetMasterCatalogUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetMasterCatalog
            </summary>
            <param name="masterCatalogId">The unique identifier of the master catalog associated with the entity.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.MasterCatalogUrl.UpdateMasterCatalogUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateMasterCatalog
            </summary>
            <param name="masterCatalogId"></param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.GetProductReservationsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetProductReservations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.GetProductReservationUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetProductReservation
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.AddProductReservationsUrl(System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for AddProductReservations
            </summary>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.CommitReservationsUrl">
            <summary>
            Get Resource Url for CommitReservations
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.UpdateProductReservationsUrl(System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for UpdateProductReservations
            </summary>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.DeleteProductReservationUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteProductReservation
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.LocationInventoryUrl.GetLocationInventoriesUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetLocationInventories
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.LocationInventoryUrl.GetLocationInventoryUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetLocationInventory
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.LocationInventoryUrl.AddLocationInventoryUrl(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for AddLocationInventory
            </summary>
            <param name="performUpserts">Query string parameter lets the service perform an update for a new or existing record. When run, the update occurs without throwing a conflict exception that the record exists. If true, the updates completes regardless of the record currently existing. By default, if no value is specified, the service assumes this value is false.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.LocationInventoryUrl.UpdateLocationInventoryUrl(System.String)">
            <summary>
            Get Resource Url for UpdateLocationInventory
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.LocationInventoryUrl.DeleteLocationInventoryUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteLocationInventory
            </summary>
            <param name="locationCode">The unique, user-defined code that identifies a location. </param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.GetExtrasUrl(System.String)">
            <summary>
            Get Resource Url for GetExtras
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.GetExtraValueLocalizedDeltaPricesUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetExtraValueLocalizedDeltaPrices
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.GetExtraValueLocalizedDeltaPriceUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetExtraValueLocalizedDeltaPrice
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.GetExtraUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.AddExtraValueLocalizedDeltaPriceUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for AddExtraValueLocalizedDeltaPrice
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.AddExtraUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddExtra
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.UpdateExtraValueLocalizedDeltaPricesUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateExtraValueLocalizedDeltaPrices
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.UpdateExtraValueLocalizedDeltaPriceUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateExtraValueLocalizedDeltaPrice
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.UpdateExtraUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.DeleteExtraUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.DeleteExtraValueLocalizedDeltaPriceUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for DeleteExtraValueLocalizedDeltaPrice
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductOptionUrl.GetOptionsUrl(System.String)">
            <summary>
            Get Resource Url for GetOptions
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductOptionUrl.GetOptionUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductOptionUrl.AddOptionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddOption
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductOptionUrl.UpdateOptionUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductOptionUrl.DeleteOptionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.GetPropertiesUrl(System.String)">
            <summary>
            Get Resource Url for GetProperties
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.GetPropertyValueLocalizedContentsUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetPropertyValueLocalizedContents
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.GetPropertyValueLocalizedContentUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetPropertyValueLocalizedContent
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.GetPropertyUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.AddPropertyValueLocalizedContentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for AddPropertyValueLocalizedContent
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.AddPropertyUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddProperty
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.UpdatePropertyValueLocalizedContentsUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdatePropertyValueLocalizedContents
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.UpdatePropertyValueLocalizedContentUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdatePropertyValueLocalizedContent
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.UpdatePropertyUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.DeletePropertyUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.DeletePropertyValueLocalizedContentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for DeletePropertyValueLocalizedContent
            </summary>
            <param name="attributeFQN">Fully qualified name for an attribute.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="value">The value string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.GetProductVariationLocalizedDeltaPricesUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetProductVariationLocalizedDeltaPrices
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.GetProductVariationLocalizedDeltaPriceUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetProductVariationLocalizedDeltaPrice
            </summary>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.GetProductVariationUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetProductVariation
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.GetProductVariationsUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetProductVariations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.AddProductVariationLocalizedDeltaPriceUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for AddProductVariationLocalizedDeltaPrice
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.UpdateProductVariationLocalizedDeltaPricesUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProductVariationLocalizedDeltaPrices
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.UpdateProductVariationLocalizedDeltaPriceUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProductVariationLocalizedDeltaPrice
            </summary>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.UpdateProductVariationUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProductVariation
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.UpdateProductVariationsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProductVariations
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.DeleteProductVariationUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteProductVariation
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.DeleteProductVariationLocalizedDeltaPriceUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for DeleteProductVariationLocalizedDeltaPrice
            </summary>
            <param name="currencyCode">The three character ISO currency code, such as USD for US Dollars.</param>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.GetProductsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetProducts
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="noCount">If true, the operation does not return the TotalCount number of results.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.GetProductInCatalogsUrl(System.String)">
            <summary>
            Get Resource Url for GetProductInCatalogs
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.GetProductInCatalogUrl(System.String,System.Int32,System.String)">
            <summary>
            Get Resource Url for GetProductInCatalog
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.GetProductUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetProduct
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.AddProductUrl(System.String)">
            <summary>
            Get Resource Url for AddProduct
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.AddProductInCatalogUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddProductInCatalog
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.RenameProductCodesUrl">
            <summary>
            Get Resource Url for RenameProductCodes
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.UpdateProductInCatalogsUrl(System.String)">
            <summary>
            Get Resource Url for UpdateProductInCatalogs
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.UpdateProductInCatalogUrl(System.String,System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateProductInCatalog
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.UpdateProductUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProduct
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.DeleteProductUrl(System.String)">
            <summary>
            Get Resource Url for DeleteProduct
            </summary>
            <param name="productCode">The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.DeleteProductInCatalogUrl(System.String,System.Int32)">
            <summary>
            Get Resource Url for DeleteProductInCatalog
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.PublishingScopeUrl.DiscardDraftsUrl">
            <summary>
            Get Resource Url for DiscardDrafts
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.PublishingScopeUrl.PublishDraftsUrl">
            <summary>
            Get Resource Url for PublishDrafts
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.SearchUrl.GetSettingsUrl(System.String)">
            <summary>
            Get Resource Url for GetSettings
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.SearchUrl.UpdateSettingsUrl(System.String)">
            <summary>
            Get Resource Url for UpdateSettings
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.SoftAllocationUrl.GetSoftAllocationsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetSoftAllocations
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.SoftAllocationUrl.GetSoftAllocationUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetSoftAllocation
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="softAllocationId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.SoftAllocationUrl.AddSoftAllocationsUrl">
            <summary>
            Get Resource Url for AddSoftAllocations
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.SoftAllocationUrl.ConvertToProductReservationUrl">
            <summary>
            Get Resource Url for ConvertToProductReservation
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.SoftAllocationUrl.RenewSoftAllocationsUrl">
            <summary>
            Get Resource Url for RenewSoftAllocations
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.SoftAllocationUrl.UpdateSoftAllocationsUrl">
            <summary>
            Get Resource Url for UpdateSoftAllocations
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.SoftAllocationUrl.DeleteSoftAllocationUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteSoftAllocation
            </summary>
            <param name="softAllocationId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.CategoryUrl.GetCategoriesUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get Resource Url for GetCategories
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.CategoryUrl.GetCategoryUrl(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetCategory
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="categoryId">Unique identifier for the storefront container used to organize products.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.CategoryUrl.GetCategoryTreeUrl(System.String)">
            <summary>
            Get Resource Url for GetCategoryTree
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductSearchResultUrl.SearchUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get Resource Url for Search
            </summary>
            <param name="facet">Individually list the facet fields you want to display in a web storefront product search.</param>
            <param name="facetFieldRangeQuery">Display a range facet not specified in a template in a web storefront product search by listing the facet field and the range to display.</param>
            <param name="facetHierDepth">If filtering using category facets in a hierarchy, the number of category hierarchy levels to return for the facet. This option is only available for category facets.</param>
            <param name="facetHierPrefix">If filtering using category facets in a hierarchy, the parent categories you want to skip in the storefront product search. This parameter is only available for category facets.</param>
            <param name="facetHierValue">If filtering using category facets in a hierarchy, the category in the hierarchy to begin faceting on. This parameter is only available for category facets.</param>
            <param name="facetPageSize">The number of facet values to return for one or more facets.</param>
            <param name="facetSettings">Settings reserved for future facet search functionality on a web storefront product search.</param>
            <param name="facetStartIndex">When paging through multiple facets, the startIndex value for each facet.</param>
            <param name="facetTemplate">The facet template to use on the storefront. A template displays all facets associated with the template on the web storefront product search. Currently, only category-level facet templates are available.</param>
            <param name="facetTemplateSubset">Display a subset of the facets defined in the template specified in facetTemplate parameter.</param>
            <param name="facetValueFilter">The facet values to apply to the filter.</param>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query">A query entered for searches and facet range.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="searchSettings"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductSearchResultUrl.SuggestUrl(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for Suggest
            </summary>
            <param name="groups"></param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query">A query entered for searches and facet range.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.GetProductsUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get Resource Url for GetProducts
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.GetProductInventoryUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetProductInventory
            </summary>
            <param name="locationCodes">Array of location codes for which to retrieve product inventory information.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.GetProductUrl(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetProduct
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="supressOutOfStock404"></param>
            <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.ConfiguredProductUrl(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for ConfiguredProduct
            </summary>
            <param name="includeOptionDetails">If true, the response returns details about the product. If false, returns a product summary such as the product name, price, and sale price.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.ValidateProductUrl(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for ValidateProduct
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.ValidateDiscountsUrl(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for ValidateDiscounts
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="customerAccountId">The unique identifier of the customer account for which to retrieve wish lists.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.GetProductInventoriesUrl(System.String)">
            <summary>
            Get Resource Url for GetProductInventories
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ShippingUrl.GetRatesUrl(System.String)">
            <summary>
            Get Resource Url for GetRates
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelGroupUrl.GetChannelGroupsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetChannelGroups
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelGroupUrl.GetChannelGroupUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetChannelGroup
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelGroupUrl.CreateChannelGroupUrl(System.String)">
            <summary>
            Get Resource Url for CreateChannelGroup
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelGroupUrl.UpdateChannelGroupUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateChannelGroup
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelGroupUrl.DeleteChannelGroupUrl(System.String)">
            <summary>
            Get Resource Url for DeleteChannelGroup
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelUrl.GetChannelsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetChannels
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelUrl.GetChannelUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetChannel
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelUrl.CreateChannelUrl(System.String)">
            <summary>
            Get Resource Url for CreateChannel
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelUrl.UpdateChannelUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateChannel
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelUrl.DeleteChannelUrl(System.String)">
            <summary>
            Get Resource Url for DeleteChannel
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CardUrl.GetAccountCardUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for GetAccountCard
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CardUrl.GetAccountCardsUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetAccountCards
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CardUrl.AddAccountCardUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddAccountCard
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CardUrl.UpdateAccountCardUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateAccountCard
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CardUrl.DeleteAccountCardUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for DeleteAccountCard
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerAttributeUrl.GetAccountAttributeUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for GetAccountAttribute
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerAttributeUrl.GetAccountAttributesUrl(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAccountAttributes
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerAttributeUrl.AddAccountAttributeUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddAccountAttribute
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerAttributeUrl.UpdateAccountAttributeUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateAccountAttribute
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerAttributeUrl.DeleteAccountAttributeUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for DeleteAccountAttribute
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerContactUrl.GetAccountContactUrl(System.Int32,System.Int32,System.String)">
            <summary>
            Get Resource Url for GetAccountContact
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerContactUrl.GetAccountContactsUrl(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAccountContacts
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerContactUrl.AddAccountContactUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddAccountContact
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerContactUrl.UpdateAccountContactUrl(System.Int32,System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateAccountContact
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerContactUrl.DeleteAccountContactUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for DeleteAccountContact
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerNoteUrl.GetAccountNoteUrl(System.Int32,System.Int32,System.String)">
            <summary>
            Get Resource Url for GetAccountNote
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerNoteUrl.GetAccountNotesUrl(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAccountNotes
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerNoteUrl.AddAccountNoteUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddAccountNote
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerNoteUrl.UpdateAccountNoteUrl(System.Int32,System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateAccountNote
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerNoteUrl.DeleteAccountNoteUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for DeleteAccountNote
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerSegmentUrl.GetAccountSegmentsUrl(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAccountSegments
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.TransactionUrl.GetTransactionsUrl(System.Int32)">
            <summary>
            Get Resource Url for GetTransactions
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.TransactionUrl.AddTransactionUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddTransaction
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.TransactionUrl.RemoveTransactionUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for RemoveTransaction
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="transactionId">Unique identifier of the transaction to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.AddressValidationRequestUrl.ValidateAddressUrl(System.String)">
            <summary>
            Get Resource Url for ValidateAddress
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Attributedefinition.AttributeUrl.GetAttributesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributes
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Attributedefinition.AttributeUrl.GetAttributeVocabularyValuesUrl(System.String)">
            <summary>
            Get Resource Url for GetAttributeVocabularyValues
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Attributedefinition.AttributeUrl.GetAttributeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAttribute
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Credits.CreditAuditEntryUrl.GetAuditEntriesUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAuditEntries
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Credits.CreditTransactionUrl.GetTransactionsUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetTransactions
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Credits.CreditTransactionUrl.AddTransactionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddTransaction
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CreditUrl.GetCreditsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetCredits
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CreditUrl.GetCreditUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetCredit
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CreditUrl.AddCreditUrl(System.String)">
            <summary>
            Get Resource Url for AddCredit
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CreditUrl.AssociateCreditToShopperUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AssociateCreditToShopper
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CreditUrl.ResendCreditCreatedEmailUrl(System.String)">
            <summary>
            Get Resource Url for ResendCreditCreatedEmail
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CreditUrl.UpdateCreditUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateCredit
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CreditUrl.DeleteCreditUrl(System.String)">
            <summary>
            Get Resource Url for DeleteCredit
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.GetAccountsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetAccounts
            </summary>
            <param name="fields">The fields to include in the response.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="isAnonymous">If true, retrieve anonymous shopper accounts in the response.</param>
            <param name="pageSize"></param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.GetLoginStateUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetLoginState
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.GetAccountUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetAccount
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.AddAccountUrl(System.String)">
            <summary>
            Get Resource Url for AddAccount
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.ChangePasswordUrl(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for ChangePassword
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="unlockAccount"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.AddLoginToExistingCustomerUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddLoginToExistingCustomer
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.RecomputeCustomerLifetimeValueUrl(System.Int32)">
            <summary>
            Get Resource Url for RecomputeCustomerLifetimeValue
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.SetLoginLockedUrl(System.Int32)">
            <summary>
            Get Resource Url for SetLoginLocked
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.SetPasswordChangeRequiredUrl(System.Int32)">
            <summary>
            Get Resource Url for SetPasswordChangeRequired
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.AddAccountAndLoginUrl(System.String)">
            <summary>
            Get Resource Url for AddAccountAndLogin
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.AddAccountsUrl(System.String)">
            <summary>
            Get Resource Url for AddAccounts
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.ChangePasswordsUrl(System.String)">
            <summary>
            Get Resource Url for ChangePasswords
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.GetLoginStateByEmailAddressUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetLoginStateByEmailAddress
            </summary>
            <param name="emailAddress">The email address associated with the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.GetLoginStateByUserNameUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetLoginStateByUserName
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userName">The user name associated with the customer account.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.ResetPasswordUrl">
            <summary>
            Get Resource Url for ResetPassword
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.UpdateAccountUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateAccount
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.DeleteAccountUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteAccount
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAuthTicketUrl.CreateAnonymousShopperAuthTicketUrl">
            <summary>
            Get Resource Url for CreateAnonymousShopperAuthTicket
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAuthTicketUrl.CreateUserAuthTicketUrl(System.String)">
            <summary>
            Get Resource Url for CreateUserAuthTicket
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAuthTicketUrl.RefreshUserAuthTicketUrl(System.String,System.String)">
            <summary>
            Get Resource Url for RefreshUserAuthTicket
            </summary>
            <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerSegmentUrl.GetSegmentsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetSegments
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerSegmentUrl.GetSegmentUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetSegment
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerSegmentUrl.AddSegmentUrl(System.String)">
            <summary>
            Get Resource Url for AddSegment
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerSegmentUrl.AddSegmentAccountsUrl(System.Int32)">
            <summary>
            Get Resource Url for AddSegmentAccounts
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerSegmentUrl.UpdateSegmentUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateSegment
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerSegmentUrl.DeleteSegmentUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteSegment
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerSegmentUrl.RemoveSegmentAccountUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for RemoveSegmentAccount
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.VisitUrl.GetVisitsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetVisits
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.VisitUrl.GetVisitUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetVisit
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="visitId">Unique identifier of the customer visit to update.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.VisitUrl.AddVisitUrl(System.String)">
            <summary>
            Get Resource Url for AddVisit
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.VisitUrl.UpdateVisitUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateVisit
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="visitId">Unique identifier of the customer visit to update.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.InStockNotificationSubscriptionUrl.GetInStockNotificationSubscriptionsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetInStockNotificationSubscriptions
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.InStockNotificationSubscriptionUrl.GetInStockNotificationSubscriptionUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetInStockNotificationSubscription
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.InStockNotificationSubscriptionUrl.AddInStockNotificationSubscriptionUrl(System.String)">
            <summary>
            Get Resource Url for AddInStockNotificationSubscription
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.InStockNotificationSubscriptionUrl.DeleteInStockNotificationSubscriptionUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteInStockNotificationSubscription
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.LocationUrl.GetLocationUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetLocation
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.LocationUrl.GetLocationsInUsageTypeUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetLocationsInUsageType
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="locationUsageType">System-defined location usage type code, which is DS for direct ship, SP for in-store pickup, or storeFinder.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.LocationUrl.GetDirectShipLocationUrl(System.String)">
            <summary>
            Get Resource Url for GetDirectShipLocation
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.LocationUrl.GetInStorePickupLocationUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetInStorePickupLocation
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.LocationUrl.GetInStorePickupLocationsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetInStorePickupLocations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AdjustmentUrl.ApplyShippingAdjustmentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for ApplyShippingAdjustment
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AdjustmentUrl.ApplyAdjustmentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for ApplyAdjustment
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AdjustmentUrl.RemoveShippingAdjustmentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for RemoveShippingAdjustment
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AdjustmentUrl.RemoveAdjustmentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for RemoveAdjustment
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AppliedDiscountUrl.ApplyCouponUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for ApplyCoupon
            </summary>
            <param name="couponCode">Alphanumeric code associated with the coupon or promotion that results in a discounted price.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AppliedDiscountUrl.RemoveCouponUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for RemoveCoupon
            </summary>
            <param name="couponCode">Alphanumeric code associated with the coupon or promotion that results in a discounted price.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AppliedDiscountUrl.RemoveCouponsUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for RemoveCoupons
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeUrl.GetAttributesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributes
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeUrl.GetAttributeVocabularyValuesUrl(System.String)">
            <summary>
            Get Resource Url for GetAttributeVocabularyValues
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeUrl.GetAttributeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAttribute
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.BillingInfoUrl.GetBillingInfoUrl(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetBillingInfo
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.BillingInfoUrl.SetBillingInfoUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for SetBillingInfo
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.DigitalPackageUrl.GetAvailableDigitalPackageFulfillmentActionsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAvailableDigitalPackageFulfillmentActions
            </summary>
            <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.DigitalPackageUrl.GetDigitalPackageUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetDigitalPackage
            </summary>
            <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.DigitalPackageUrl.CreateDigitalPackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreateDigitalPackage
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.DigitalPackageUrl.UpdateDigitalPackageUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateDigitalPackage
            </summary>
            <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.DigitalPackageUrl.DeleteDigitalPackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteDigitalPackage
            </summary>
            <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ExtendedPropertyUrl.GetExtendedPropertiesUrl(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for GetExtendedProperties
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ExtendedPropertyUrl.AddExtendedPropertiesUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for AddExtendedProperties
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ExtendedPropertyUrl.UpdateExtendedPropertyUrl(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for UpdateExtendedProperty
            </summary>
            <param name="key"></param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="upsert"></param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ExtendedPropertyUrl.UpdateExtendedPropertiesUrl(System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for UpdateExtendedProperties
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="upsert"></param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ExtendedPropertyUrl.DeleteExtendedPropertyUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for DeleteExtendedProperty
            </summary>
            <param name="key"></param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ExtendedPropertyUrl.DeleteExtendedPropertiesUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for DeleteExtendedProperties
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.FulfillmentActionUrl.PerformFulfillmentActionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for PerformFulfillmentAction
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.FulfillmentActionUrl.ResendPackageFulfillmentEmailUrl(System.String,System.String)">
            <summary>
            Get Resource Url for ResendPackageFulfillmentEmail
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.FulfillmentInfoUrl.GetFulfillmentInfoUrl(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetFulfillmentInfo
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.FulfillmentInfoUrl.SetFulFillmentInfoUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for SetFulFillmentInfo
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderAttributeUrl.GetOrderAttributesUrl(System.String)">
            <summary>
            Get Resource Url for GetOrderAttributes
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderAttributeUrl.CreateOrderAttributesUrl(System.String)">
            <summary>
            Get Resource Url for CreateOrderAttributes
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderAttributeUrl.UpdateOrderAttributesUrl(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for UpdateOrderAttributes
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="removeMissing">If true, the operation removes missing properties so that the updated order attributes will not show properties with a null value.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.GetOrderItemViaLineIdUrl(System.String,System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetOrderItemViaLineId
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="lineId"></param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.GetOrderItemUrl(System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetOrderItem
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.GetOrderItemsUrl(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetOrderItems
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.CreateOrderItemUrl(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for CreateOrderItem
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.UpdateOrderItemDiscountUrl(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOrderItemDiscount
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.UpdateItemDutyUrl(System.String,System.String,System.Decimal,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateItemDuty
            </summary>
            <param name="dutyAmount"></param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.UpdateItemFulfillmentUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateItemFulfillment
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.UpdateItemProductPriceUrl(System.String,System.String,System.Decimal,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateItemProductPrice
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="price">The override price to specify for this item in the specified order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.UpdateItemQuantityUrl(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateItemQuantity
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.DeleteOrderItemUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for DeleteOrderItem
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderNoteUrl.GetOrderNotesUrl(System.String)">
            <summary>
            Get Resource Url for GetOrderNotes
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderNoteUrl.GetOrderNoteUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetOrderNote
            </summary>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderNoteUrl.CreateOrderNoteUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreateOrderNote
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderNoteUrl.UpdateOrderNoteUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOrderNote
            </summary>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderNoteUrl.DeleteOrderNoteUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteOrderNote
            </summary>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderValidationResultUrl.GetValidationResultsUrl(System.String)">
            <summary>
            Get Resource Url for GetValidationResults
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderValidationResultUrl.AddValidationResultUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddValidationResult
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.GetAvailablePackageFulfillmentActionsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAvailablePackageFulfillmentActions
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.GetPackageLabelUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPackageLabel
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.GetPackageUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetPackage
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.CreatePackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreatePackage
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.UpdatePackageUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdatePackage
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.DeletePackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeletePackage
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PaymentUrl.GetPaymentsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPayments
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PaymentUrl.GetAvailablePaymentActionsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAvailablePaymentActions
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PaymentUrl.GetPaymentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetPayment
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PaymentUrl.PerformPaymentActionUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for PerformPaymentAction
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PaymentUrl.CreatePaymentActionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreatePaymentAction
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PickupUrl.GetAvailablePickupFulfillmentActionsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAvailablePickupFulfillmentActions
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PickupUrl.GetPickupUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetPickup
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PickupUrl.CreatePickupUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreatePickup
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PickupUrl.UpdatePickupUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdatePickup
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PickupUrl.DeletePickupUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeletePickup
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.RefundUrl.CreateRefundUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreateRefund
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.RefundUrl.ResendRefundEmailUrl(System.String,System.String)">
            <summary>
            Get Resource Url for ResendRefundEmail
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="refundId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShipmentUrl.GetShipmentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetShipment
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShipmentUrl.GetAvailableShipmentMethodsUrl(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for GetAvailableShipmentMethods
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShipmentUrl.CreatePackageShipmentsUrl(System.String)">
            <summary>
            Get Resource Url for CreatePackageShipments
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShipmentUrl.DeleteShipmentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteShipment
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.GetOrdersUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetOrders
            </summary>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.GetAvailableActionsUrl(System.String)">
            <summary>
            Get Resource Url for GetAvailableActions
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.GetTaxableOrdersUrl(System.String)">
            <summary>
            Get Resource Url for GetTaxableOrders
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.GetOrderUrl(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetOrder
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.CreateOrderFromCartUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreateOrderFromCart
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.CreateOrderUrl(System.String)">
            <summary>
            Get Resource Url for CreateOrder
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.PerformOrderActionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for PerformOrderAction
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.UpdateOrderDiscountUrl(System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOrderDiscount
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.DeleteOrderDraftUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteOrderDraft
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="version">Determines whether or not to check versioning of items for concurrency purposes.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.ResendOrderConfirmationEmailUrl(System.String)">
            <summary>
            Get Resource Url for ResendOrderConfirmationEmail
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.ChangeOrderUserIdUrl(System.String,System.String)">
            <summary>
            Get Resource Url for ChangeOrderUserId
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.UpdateOrderUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOrder
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Payments.PublicCardUrl.CreateUrl">
            <summary>
            Get Resource Url for Create
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Payments.PublicCardUrl.UpdateUrl(System.String)">
            <summary>
            Get Resource Url for Update
            </summary>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Payments.PublicCardUrl.DeleteUrl(System.String)">
            <summary>
            Get Resource Url for Delete
            </summary>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.PackageUrl.GetPackageLabelUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPackageLabel
            </summary>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.PackageUrl.GetPackageUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetPackage
            </summary>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.PackageUrl.CreatePackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreatePackage
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.PackageUrl.UpdatePackageUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdatePackage
            </summary>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.PackageUrl.DeletePackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeletePackage
            </summary>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.ShipmentUrl.GetShipmentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetShipment
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.ShipmentUrl.CreatePackageShipmentsUrl(System.String)">
            <summary>
            Get Resource Url for CreatePackageShipments
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.ShipmentUrl.DeleteShipmentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteShipment
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetReturnsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetReturns
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetAvailableReturnActionsUrl(System.String)">
            <summary>
            Get Resource Url for GetAvailableReturnActions
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetReturnItemUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetReturnItem
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="returnItemId">Unique identifier of the return item whose details you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetReturnItemsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetReturnItems
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetAvailablePaymentActionsForReturnUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAvailablePaymentActionsForReturn
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetPaymentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetPayment
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetPaymentsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPayments
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetReturnUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetReturn
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.CreateReturnUrl(System.String)">
            <summary>
            Get Resource Url for CreateReturn
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.CreateReturnItemUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreateReturnItem
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.PerformPaymentActionForReturnUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for PerformPaymentActionForReturn
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.CreatePaymentActionForReturnUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreatePaymentActionForReturn
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.PerformReturnActionsUrl(System.String)">
            <summary>
            Get Resource Url for PerformReturnActions
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.UpdateReturnUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateReturn
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.ResendReturnEmailUrl">
            <summary>
            Get Resource Url for ResendReturnEmail
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.DeleteOrderItemUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteOrderItem
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <param name="returnItemId">Unique identifier of the return item whose details you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.DeleteReturnUrl(System.String)">
            <summary>
            Get Resource Url for DeleteReturn
            </summary>
            <param name="returnId">Unique identifier of the return whose items you want to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.ApplicationUrl.ThirdPartyGetApplicationUrl(System.String)">
            <summary>
            Get Resource Url for ThirdPartyGetApplication
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.ApplicationUrl.ThirdPartyUpdateApplicationUrl(System.String)">
            <summary>
            Get Resource Url for ThirdPartyUpdateApplication
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.CustomerCheckoutSettingsUrl.GetCustomerCheckoutSettingsUrl(System.String)">
            <summary>
            Get Resource Url for GetCustomerCheckoutSettings
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.CustomerCheckoutSettingsUrl.UpdateCustomerCheckoutSettingsUrl(System.String)">
            <summary>
            Get Resource Url for UpdateCustomerCheckoutSettings
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.PaymentSettingsUrl.GetThirdPartyPaymentWorkflowsUrl">
            <summary>
            Get Resource Url for GetThirdPartyPaymentWorkflows
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.CheckoutSettingsUrl.GetCheckoutSettingsUrl(System.String)">
            <summary>
            Get Resource Url for GetCheckoutSettings
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.General.TaxableTerritoryUrl.GetTaxableTerritoriesUrl">
            <summary>
            Get Resource Url for GetTaxableTerritories
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.General.TaxableTerritoryUrl.AddTaxableTerritoryUrl(System.String)">
            <summary>
            Get Resource Url for AddTaxableTerritory
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.General.TaxableTerritoryUrl.UpdateTaxableTerritoriesUrl">
            <summary>
            Get Resource Url for UpdateTaxableTerritories
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.GeneralSettingsUrl.GetGeneralSettingsUrl(System.String)">
            <summary>
            Get Resource Url for GetGeneralSettings
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.GeneralSettingsUrl.UpdateGeneralSettingsUrl(System.String)">
            <summary>
            Get Resource Url for UpdateGeneralSettings
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.LocationUsageUrl.GetLocationUsagesUrl(System.String)">
            <summary>
            Get Resource Url for GetLocationUsages
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.LocationUsageUrl.GetLocationUsageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetLocationUsage
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.LocationUsageUrl.UpdateLocationUsageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateLocationUsage
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.SiteShippingHandlingFeeUrl.GetOrderHandlingFeeUrl(System.String)">
            <summary>
            Get Resource Url for GetOrderHandlingFee
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.SiteShippingHandlingFeeUrl.CreateOrderHandlingFeeUrl(System.String)">
            <summary>
            Get Resource Url for CreateOrderHandlingFee
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.SiteShippingHandlingFeeUrl.UpdateOrderHandlingFeeUrl(System.String)">
            <summary>
            Get Resource Url for UpdateOrderHandlingFee
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.SiteShippingSettingsUrl.GetSiteShippingSettingsUrl(System.String)">
            <summary>
            Get Resource Url for GetSiteShippingSettings
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.GetWishlistItemUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetWishlistItem
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.GetWishlistItemsUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetWishlistItems
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.GetWishlistItemsByWishlistNameUrl(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetWishlistItemsByWishlistName
            </summary>
            <param name="customerAccountId">The unique identifier of the customer account for which to retrieve wish lists.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="wishlistName">The name of the wish list to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.AddItemToWishlistUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddItemToWishlist
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.UpdateWishlistItemQuantityUrl(System.String,System.String,System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateWishlistItemQuantity
            </summary>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.UpdateWishlistItemUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateWishlistItem
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.RemoveAllWishlistItemsUrl(System.String)">
            <summary>
            Get Resource Url for RemoveAllWishlistItems
            </summary>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.DeleteWishlistItemUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteWishlistItem
            </summary>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.WishlistUrl.GetWishlistsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetWishlists
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.WishlistUrl.GetWishlistUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetWishlist
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.WishlistUrl.GetWishlistByNameUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for GetWishlistByName
            </summary>
            <param name="customerAccountId">The unique identifier of the customer account for which to retrieve wish lists.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistName">The name of the wish list to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.WishlistUrl.CreateWishlistUrl(System.String)">
            <summary>
            Get Resource Url for CreateWishlist
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.WishlistUrl.UpdateWishlistUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateWishlist
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.WishlistUrl.DeleteWishlistUrl(System.String)">
            <summary>
            Get Resource Url for DeleteWishlist
            </summary>
            <param name="wishlistId">Unique identifier of the wish list.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentDraftSummaryUrl.ListDocumentDraftSummariesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get Resource Url for ListDocumentDraftSummaries
            </summary>
            <param name="documentLists">List of document lists that contain documents to delete.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentDraftSummaryUrl.DeleteDocumentDraftsUrl(System.String)">
            <summary>
            Get Resource Url for DeleteDocumentDrafts
            </summary>
            <param name="documentLists">List of document lists that contain documents to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentDraftSummaryUrl.PublishDocumentsUrl(System.String)">
            <summary>
            Get Resource Url for PublishDocuments
            </summary>
            <param name="documentLists">List of document lists that contain documents to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentTreeUrl.GetTreeDocumentContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetTreeDocumentContent
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="documentName">The name of the document in the site.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentTreeUrl.GetTreeDocumentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetTreeDocument
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="documentName">The name of the document in the site.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentTreeUrl.UpdateTreeDocumentContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateTreeDocumentContent
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="documentName">The name of the document in the site.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentTreeUrl.DeleteTreeDocumentContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteTreeDocumentContent
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="documentName">The name of the document in the site.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.GetDocumentContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetDocumentContent
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.GetDocumentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetDocument
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.GetDocumentsUrl(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetDocuments
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.CreateDocumentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreateDocument
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.UpdateDocumentContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateDocumentContent
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.UpdateDocumentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateDocument
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.DeleteDocumentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteDocument
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.DeleteDocumentContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteDocumentContent
            </summary>
            <param name="documentId">Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.</param>
            <param name="documentListName">Name of content documentListName to delete</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.FacetUrl.GetFacetsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetFacets
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="propertyName">The property name associated with the facets to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.ViewUrl.GetViewDocumentsUrl(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetViewDocuments
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListTypeUrl.CreateDocumentListTypeUrl(System.String)">
            <summary>
            Get Resource Url for CreateDocumentListType
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListTypeUrl.UpdateDocumentListTypeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateDocumentListType
            </summary>
            <param name="documentListTypeFQN"></param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListUrl.GetDocumentListsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetDocumentLists
            </summary>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListUrl.GetDocumentListUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetDocumentList
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListUrl.CreateDocumentListUrl(System.String)">
            <summary>
            Get Resource Url for CreateDocumentList
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListUrl.UpdateDocumentListUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateDocumentList
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListUrl.DeleteDocumentListUrl(System.String)">
            <summary>
            Get Resource Url for DeleteDocumentList
            </summary>
            <param name="documentListName">Name of content documentListName to delete</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentTypeUrl.GetDocumentTypesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetDocumentTypes
            </summary>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentTypeUrl.GetDocumentTypeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetDocumentType
            </summary>
            <param name="documentTypeName">The name of the document type to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentTypeUrl.CreateDocumentTypeUrl(System.String)">
            <summary>
            Get Resource Url for CreateDocumentType
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentTypeUrl.UpdateDocumentTypeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateDocumentType
            </summary>
            <param name="documentTypeName">The name of the document type to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.PropertyTypeUrl.GetPropertyTypesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetPropertyTypes
            </summary>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.PropertyTypeUrl.GetPropertyTypeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPropertyType
            </summary>
            <param name="propertyTypeName">The name of the property type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.PropertyTypeUrl.CreatePropertyTypeUrl(System.String)">
            <summary>
            Get Resource Url for CreatePropertyType
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.PropertyTypeUrl.UpdatePropertyTypeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdatePropertyType
            </summary>
            <param name="propertyTypeName">The name of the property type.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.PropertyTypeUrl.DeletePropertyTypeUrl(System.String)">
            <summary>
            Get Resource Url for DeletePropertyType
            </summary>
            <param name="propertyTypeName">The name of the property type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Event.EventNotificationUrl.GetEventsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetEvents
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Event.EventNotificationUrl.GetEventUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetEvent
            </summary>
            <param name="eventId">The unique identifier of the event being retrieved. An event is a notification about a create, read, update, or delete on an order, product, discount or category.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Event.Push.Subscriptions.EventDeliverySummaryUrl.GetDeliveryAttemptSummaryUrl(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetDeliveryAttemptSummary
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="subscriptionId">Unique identifier for a subscription, such as subscribing tenants for an event or to receive a notification.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Event.Push.Subscriptions.EventDeliverySummaryUrl.GetDeliveryAttemptSummariesUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetDeliveryAttemptSummaries
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="subscriptionId">Unique identifier for a subscription, such as subscribing tenants for an event or to receive a notification.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Event.Push.SubscriptionUrl.GetSubscriptionsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetSubscriptions
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Adminuser.AdminUserUrl.GetTenantScopesForUserUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetTenantScopesForUser
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Adminuser.AdminUserUrl.GetUserUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetUser
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Adminuser.TenantAdminUserAuthTicketUrl.CreateUserAuthTicketUrl(System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for CreateUserAuthTicket
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="tenantId">Unique identifier of the development or production tenant for which to generate the user authentication ticket.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Adminuser.TenantAdminUserAuthTicketUrl.RefreshAuthTicketUrl(System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for RefreshAuthTicket
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="tenantId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Adminuser.TenantAdminUserAuthTicketUrl.DeleteUserAuthTicketUrl(System.String)">
            <summary>
            Get Resource Url for DeleteUserAuthTicket
            </summary>
            <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Applications.AuthTicketUrl.AuthenticateAppUrl(System.String)">
            <summary>
            Get Resource Url for AuthenticateApp
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Applications.AuthTicketUrl.RefreshAppAuthTicketUrl(System.String)">
            <summary>
            Get Resource Url for RefreshAppAuthTicket
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Applications.AuthTicketUrl.DeleteAppAuthTicketUrl(System.String)">
            <summary>
            Get Resource Url for DeleteAppAuthTicket
            </summary>
            <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ApplicationUrl.GetAppPackageNamesUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAppPackageNames
            </summary>
            <param name="applicationKey"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ApplicationUrl.GetAppVersionsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAppVersions
            </summary>
            <param name="nsAndAppId"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ApplicationUrl.GetPackageFileMetadataUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetPackageFileMetadata
            </summary>
            <param name="applicationKey"></param>
            <param name="filepath"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ApplicationUrl.GetPackageMetadataUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPackageMetadata
            </summary>
            <param name="applicationKey"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ApplicationUrl.UpsertPackageFileUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpsertPackageFile
            </summary>
            <param name="applicationKey"></param>
            <param name="filepath"></param>
            <param name="lastModifiedTime"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ApplicationUrl.RenamePackageFileUrl(System.String,System.String)">
            <summary>
            Get Resource Url for RenamePackageFile
            </summary>
            <param name="applicationKey"></param>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ApplicationUrl.DeletePackageFileUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeletePackageFile
            </summary>
            <param name="applicationKey"></param>
            <param name="filepath"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Developer.DeveloperAdminUserAuthTicketUrl.CreateDeveloperUserAuthTicketUrl(System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for CreateDeveloperUserAuthTicket
            </summary>
            <param name="developerAccountId">Unique identifier of the developer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Developer.DeveloperAdminUserAuthTicketUrl.RefreshDeveloperAuthTicketUrl(System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for RefreshDeveloperAuthTicket
            </summary>
            <param name="developerAccountId">Unique identifier of the developer account.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Developer.DeveloperAdminUserAuthTicketUrl.DeleteUserAuthTicketUrl(System.String)">
            <summary>
            Get Resource Url for DeleteUserAuthTicket
            </summary>
            <param name="refreshToken">Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.EntityContainerUrl.GetEntityContainerUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetEntityContainer
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.EntityContainerUrl.GetEntityContainersUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetEntityContainers
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.EntityUrl.GetEntityUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetEntity
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.EntityUrl.GetEntitiesUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetEntities
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.EntityUrl.InsertEntityUrl(System.String,System.String)">
            <summary>
            Get Resource Url for InsertEntity
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.EntityUrl.UpdateEntityUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateEntity
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.EntityUrl.DeleteEntityUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteEntity
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.GetViewEntityUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetViewEntity
            </summary>
            <param name="entityId">Unique identifier for an entity, which defines the schema, rules, and formats for JSON entities within the MZDB (Mozu Mongo DB).</param>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.GetViewEntitiesUrl(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get Resource Url for GetViewEntities
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.GetViewEntityContainerUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetViewEntityContainer
            </summary>
            <param name="entityId">Unique identifier for an entity, which defines the schema, rules, and formats for JSON entities within the MZDB (Mozu Mongo DB).</param>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.GetViewEntityContainersUrl(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get Resource Url for GetViewEntityContainers
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.GetEntityListViewUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetEntityListView
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.GetEntityListViewsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetEntityListViews
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.CreateEntityListViewUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreateEntityListView
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.UpdateEntityListViewUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateEntityListView
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.DeleteEntityListViewUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteEntityListView
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="viewName">The name for a view. Views are used to render data in Mozu, such as document and entity lists. Each view includes a schema, format, name, ID, and associated data types to render.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.EntityListUrl.GetEntityListsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetEntityLists
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.EntityListUrl.GetEntityListUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetEntityList
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.EntityListUrl.CreateEntityListUrl(System.String)">
            <summary>
            Get Resource Url for CreateEntityList
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.EntityListUrl.UpdateEntityListUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateEntityList
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.EntityListUrl.DeleteEntityListUrl(System.String)">
            <summary>
            Get Resource Url for DeleteEntityList
            </summary>
            <param name="entityListFullName">The full name of the EntityList including namespace in name@nameSpace format</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetAddressSchemaUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAddressSchema
            </summary>
            <param name="countryCode">The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetAddressSchemasUrl(System.String)">
            <summary>
            Get Resource Url for GetAddressSchemas
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetBehavior
            </summary>
            <param name="behaviorId">Unique identifier of the behavior.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorCategoryUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetBehaviorCategory
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorCategoriesUrl(System.String)">
            <summary>
            Get Resource Url for GetBehaviorCategories
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetBehaviors
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="userType">The user type associated with the behaviors to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetContentLocalesUrl(System.String)">
            <summary>
            Get Resource Url for GetContentLocales
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetCountriesUrl(System.String)">
            <summary>
            Get Resource Url for GetCountries
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetCountriesWithStatesUrl(System.String)">
            <summary>
            Get Resource Url for GetCountriesWithStates
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetCurrenciesUrl(System.String)">
            <summary>
            Get Resource Url for GetCurrencies
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetTimeZonesUrl(System.String)">
            <summary>
            Get Resource Url for GetTimeZones
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetTopLevelDomainsUrl(System.String)">
            <summary>
            Get Resource Url for GetTopLevelDomains
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetUnitsOfMeasureUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetUnitsOfMeasure
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.SiteDataUrl.GetDBValueUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.SiteDataUrl.CreateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for CreateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.SiteDataUrl.UpdateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for UpdateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.SiteDataUrl.DeleteDBValueUrl(System.String)">
            <summary>
            Get Resource Url for DeleteDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantDataUrl.GetDBValueUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantDataUrl.CreateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for CreateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantDataUrl.UpdateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for UpdateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantDataUrl.DeleteDBValueUrl(System.String)">
            <summary>
            Get Resource Url for DeleteDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantExtensionsUrl.GetExtensionsUrl(System.String)">
            <summary>
            Get Resource Url for GetExtensions
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantExtensionsUrl.UpdateExtensionsUrl(System.String)">
            <summary>
            Get Resource Url for UpdateExtensions
            </summary>
            <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantUrl.GetTenantUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetTenant
            </summary>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <param name="tenantId">Unique identifier of the Mozu tenant.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.UserDataUrl.GetDBValueUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="responseFields">Use this field to include those fields which are not included by default.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.UserDataUrl.CreateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for CreateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.UserDataUrl.UpdateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for UpdateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.UserDataUrl.DeleteDBValueUrl(System.String)">
            <summary>
            Get Resource Url for DeleteDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
    </members>
</doc>
